{"version":3,"sources":["pages/ChangePasswordAccount/ChangePasswordAccount.tsx","pages/ChangePasswordAccount/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","assets/images/image-auth-banner.png","containers/AuthForm/AuthForm.tsx","containers/AuthForm/index.ts"],"names":["ChangePasswordAccount","Form","useForm","form","dispatch","useDispatch","changePasswordLoading","useSelector","state","loadingReducer","EAuthControllerAction","CHANGE_PASSWORD","useState","passwordValue","setPasswordValue","handleChangePasswordSuccess","showNotification","ETypeNotification","SUCCESS","className","HeaderSkew","title","AuthForm","onFinish","values","body","password","oldPassword","newPassword","changePasswordAction","request","Item","name","rules","validationRules","required","Input","type","placeholder","prefix","Icon","EIconName","Lock","onChange","e","value","target","confirmPassword","style","marginTop","Button","htmlType","loading","center","onClick","classNames","children","src","ImageAuthBanner","alt"],"mappings":"yQAuFeA,EAtEyB,WACtC,MAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAWC,cAEXC,EAAwBC,aAC5B,SAACC,GAAD,OAAuBA,EAAMC,eAAeC,IAAsBC,oBAGpE,EAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KAgBMC,EAA8B,WAClCC,YAAiBC,IAAkBC,QAAS,sDAG9C,OACE,sBAAKC,UAAU,wCAAf,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,qCAElB,eAACC,EAAA,EAAD,WACE,sBAAKH,UAAU,kBAAf,UACE,qBAAKA,UAAU,wBAAf,mDACA,qBAAKA,UAAU,8BAAf,+IAKF,qBAAKA,UAAU,8BAAf,SACE,eAAC,IAAD,CAAMA,UAAU,qBAAqBhB,KAAMA,EAAMoB,SA1BpC,SAACC,GACpB,IAAMC,EAAO,CACXC,SAAUF,EAAOG,YACjBC,YAAaJ,EAAOE,UAGtBtB,EAASyB,IAAqBC,QAAQL,EAAMV,KAoBtC,UACE,cAAC,IAAKgB,KAAN,CAAWC,KAAK,cAAcC,MAAO,CAACC,IAAgBC,YAAtD,SACE,cAACC,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,6BAAcC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUC,WAEjF,cAAC,IAAKX,KAAN,CAAWC,KAAK,WAAWC,MAAO,CAACC,IAAgBC,YAAnD,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLC,YAAY,qBACZC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUC,OAC9BC,SAxC2B,SAACC,GACxC,IAAQC,EAAUD,EAAEE,OAAZD,MACR/B,EAAiB+B,QAyCT,cAAC,IAAKd,KAAN,CACEC,KAAK,kBACLC,MAAO,CAACC,IAAgBC,WAAYD,IAAgBa,gBAAgBlC,IAFtE,SAIE,cAACuB,EAAA,EAAD,CAAOC,KAAK,WAAWC,YAAY,wCAAoBC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUC,WAGvF,cAAC,IAAKX,KAAN,CAAWiB,MAAO,CAAEC,UAAW,UAA/B,SACE,cAACC,EAAA,EAAD,CAAQ7B,MAAM,iBAAYgB,KAAK,UAAUc,SAAS,SAASC,QAAS9C,kBC5EnEN,a,0ECmBAoB,EAdgC,SAAC,GAA2C,IAAzCD,EAAwC,EAAxCA,UAAWkC,EAA6B,EAA7BA,OAAQhC,EAAqB,EAArBA,MAAOiC,EAAc,EAAdA,QAC1E,OACE,qBACEnC,UAAWoC,IAAW,kBAAmBpC,EAAW,CAAE,iBAAkBkC,GAAU,CAAE,iBAAkBC,IACtGA,QAASA,EAFX,SAIE,sBAAKnC,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCE,IACnC,qBAAKF,UAAU,sBAAf,iCCZOC,O,sFCHA,MAA0B,8C,gBCsB1BE,EAf4B,SAAC,GAAkB,IAAhBkC,EAAe,EAAfA,SAC5C,OACE,qBAAKrC,UAAU,WAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKsC,IAAKC,EAAiBC,IAAI,SAGnC,qBAAKxC,UAAU,gBAAf,SAAgCqC,UCdzBlC,O","file":"static/js/32.6dda707e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AuthForm from '@/containers/AuthForm';\nimport Input from '@/components/Input';\nimport Button from '@/components/Button';\nimport { showNotification, validationRules } from '@/utils/functions';\nimport Icon, { EIconName } from '@/components/Icon';\nimport HeaderSkew from '@/components/HeaderSkew';\nimport { changePasswordAction } from '@/redux/actions';\nimport { ETypeNotification } from '@/common/enums';\nimport { EAuthControllerAction } from '@/redux/actions/auth-controller/constants';\nimport { TRootState } from '@/redux/reducers';\n\nimport './ChangePasswordAccount.scss';\n\nconst ChangePasswordAccount: React.FC = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n\n  const changePasswordLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EAuthControllerAction.CHANGE_PASSWORD],\n  );\n\n  const [passwordValue, setPasswordValue] = useState<string>('');\n\n  const handleChangePasswordAccountField = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target;\n    setPasswordValue(value);\n  };\n\n  const handleSubmit = (values: any): void => {\n    const body = {\n      password: values.oldPassword,\n      newPassword: values.password,\n    };\n\n    dispatch(changePasswordAction.request(body, handleChangePasswordSuccess));\n  };\n\n  const handleChangePasswordSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Đổi mật khẩu thành công');\n  };\n\n  return (\n    <div className=\"ChangePasswordAccount style-container\">\n      <HeaderSkew title=\"Đổi mật khẩu\" />\n\n      <AuthForm>\n        <div className=\"AuthForm-header\">\n          <div className=\"AuthForm-header-title\">Thay đổi mật khẩu</div>\n          <div className=\"AuthForm-header-description\">\n            Nhập mật khẩu mới để thay đổi thông tin đăng nhập tài khoản.\n          </div>\n        </div>\n\n        <div className=\"AuthForm-main flex flex-col\">\n          <Form className=\"AuthForm-main-form\" form={form} onFinish={handleSubmit}>\n            <Form.Item name=\"oldPassword\" rules={[validationRules.required()]}>\n              <Input type=\"password\" placeholder=\"Mật khẩu cũ\" prefix={<Icon name={EIconName.Lock} />} />\n            </Form.Item>\n            <Form.Item name=\"password\" rules={[validationRules.required()]}>\n              <Input\n                type=\"password\"\n                placeholder=\"Mật khẩu\"\n                prefix={<Icon name={EIconName.Lock} />}\n                onChange={handleChangePasswordAccountField}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"confirmPassword\"\n              rules={[validationRules.required(), validationRules.confirmPassword(passwordValue)]}\n            >\n              <Input type=\"password\" placeholder=\"Nhập lại mật khẩu\" prefix={<Icon name={EIconName.Lock} />} />\n            </Form.Item>\n\n            <Form.Item style={{ marginTop: '6.4rem' }}>\n              <Button title=\"Tiếp Theo\" type=\"primary\" htmlType=\"submit\" loading={changePasswordLoading} />\n            </Form.Item>\n          </Form>\n        </div>\n      </AuthForm>\n    </div>\n  );\n};\n\nexport default ChangePasswordAccount;\n","import ChangePasswordAccount from './ChangePasswordAccount';\n\nexport default ChangePasswordAccount;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","export default __webpack_public_path__ + \"static/media/image-auth-banner.5bdeb1fe.png\";","import React from 'react';\n\nimport { TAuthFormProps } from '@/containers/AuthForm/AuthForm.types';\nimport ImageAuthBanner from '@/assets/images/image-auth-banner.png';\n\nimport './AuthForm.scss';\n\nconst AuthForm: React.FC<TAuthFormProps> = ({ children }) => {\n  return (\n    <div className=\"AuthForm\">\n      <div className=\"AuthForm-card flex flex-wrap\">\n        <div className=\"AuthForm-item\">\n          <div className=\"AuthForm-item-image\">\n            <img src={ImageAuthBanner} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"AuthForm-item\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from './AuthForm';\n\nexport default AuthForm;\n"],"sourceRoot":""}