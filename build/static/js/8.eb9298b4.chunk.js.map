{"version":3,"sources":["components/WrapperLazyLoad/index.tsx","components/WrapperLazyLoad/WrapperLazyLoad.tsx","components/Select/Select.tsx","utils/hooks.ts","components/Select/index.ts","components/DatePicker/DatePicker.tsx","components/DatePicker/index.ts","components/UploadFilesList/UploadFilesList.tsx","components/UploadFilesList/index.ts"],"names":["WrapperLazyLoad","children","loading","maxHeight","resetScrollToTop","resetScrollToBottom","onScroll","onEnd","onTop","onResetScrollSuccess","wrapperLazyLoadRef","useRef","useEffect","current","scrollTo","scrollTop","scrollHeight","ref","e","element","currentTarget","isScrollEndOfElment","Math","round","clientHeight","className","style","classNames","show","Select","placeholder","disabled","options","showSearch","value","defaultValue","allowClear","dropdownClassName","onSearch","paginate","onLoadMore","onChange","useState","keyword","setKeyword","isMounted","setIsMounted","searchValueDebounce","delay","debouncedValue","setDebouncedValue","handleDebounce","setTimeout","clearTimeout","useDebounce","TIMEOUT_DEBOUNCE","SEARCH","handleScrollEnd","page","getTotalPage","total","pageSize","labelInValue","filterOption","input","option","searchString","label","keywordValue","searchValue","suffixIcon","Icon","name","EIconName","AngleRight","color","EIconColor","BOULDER","notFoundContent","getPopupContainer","trigger","onClear","dropdownRender","menu","virtual","DatePicker","disabledDate","Calendar","format","EFormatDate","COMMON","UploadFilesList","useSingle","dispatch","useDispatch","uploadLoading","useSelector","state","loadingReducer","EUploadControllerAction","UPLOAD","handleUploadSuccess","data","filename","Upload","singleFile","bodyFormData","FormData","append","uploadAction","request","Button","iconName","LoadingSpin","Picture","shadow","size","Array","isArray","map","item","onClick","removeFile","newFilesList","filter","handleRemoveImage","Close","src","onError","handleErrorImageUrl","alt"],"mappings":"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","file":"static/js/8.eb9298b4.chunk.js","sourcesContent":["import WrapperLazyLoad from './WrapperLazyLoad';\nimport { TWrapperLazyLoadProps } from './WrapperLazyLoad.types';\n\nexport type { TWrapperLazyLoadProps };\nexport default WrapperLazyLoad;\n","import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { TWrapperLazyLoadProps } from './WrapperLazyLoad.types';\n\nimport './WrapperLazyLoad.scss';\n\nconst WrapperLazyLoad: React.FC<TWrapperLazyLoadProps> = ({\n  children,\n  loading,\n  maxHeight,\n  resetScrollToTop,\n  resetScrollToBottom,\n  onScroll,\n  onEnd,\n  onTop,\n  onResetScrollSuccess,\n}) => {\n  const wrapperLazyLoadRef = useRef<HTMLDivElement>(null);\n\n  const onScrollEnd = (e: React.UIEvent<HTMLDivElement>): void => {\n    onScroll?.(e);\n    const element = e.currentTarget;\n    const isScrollEndOfElment = Math.round(element.scrollTop + element.clientHeight) >= element.scrollHeight;\n\n    if (element.scrollTop === 0) onTop?.();\n    if (isScrollEndOfElment && !resetScrollToTop) onEnd?.();\n  };\n\n  useEffect(() => {\n    if (resetScrollToTop && wrapperLazyLoadRef?.current) {\n      wrapperLazyLoadRef?.current?.scrollTo(0, 0);\n      onResetScrollSuccess?.();\n    }\n  }, [resetScrollToTop, onResetScrollSuccess]);\n\n  useEffect(() => {\n    if (resetScrollToBottom && wrapperLazyLoadRef?.current) {\n      const domWrapperLazyLoad = wrapperLazyLoadRef?.current;\n      if (domWrapperLazyLoad) {\n        wrapperLazyLoadRef.current.scrollTop = wrapperLazyLoadRef.current.scrollHeight;\n      }\n      onResetScrollSuccess?.();\n    }\n  }, [resetScrollToBottom, onResetScrollSuccess]);\n\n  return (\n    <div ref={wrapperLazyLoadRef} onScroll={onScrollEnd} className=\"WrapperLazyLoad\" style={{ maxHeight }}>\n      {children}\n      <div className={classNames('WrapperLazyLoad__loading', { show: loading })}>{/* <Loading /> */}</div>\n    </div>\n  );\n};\n\nexport default WrapperLazyLoad;\n","import React, { useEffect, useState } from 'react';\nimport { Select as AntdSelect } from 'antd';\nimport classNames from 'classnames';\n\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport { getTotalPage, searchString } from '@/utils/functions';\nimport { useDebounce } from '@/utils/hooks';\nimport { TIMEOUT_DEBOUNCE } from '@/common/enums';\nimport WrapperLazyLoad from '@/components/WrapperLazyLoad';\n\nimport { TSelectProps } from './Select.types';\nimport './Select.scss';\n\nconst Select: React.FC<TSelectProps> = ({\n  placeholder,\n  disabled,\n  options = [],\n  showSearch = true,\n  value,\n  className,\n  defaultValue,\n  allowClear,\n  dropdownClassName,\n  onSearch,\n  paginate,\n  onLoadMore,\n  onChange,\n}) => {\n  const [keyword, setKeyword] = useState<string>('');\n  const [isMounted, setIsMounted] = useState<boolean>(false);\n  const searchValueDebounce = useDebounce(keyword, TIMEOUT_DEBOUNCE.SEARCH);\n\n  const filterOption = (input: string, option: any): boolean => {\n    return searchString(option.label, keyword);\n  };\n\n  const handleSearch = (keywordValue: string): void => {\n    setKeyword(keywordValue);\n  };\n\n  const dropdownRender = (menu: React.ReactElement): React.ReactElement => {\n    return (\n      <div className={classNames('Select-dropdown', dropdownClassName)}>\n        <div className=\"Select-dropdown-main\">\n          <WrapperLazyLoad maxHeight={256} onEnd={handleScrollEnd}>\n            {menu}\n          </WrapperLazyLoad>\n        </div>\n      </div>\n    );\n  };\n\n  const handleScrollEnd = (): void => {\n    if (onSearch && paginate) {\n      const isLoadMore = paginate.page < getTotalPage(paginate.total, paginate.pageSize);\n      if (isLoadMore) {\n        onLoadMore?.();\n      }\n    }\n  };\n\n  const handleClear = (): void => {\n    onChange?.(null);\n  };\n\n  useEffect(() => {\n    if (isMounted && onSearch) {\n      onSearch?.(searchValueDebounce);\n    }\n\n    setIsMounted(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValueDebounce]);\n\n  return (\n    <div className={classNames('Select', className)}>\n      <AntdSelect\n        className=\"Select-control\"\n        value={value}\n        showSearch={showSearch}\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n        labelInValue\n        allowClear={allowClear}\n        filterOption={onSearch ? false : filterOption}\n        onSearch={handleSearch}\n        options={options}\n        searchValue={keyword}\n        dropdownClassName={classNames('Select-dropdown', dropdownClassName)}\n        suffixIcon={<Icon name={EIconName.AngleRight} color={EIconColor.BOULDER} />}\n        notFoundContent=\"Không tìm thấy dữ liệu\"\n        getPopupContainer={(trigger: HTMLElement): HTMLElement => trigger}\n        onChange={onChange}\n        onClear={handleClear}\n        dropdownRender={dropdownRender}\n        disabled={disabled}\n        virtual={false}\n      />\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\n\ntype TScroll = {\n  x: number;\n  y: number;\n  direction: string;\n};\n\nexport const useDebounce = (value: string, delay: number): string => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handleDebounce = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return (): void => {\n      clearTimeout(handleDebounce);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useScroll = (): TScroll => {\n  const [scroll, setScroll] = useState<TScroll>({\n    x: document.body.getBoundingClientRect().left,\n    y: document.body.getBoundingClientRect().top,\n    direction: '',\n  });\n\n  const listener = (): void => {\n    setScroll((prev: TScroll) => ({\n      x: document.body.getBoundingClientRect().left,\n      y: -document.body.getBoundingClientRect().top,\n      direction: prev.y > -document.body.getBoundingClientRect().top ? 'up' : 'down',\n    }));\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', listener);\n    return (): void => window.removeEventListener('scroll', listener);\n  }, []);\n\n  return scroll;\n};\n\nexport const useOnClickOutside = (\n  ref: React.RefObject<HTMLElement>,\n  handler: (event: MouseEvent | TouchEvent) => void,\n): void => {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent): void => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return (): void => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n","import Select from './Select';\n\nexport * from './Select.types';\nexport default Select;\n","import React from 'react';\nimport { DatePicker as AntdDatePicker } from 'antd';\nimport classNames from 'classnames';\n\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport { EFormatDate } from '@/common/enums';\n\nimport { TDatePickerProps } from './DatePicker.types';\nimport './DatePicker.scss';\n\nconst DatePicker: React.FC<TDatePickerProps> = ({\n  className,\n  value,\n  placeholder,\n  disabled,\n  disabledDate,\n  onChange,\n}) => {\n  return (\n    <div className={classNames('DatePicker', className)}>\n      <AntdDatePicker\n        suffixIcon={<Icon name={EIconName.Calendar} color={EIconColor.BOULDER} />}\n        format={EFormatDate.COMMON}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        onChange={onChange}\n        disabledDate={disabledDate}\n      />\n    </div>\n  );\n};\n\nexport default DatePicker;\n","import DatePicker from './DatePicker';\n\nexport * from './DatePicker.types';\nexport default DatePicker;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { TUploadFilesListProps } from '@/components/UploadFilesList/UploadFilesList.types';\nimport Upload from '@/components/Upload/Upload';\nimport Icon, { EIconName } from '@/components/Icon';\nimport Button from '@/components/Button';\nimport { uploadAction } from '@/redux/actions';\nimport { EUploadControllerAction } from '@/redux/actions/upload-controller/constants';\nimport { TRootState } from '@/redux/reducers';\nimport { TUploadResponse } from '@/services/api/upload-controller/types';\nimport { handleErrorImageUrl } from '@/utils/functions';\n\nimport './UploadFilesList.scss';\n\nconst UploadFilesList: React.FC<TUploadFilesListProps> = ({ className, label, value = [], onChange, useSingle }) => {\n  const dispatch = useDispatch();\n\n  const uploadLoading = useSelector((state: TRootState) => state.loadingReducer[EUploadControllerAction.UPLOAD]);\n\n  const handleUpload = (data: FileList | null): void => {\n    const singleFile = data?.[0];\n\n    if (singleFile) {\n      const bodyFormData = new FormData();\n      bodyFormData.append('file', singleFile);\n\n      dispatch(uploadAction.request(bodyFormData, handleUploadSuccess));\n    }\n  };\n\n  const handleUploadSuccess = (data: TUploadResponse): void => {\n    if (useSingle) onChange?.([data.filename]);\n  };\n\n  const handleRemoveImage = (removeFile: string): void => {\n    const newFilesList = value.filter((item) => item !== removeFile);\n    onChange?.(newFilesList);\n  };\n\n  return (\n    <div className={classNames('UploadFilesList flex items-center flex-wrap justify-between', className)}>\n      <div className=\"UploadFilesList-item\">\n        <div className=\"UploadFilesList-item-label\">{label}</div>\n      </div>\n      <div className=\"UploadFilesList-item\">\n        <Upload onChange={handleUpload} disabled={uploadLoading}>\n          <Button iconName={uploadLoading ? EIconName.LoadingSpin : EIconName.Picture} shadow={false} size=\"small\" />\n        </Upload>\n      </div>\n      <div className=\"UploadFilesList-images flex flex-wrap\">\n        {Array.isArray(value) &&\n          value?.map((item) => (\n            <div key={item} className=\"UploadFilesList-images-item\">\n              <div className=\"UploadFilesList-images-item-remove\" onClick={(): void => handleRemoveImage(item)}>\n                <Icon name={EIconName.Close} />\n              </div>\n\n              <img src={item} onError={handleErrorImageUrl} alt=\"\" />\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default UploadFilesList;\n","import UploadFilesList from '@/components/UploadFilesList/UploadFilesList';\nimport { TUploadFilesListProps } from './UploadFilesList.types';\n\nexport type { TUploadFilesListProps };\nexport default UploadFilesList;\n"],"sourceRoot":""}