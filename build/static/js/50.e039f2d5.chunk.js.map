{"version":3,"sources":["pages/ProfileInformation/ProfileInformation.tsx","pages/ProfileInformation/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts"],"names":["ProfileInformation","Form","useForm","form","dispatch","useDispatch","getInfoLoading","useSelector","state","loadingReducer","EAuthControllerAction","GET_INFO","updateInfoLoading","UPDATE_INFO","authInfoState","authReducer","user","addressState","addressReducer","useState","isAvaiableSetDefaultValue","setIsAvaiableSetDefaultValue","districtCode","cityCode","getAddressParamsRequest","setGetAddressParamsRequest","isDisabledCityField","city","length","isDisabledDistrictField","district","isUserHaveCityCode","isUserHaveDistrictCode","handleUpdateInfoSuccess","showNotification","ETypeNotification","SUCCESS","handleChangeAddress","setFieldsValue","getAddressData","useCallback","getAddressAction","request","useEffect","address","avatar","birthday","formatISODateToMomment","find","option","value","email","frontIdCard","undefined","backIdCard","fullName","scrollToTop","className","PageLoading","HeaderSkew","title","onFinish","values","body","join","updateInfoAction","Item","name","style","marginBottom","UploadAvatar","rules","validationRules","required","Input","placeholder","DatePicker","Select","options","disabled","onChange","UploadFilesList","label","useSingle","Button","type","htmlType","loading","center","onClick","classNames"],"mappings":"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","file":"static/js/50.e039f2d5.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport UploadAvatar from '@/components/UploadAvatar';\nimport UploadFilesList from '@/components/UploadFilesList';\nimport { formatISODateToMomment, scrollToTop, showNotification, validationRules } from '@/utils/functions';\nimport Input from '@/components/Input';\nimport DatePicker from '@/components/DatePicker';\nimport Select from '@/components/Select';\nimport Button from '@/components/Button';\nimport { TRootState } from '@/redux/reducers';\nimport { EAuthControllerAction } from '@/redux/actions/auth-controller/constants';\nimport PageLoading from '@/components/PageLoading';\nimport { getAddressAction, updateInfoAction } from '@/redux/actions';\nimport { ETypeNotification } from '@/common/enums';\nimport { TParamsGetAddress } from '@/services/api/address-controller/types';\n\nimport './ProfileInformation.scss';\n\nconst ProfileInformation: React.FC = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n\n  const getInfoLoading = useSelector((state: TRootState) => state.loadingReducer[EAuthControllerAction.GET_INFO]);\n  const updateInfoLoading = useSelector((state: TRootState) => state.loadingReducer[EAuthControllerAction.UPDATE_INFO]);\n\n  const authInfoState = useSelector((state: TRootState) => state.authReducer.user);\n  const addressState = useSelector((state: TRootState) => state.addressReducer);\n\n  const [isAvaiableSetDefaultValue, setIsAvaiableSetDefaultValue] = useState<boolean>(true);\n\n  const [getAddressParamsRequest, setGetAddressParamsRequest] = useState<TParamsGetAddress>({\n    districtCode: null,\n    cityCode: null,\n  });\n\n  const isDisabledCityField = addressState.city.length === 0;\n  const isDisabledDistrictField = addressState.district.length === 0;\n  const isUserHaveCityCode = authInfoState?.city;\n  const isUserHaveDistrictCode = isUserHaveCityCode && authInfoState?.district;\n\n  const handleSubmit = (values: any): void => {\n    const body = {\n      fullName: values.fullName,\n      avatar: values.avatar,\n      address: values.address,\n      city: values.city.value,\n      district: values.district.value,\n      backIdCard: values.backIdCard?.join(''),\n      frontIdCard: values.frontIdCard?.join(''),\n      birthday: values.birthday,\n      email: values.email,\n    };\n\n    dispatch(updateInfoAction.request(body, handleUpdateInfoSuccess));\n  };\n\n  const handleUpdateInfoSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Cập nhật thông tin cá nhân thành công');\n  };\n\n  const handleChangeAddress = (cityCode?: string | null, districtCode?: string | null): void => {\n    if (cityCode && !districtCode) form.setFieldsValue({ district: null });\n\n    setGetAddressParamsRequest({\n      cityCode: cityCode || null,\n      districtCode: districtCode || null,\n    });\n  };\n\n  const getAddressData = useCallback(() => {\n    dispatch(getAddressAction.request(getAddressParamsRequest));\n  }, [dispatch, getAddressParamsRequest]);\n\n  const getAddress = (): void => {\n    dispatch(getAddressAction.request({ cityCode: null, districtCode: null }));\n  };\n\n  const getAddressWithExistedCity = (): void => {\n    dispatch(\n      getAddressAction.request({\n        cityCode: getAddressParamsRequest.cityCode || authInfoState.city,\n        districtCode: null,\n      }),\n    );\n  };\n\n  const getAddressWithExistedCityAndDistrict = (): void => {\n    dispatch(\n      getAddressAction.request({\n        cityCode: getAddressParamsRequest.cityCode || authInfoState.city,\n        districtCode: getAddressParamsRequest.districtCode || authInfoState.district,\n      }),\n    );\n  };\n\n  useEffect(() => {\n    const isAvaiableUpdateExistedField =\n      (!isUserHaveCityCode && !isUserHaveDistrictCode) ||\n      (isUserHaveCityCode && !isDisabledCityField && !isUserHaveDistrictCode && isDisabledDistrictField) ||\n      (isUserHaveCityCode && !isDisabledCityField && isUserHaveDistrictCode && !isDisabledDistrictField);\n\n    if (isAvaiableSetDefaultValue && isAvaiableUpdateExistedField && authInfoState) {\n      form.setFieldsValue({\n        address: authInfoState.address,\n        avatar: authInfoState.avatar,\n        birthday: formatISODateToMomment(authInfoState.birthday),\n        city: addressState.city.find((option) => option.value === authInfoState.city),\n        district: addressState.district.find((option) => option.value === authInfoState.district),\n        email: authInfoState.email,\n        frontIdCard: authInfoState.frontIdCard ? [authInfoState.frontIdCard] : undefined,\n        backIdCard: authInfoState.backIdCard ? [authInfoState.backIdCard] : undefined,\n        fullName: authInfoState.fullName,\n      });\n\n      setIsAvaiableSetDefaultValue(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [form, authInfoState, addressState, isAvaiableSetDefaultValue]);\n\n  useEffect(() => {\n    if (!isAvaiableSetDefaultValue) getAddressData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getAddressData]);\n\n  useEffect(() => {\n    getAddress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (isUserHaveCityCode && !isDisabledCityField) getAddressWithExistedCity();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authInfoState, isDisabledCityField]);\n\n  useEffect(() => {\n    if (!isDisabledCityField && isUserHaveDistrictCode && !isDisabledDistrictField)\n      getAddressWithExistedCityAndDistrict();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [authInfoState, isDisabledCityField, isDisabledDistrictField]);\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <div className=\"ProfileInformation style-container\">\n      {getInfoLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Thông tin cá nhân\" />\n\n          <div className=\"ProfileInformation-main\">\n            <Form className=\"ProfileInformation-main-form\" form={form} onFinish={handleSubmit}>\n              <Form.Item name=\"avatar\" style={{ marginBottom: '3.2rem' }}>\n                <UploadAvatar />\n              </Form.Item>\n              <Form.Item name=\"fullName\" rules={[validationRules.required()]}>\n                <Input placeholder=\"Tên của bạn\" />\n              </Form.Item>\n              <Form.Item name=\"email\" rules={[validationRules.required(), validationRules.email()]}>\n                <Input placeholder=\"Email\" />\n              </Form.Item>\n              <Form.Item name=\"birthday\" rules={[validationRules.required()]}>\n                <DatePicker placeholder=\"Sinh nhật\" />\n              </Form.Item>\n              <div className=\"ProfileInformation-main-form-row flex justify-between two flex-wrap\">\n                <Form.Item name=\"city\" rules={[validationRules.required()]}>\n                  <Select\n                    placeholder=\"Tỉnh / thành phố\"\n                    options={addressState.city}\n                    disabled={isDisabledCityField}\n                    onChange={(option): void => handleChangeAddress(option?.value)}\n                  />\n                </Form.Item>\n                <Form.Item name=\"district\" rules={[validationRules.required()]}>\n                  <Select\n                    placeholder=\"Quận / huyện\"\n                    options={addressState.district}\n                    disabled={isDisabledDistrictField}\n                    onChange={(option): void => handleChangeAddress(getAddressParamsRequest.cityCode, option?.value)}\n                  />\n                </Form.Item>\n              </div>\n              <Form.Item name=\"address\" rules={[validationRules.required()]}>\n                <Input placeholder=\"Địa chỉ cụ thể\" />\n              </Form.Item>\n              <Form.Item\n                name=\"frontIdCard\"\n                rules={[validationRules.required('Vui lòng tải ảnh mặt trước CMND - CCCD')]}\n              >\n                <UploadFilesList label=\"Ảnh mặt trước CMND - CCCD\" useSingle />\n              </Form.Item>\n              <Form.Item name=\"backIdCard\" rules={[validationRules.required('Vui lòng tải ảnh mặt sau CMND - CCCD')]}>\n                <UploadFilesList label=\"Ảnh mặt sau CMND- CCCD\" useSingle />\n              </Form.Item>\n\n              <div className=\"ProfileInformation-main-form-submit flex justify-center\">\n                <Button title=\"Chỉnh sửa\" type=\"primary\" htmlType=\"submit\" loading={updateInfoLoading} />\n              </div>\n            </Form>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileInformation;\n","import ProfileInformation from './ProfileInformation';\n\nexport default ProfileInformation;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n"],"sourceRoot":""}