{"version":3,"sources":["assets/images/image-wheel-arrow.png","components/WheelRotation/WheelRotationItem/index.ts","components/WheelRotation/WheelRotationItem/WheelRotationItem.tsx","components/WheelRotation/index.ts","components/WheelRotation/WheelRotation.tsx","pages/WheelDetail/WheelDetail.tsx","pages/WheelDetail/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts"],"names":["WheelRotationItem","skewY","rotate","label","index","style","transform","className","classNames","WheelRotation","random","triggerStart","dataGifts","dataGift","onFinish","useState","isRotating","setIsRotating","rotateWheel","setRotateWheel","currentRotate","setCurrentRotate","length","rotateStartWheel","rotationValue","getGiftRandom","randomNumber","currentPercent","list","forEach","item","percent","push","getGift","indexGift","map","id","indexOf","idPrize","namePrize","handleRotationEnd","gift","timer","setTimeout","clearTimeout","handleStart","Math","countRotate","startRotation","useEffect","src","ImageArrow","alt","WheelDetail","useParams","dispatch","useDispatch","wheelState","useSelector","state","wheelReducer","wheel","result","turnWheel","turnWheelReducer","turnNumber","startWheelState","startWheel","startWheelLoading","loadingReducer","EWheelControllerAction","START_WHEEL","getWheelLoading","GET_WHEEL","getTurnWheelUserLoading","ETurnWheelControllerAction","GET_TURN_WHEEL_USER","buyTurnWheelLoading","BUY_TURN_WHEEL","shareSocialTurnWheelLoading","SHARE_SOCIAL_TURN_WHEEL","wheelRotationState","setWheelRotationState","visible","undefined","rewardModalState","setRewardModalState","isStartWheel","listGift","listPrizes","handleOpenRewardModalState","handleCloseRewardModalState","handleAddTurnWheelSuccess","showNotification","ETypeNotification","SUCCESS","getTurnWheelUserData","getWheelDetailData","useCallback","getWheelAction","request","getTurnWheelUserAction","PageLoading","HeaderSkew","title","prize","Button","type","onClick","buyTurnWheelAction","loading","disabled","startWheelAction","response","success","turnOfUser","wheelId","shareSocialTurnWheelAction","to","LayoutPaths","Profile","Paths","HistoryRotation","Modal","cancelButton","navigate","confirmButton","onClose","marginBottom","center"],"mappings":"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","file":"static/js/26.805dda9d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/image-wheel-arrow.4a6a8a03.png\";","import WheelRotationItem from './WheelRotationItem';\n\nexport default WheelRotationItem;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { TWheelRotationItemProps } from '@/components/WheelRotation/WheelRotation.types';\n\nimport './WheelRotationItem.scss';\n\nconst WheelRotationItem: React.FC<TWheelRotationItemProps> = ({ skewY, rotate, label, index }) => {\n  return (\n    <li\n      style={{\n        transform: `rotate(${rotate * index}deg) skewY(-${skewY}deg)`,\n      }}\n    >\n      <p\n        className={classNames(\n          'WheelRotationItem-item-wheel',\n          { 'item-wheel-1': index % 2 === 0 },\n          { 'item-wheel-2': index % 2 !== 0 },\n        )}\n        style={{\n          transform: `skewY(${skewY}deg) rotate(${rotate / 2}deg)`,\n        }}\n      >\n        <b>{label}</b>\n      </p>\n    </li>\n  );\n};\n\nexport default WheelRotationItem;\n","import WheelRotation from './WheelRotation';\n\nexport * from './WheelRotation.types';\nexport default WheelRotation;\n","import React, { useEffect, useState } from 'react';\n\nimport ImageArrow from '@/assets/images/image-wheel-arrow.png';\nimport WheelRotationItem from '@/components/WheelRotation/WheelRotationItem';\nimport { TWheelRotationData, TWheelRotationProps } from '@/components/WheelRotation/WheelRotation.types';\n\nimport './WheelRotation.scss';\n\nconst WheelRotation: React.FC<TWheelRotationProps> = ({ random, triggerStart, dataGifts, dataGift, onFinish }) => {\n  const [isRotating, setIsRotating] = useState<boolean>(false);\n  const [rotateWheel, setRotateWheel] = useState<number>(0);\n  const [currentRotate, setCurrentRotate] = useState<number>(0);\n\n  const size = dataGifts.length;\n  const rotate = 360 / size;\n  const skewY = 90 - rotate;\n\n  const startRotation = (): void => {\n    // Đóng nút quay\n    setIsRotating(true);\n\n    let gift;\n\n    if (random) {\n      // Gọi hàm lấy phần thưởng random\n      const randomNumber = Math.random(); // Lấy 1 số ngầu nhiên 0 -> 1\n      gift = getGiftRandom(randomNumber);\n    } else {\n      // Gọi hàm lấy phần thưởng theo BE\n      gift = getGift();\n    }\n\n    // Số vòng quay: 360 độ = 1 vòng (Góc quay hiện tại)\n    const countRotate = currentRotate + 360 * 10;\n    setCurrentRotate(countRotate);\n\n    // Gọi hàm quay\n    rotateStartWheel(countRotate, gift?.index || 0);\n\n    // Show phần thưởng\n    if (gift) handleRotationEnd(gift);\n  };\n\n  // Hàm quay vòng quay\n  const rotateStartWheel = (rotationValue: number, index: number): void => {\n    setRotateWheel(rotationValue - index * rotate - rotate / 2);\n  };\n\n  // Hàm lấy phần thưởng\n  const getGiftRandom = (randomNumber: number): TWheelRotationData => {\n    let currentPercent = 0;\n    const list: TWheelRotationData[] = [];\n\n    dataGifts.forEach((item, index) => {\n      // Cộng lần lượt phần trăm trúng của các phần thưởng\n      currentPercent += item.percent;\n\n      // Số ngẫu nhiên nhỏ hơn phần trăm hiện tại thì thêm phần thưởng vào danh sách\n      if (randomNumber < currentPercent) {\n        list.push({ ...item, index });\n      }\n    });\n\n    // Phần thưởng đầu tiên trong danh sách là phần thưởng quay được\n    return list[0];\n  };\n\n  const getGift = (): TWheelRotationData | undefined => {\n    if (dataGift) {\n      const indexGift = dataGifts.map((item) => item.id).indexOf(dataGift.idPrize);\n      return {\n        ...dataGift,\n        id: dataGift?.idPrize,\n        label: dataGift?.namePrize,\n        percent: dataGift?.percent,\n        index: indexGift,\n      };\n    }\n\n    return undefined;\n  };\n\n  const handleRotationEnd = (gift: TWheelRotationData): void => {\n    const timer = setTimeout(() => {\n      setIsRotating(false);\n      // Show phần thưởng\n      onFinish?.(gift);\n\n      clearTimeout(timer);\n    }, 7000);\n  };\n\n  const handleStart = (): void => {\n    !isRotating && startRotation();\n  };\n\n  useEffect(() => {\n    if (triggerStart) {\n      handleStart();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [triggerStart]);\n\n  return (\n    <div className=\"WheelRotation\">\n      <div className=\"WheelRotation-line2\">\n        <div className=\"WheelRotation-line1\">\n          <span className=\"WheelRotation-lucky-wheel\">\n            <span className=\"WheelRotation-icon-arrow\">\n              <img src={ImageArrow} alt=\"arrow\" />\n            </span>\n            <ul\n              className=\"WheelRotation-wheel\"\n              style={{\n                transform: `rotate(${rotateWheel}deg)`,\n              }}\n            >\n              {dataGifts.map((item, index) => (\n                <WheelRotationItem key={item.label} index={index} skewY={skewY} rotate={rotate} label={item.label} />\n              ))}\n            </ul>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WheelRotation;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Link, navigate, useParams } from '@reach/router';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Button from '@/components/Button';\nimport Modal from '@/components/Modal';\nimport WheelRotation, { TWheelRotationData } from '@/components/WheelRotation';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport {\n  buyTurnWheelAction,\n  getTurnWheelUserAction,\n  getWheelAction,\n  shareSocialTurnWheelAction,\n  startWheelAction,\n} from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EWheelControllerAction } from '@/redux/actions/wheel-controller/constants';\nimport PageLoading from '@/components/PageLoading';\n\nimport './WheelDetail.scss';\nimport { showNotification } from '@/utils/functions';\nimport { ETypeNotification } from '@/common/enums';\nimport { ETurnWheelControllerAction } from '@/redux/actions/turn-wheel-controller/constants';\n\nconst WheelDetail: React.FC = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const wheelState = useSelector((state: TRootState) => state.wheelReducer.wheel?.result);\n  const turnWheel = useSelector((state: TRootState) => state.turnWheelReducer.turnNumber);\n  const startWheelState = useSelector((state: TRootState) => state.wheelReducer.startWheel);\n\n  const startWheelLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EWheelControllerAction.START_WHEEL],\n  );\n  const getWheelLoading = useSelector((state: TRootState) => state.loadingReducer[EWheelControllerAction.GET_WHEEL]);\n  const getTurnWheelUserLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[ETurnWheelControllerAction.GET_TURN_WHEEL_USER],\n  );\n  const buyTurnWheelLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[ETurnWheelControllerAction.BUY_TURN_WHEEL],\n  );\n  const shareSocialTurnWheelLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[ETurnWheelControllerAction.SHARE_SOCIAL_TURN_WHEEL],\n  );\n\n  const [wheelRotationState, setWheelRotationState] = useState<{\n    triggerStart: boolean;\n  }>({\n    triggerStart: false,\n  });\n  const [rewardModalState, setRewardModalState] = useState<{\n    gift?: TWheelRotationData;\n    visible: boolean;\n  }>({\n    visible: false,\n    gift: undefined,\n  });\n\n  const isStartWheel = startWheelLoading || wheelRotationState.triggerStart;\n\n  const listGift =\n    wheelState?.listPrizes?.map((item) => ({\n      ...item,\n      id: item.idPrize,\n      label: item.namePrize,\n      percent: item.percent / 100,\n    })) || [];\n\n  const handleRotationStart = (): void => {\n    dispatch(\n      startWheelAction.request(id, (response): void => {\n        setWheelRotationState({\n          triggerStart: true,\n        });\n        dispatch(getTurnWheelUserAction.success({ turnNumber: response.turnOfUser, wheelId: id }));\n      }),\n    );\n  };\n\n  const handleRotationFinish = (gift: TWheelRotationData): void => {\n    setWheelRotationState({\n      triggerStart: false,\n    });\n    handleOpenRewardModalState(gift);\n  };\n\n  const handleNavigateRotationHistory = (): void => {\n    navigate(`${LayoutPaths.Profile}${Paths.HistoryRotation}`);\n  };\n\n  const handleOpenRewardModalState = (gift: TWheelRotationData): void => {\n    setRewardModalState({\n      visible: true,\n      gift,\n    });\n  };\n\n  const handleCloseRewardModalState = (): void => {\n    setRewardModalState({\n      visible: false,\n    });\n  };\n\n  const handleBuyTurnWheelByPoint = (): void => {\n    dispatch(buyTurnWheelAction.request(id, handleAddTurnWheelSuccess));\n  };\n\n  const handleShareSocialTurnWHeel = (): void => {\n    dispatch(shareSocialTurnWheelAction.request(id, handleAddTurnWheelSuccess));\n  };\n\n  const handleAddTurnWheelSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Đổi lượt quay thành công');\n    getTurnWheelUserData();\n  };\n\n  const getWheelDetailData = useCallback((): void => {\n    if (id) dispatch(getWheelAction.request(id));\n  }, [id, dispatch]);\n\n  const getTurnWheelUserData = useCallback((): void => {\n    if (id) dispatch(getTurnWheelUserAction.request(id));\n  }, [id, dispatch]);\n\n  useEffect(() => {\n    getWheelDetailData();\n  }, [getWheelDetailData]);\n\n  useEffect(() => {\n    getTurnWheelUserData();\n  }, [getTurnWheelUserData]);\n\n  return (\n    <div className=\"WheelDetail style-container\">\n      {getWheelLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Vòng Quay\" />\n\n          <div className=\"WheelDetail-main\">\n            <div className=\"WheelDetail-main-rotation\">\n              <WheelRotation\n                dataGifts={listGift}\n                dataGift={startWheelState?.prize}\n                triggerStart={wheelRotationState.triggerStart}\n                onFinish={handleRotationFinish}\n              />\n            </div>\n            <div className=\"WheelDetail-main-description\">\n              Điểm tích luỹ có thể dùng để quay vòng quay may mắn. Sử dụng điểm tích luỹ không ảnh hưởng đến tiến trình\n              lên hạng thành viên.\n            </div>\n            <div className=\"WheelDetail-main-group-btns\">\n              <Button\n                title=\"Sử dụng 1000 điểm tích luỹ\"\n                type=\"ghost\"\n                onClick={handleBuyTurnWheelByPoint}\n                loading={buyTurnWheelLoading}\n                disabled={isStartWheel}\n              />\n              <Button\n                title={`Quay số (${turnWheel} lượt quay)`}\n                type=\"primary\"\n                onClick={handleRotationStart}\n                loading={getTurnWheelUserLoading}\n                disabled={isStartWheel || turnWheel === 0}\n              />\n              <Button\n                title=\"Chia sẻ mạng xã hội để nhận thêm 1 lượt quay\"\n                type=\"ghost\"\n                onClick={handleShareSocialTurnWHeel}\n                loading={shareSocialTurnWheelLoading}\n                disabled={isStartWheel}\n              />\n              <Link to={`${LayoutPaths.Profile}${Paths.HistoryRotation}`} className=\"WheelDetail-main-link\">\n                Lịch sử quay\n              </Link>\n            </div>\n          </div>\n\n          <Modal\n            visible={rewardModalState.visible}\n            cancelButton={{ title: 'Xem lịch sử', onClick: handleNavigateRotationHistory }}\n            confirmButton={{ title: 'Quay tiếp', onClick: handleCloseRewardModalState }}\n            onClose={handleCloseRewardModalState}\n          >\n            <div className=\"Modal-body-description\" style={{ marginBottom: '0.6rem' }}>\n              Phần thưởng bạn nhận được:\n            </div>\n            <div className=\"Modal-body-title\">{rewardModalState.gift?.label}</div>\n          </Modal>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default WheelDetail;\n","import WheelDetail from './WheelDetail';\n\nexport default WheelDetail;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n"],"sourceRoot":""}