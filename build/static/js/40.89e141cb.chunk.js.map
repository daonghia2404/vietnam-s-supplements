{"version":3,"sources":["pages/ForgotPassword/ForgotPassword.tsx","pages/ForgotPassword/index.ts","assets/images/image-auth-banner.png","containers/AuthForm/AuthForm.tsx","containers/AuthForm/index.ts","services/api/auth-controller/enums.ts"],"names":["ForgotPassword","dispatch","useDispatch","Form","useForm","form","sendOtpLoading","useSelector","state","loadingReducer","EAuthControllerAction","SEND_OTP","handleSendOtpSuccess","values","navigate","LayoutPaths","Auth","Paths","AccountVerification","type","ETypeSendOTP","FORGOT_PASSWORD","body","phone","AuthForm","className","onFinish","bodySendOtp","sendOtpAction","request","Item","name","rules","validationRules","required","onlyNumeric","Input","placeholder","prefix","Icon","EIconName","Phone","style","marginTop","Button","title","htmlType","loading","children","src","ImageAuthBanner","alt","ERole"],"mappings":"gRAsEeA,EApDkB,WAC/B,IAAMC,EAAWC,cACjB,EAAeC,IAAKC,UAAbC,EAAP,oBAEMC,EAAiBC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,eAAeC,IAAsBC,aAW/FC,EAAuB,SAACC,GAC5BC,YAAS,GAAD,OAAIC,IAAYC,MAAhB,OAAuBC,IAAMC,qBAAuB,CAC1DV,MAAO,CACLW,KAAMC,IAAaC,gBACnBC,KAAM,CACJC,MAAOV,EAAOU,WAMtB,OACE,8BACE,eAACC,EAAA,EAAD,WACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,wBAAf,wCACA,qBAAKA,UAAU,8BAAf,6LAKF,qBAAKA,UAAU,8BAAf,SACE,eAAC,IAAD,CAAMA,UAAU,qBAAqBpB,KAAMA,EAAMqB,SA/BpC,SAACb,GACpB,IAAMc,EAAc,CAClBJ,MAAOV,EAAOU,MACdJ,KAAMC,IAAaC,iBAGrBpB,EAAS2B,KAAcC,QAAQF,GAAa,kBAAYf,EAAqBC,QAyBvE,UACE,cAAC,IAAKiB,KAAN,CAAWC,KAAK,QAAQC,MAAO,CAACC,IAAgBC,WAAYD,IAAgBE,eAA5E,SACE,cAACC,EAAA,EAAD,CAAOC,YAAY,oCAAgBC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUC,YAGnE,cAAC,IAAKX,KAAN,CAAWY,MAAO,CAAEC,UAAW,SAA/B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,iBAAY1B,KAAK,UAAU2B,SAAS,SAASC,QAASzC,iBC3DnEN,a,gECFA,MAA0B,8C,gBCsB1BwB,EAf4B,SAAC,GAAkB,IAAhBwB,EAAe,EAAfA,SAC5C,OACE,qBAAKvB,UAAU,WAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKwB,IAAKC,EAAiBC,IAAI,SAGnC,qBAAK1B,UAAU,gBAAf,SAAgCuB,UCdzBxB,O,iCCFR,IAAK4B,EAOAhC,EAPZ,kC,SAAYgC,O,eAAAA,I,WAAAA,I,iBAAAA,I,8BAAAA,M,cAOAhC,K,oBAAAA,E,kCAAAA,M","file":"static/js/40.89e141cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\n\nimport AuthForm from '@/containers/AuthForm';\nimport Input from '@/components/Input';\nimport Button from '@/components/Button';\nimport { validationRules } from '@/utils/functions';\nimport Icon, { EIconName } from '@/components/Icon';\nimport { sendOtpAction } from '@/redux/actions';\nimport { ETypeSendOTP } from '@/services/api/auth-controller/enums';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport { EAuthControllerAction } from '@/redux/actions/auth-controller/constants';\nimport { TRootState } from '@/redux/reducers';\n\nimport './ForgotPassword.scss';\n\nconst ForgotPassword: React.FC = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const sendOtpLoading = useSelector((state: TRootState) => state.loadingReducer[EAuthControllerAction.SEND_OTP]);\n\n  const handleSubmit = (values: any): void => {\n    const bodySendOtp = {\n      phone: values.phone,\n      type: ETypeSendOTP.FORGOT_PASSWORD,\n    };\n\n    dispatch(sendOtpAction.request(bodySendOtp, (): void => handleSendOtpSuccess(values)));\n  };\n\n  const handleSendOtpSuccess = (values: any): void => {\n    navigate(`${LayoutPaths.Auth}${Paths.AccountVerification}`, {\n      state: {\n        type: ETypeSendOTP.FORGOT_PASSWORD,\n        body: {\n          phone: values.phone,\n        },\n      },\n    });\n  };\n\n  return (\n    <div>\n      <AuthForm>\n        <div className=\"AuthForm-header\">\n          <div className=\"AuthForm-header-title\">Quên mật khẩu</div>\n          <div className=\"AuthForm-header-description\">\n            Vui lòng nhập số điện thoại đăng ký để chúng tôi xác nhận thông tin tài khoản của bạn.\n          </div>\n        </div>\n\n        <div className=\"AuthForm-main flex flex-col\">\n          <Form className=\"AuthForm-main-form\" form={form} onFinish={handleSubmit}>\n            <Form.Item name=\"phone\" rules={[validationRules.required(), validationRules.onlyNumeric()]}>\n              <Input placeholder=\"Số Điện Thoại\" prefix={<Icon name={EIconName.Phone} />} />\n            </Form.Item>\n\n            <Form.Item style={{ marginTop: '13rem' }}>\n              <Button title=\"Tiếp Theo\" type=\"primary\" htmlType=\"submit\" loading={sendOtpLoading} />\n            </Form.Item>\n          </Form>\n        </div>\n      </AuthForm>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n","import ForgotPassword from './ForgotPassword';\n\nexport default ForgotPassword;\n","export default __webpack_public_path__ + \"static/media/image-auth-banner.5bdeb1fe.png\";","import React from 'react';\n\nimport { TAuthFormProps } from '@/containers/AuthForm/AuthForm.types';\nimport ImageAuthBanner from '@/assets/images/image-auth-banner.png';\n\nimport './AuthForm.scss';\n\nconst AuthForm: React.FC<TAuthFormProps> = ({ children }) => {\n  return (\n    <div className=\"AuthForm\">\n      <div className=\"AuthForm-card flex flex-wrap\">\n        <div className=\"AuthForm-item\">\n          <div className=\"AuthForm-item-image\">\n            <img src={ImageAuthBanner} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"AuthForm-item\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from './AuthForm';\n\nexport default AuthForm;\n","export enum ERole {\n  USER = 1,\n  PT = 2,\n  ADMIN = 3,\n  SUPER_ADMIN = 4,\n}\n\nexport enum ETypeSendOTP {\n  REGISTER = 'register',\n  FORGOT_PASSWORD = 'forgotPassword',\n}\n"],"sourceRoot":""}