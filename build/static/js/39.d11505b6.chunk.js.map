{"version":3,"sources":["pages/ChangePasswordCode/ChangePasswordCode.tsx","pages/ChangePasswordCode/index.ts","assets/images/image-auth-banner.png","containers/AuthForm/AuthForm.tsx","containers/AuthForm/index.ts","services/api/auth-controller/enums.ts"],"names":["ChangePasswordCode","Form","useForm","form","dispatch","useDispatch","location","useLocation","dataLocationState","state","useState","passwordValue","setPasswordValue","forgotPasswordLoading","useSelector","loadingReducer","EAuthControllerAction","FORGOT_PASSWORD","handleForgotPasswordSuccess","showNotification","ETypeNotification","SUCCESS","navigate","LayoutPaths","Auth","useEffect","ETypeSendOTP","includes","type","AuthForm","className","onFinish","values","body","password","forgotPasswordAction","request","Item","name","rules","validationRules","required","Input","placeholder","prefix","Icon","EIconName","Lock","onChange","e","value","target","confirmPassword","style","marginTop","Button","title","htmlType","loading","children","src","ImageAuthBanner","alt","ERole"],"mappings":"+RA2FeA,EAxEsB,WACnC,MAAeC,IAAKC,UAAbC,EAAP,oBACMC,EAAWC,cACXC,EAAgBC,cAChBC,EAAiB,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAUG,MAEpC,EAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAAwBC,aAC5B,SAACL,GAAD,OAAuBA,EAAMM,eAAeC,IAAsBC,oBAiB9DC,EAA8B,WAClCC,YAAiBC,IAAkBC,QAAS,qDAC5CC,YAASC,IAAYC,OAQvB,OALAC,qBAAU,WACiB,CAACC,IAAaT,iBAAiBU,SAA/B,OAAwCnB,QAAxC,IAAwCA,OAAxC,EAAwCA,EAAmBoB,OAC7DN,YAASC,IAAYC,QAC3C,CAAChB,IAGF,8BACE,eAACqB,EAAA,EAAD,WACE,sBAAKC,UAAU,kBAAf,UACE,qBAAKA,UAAU,wBAAf,mDACA,qBAAKA,UAAU,8BAAf,+IAKF,qBAAKA,UAAU,8BAAf,SACE,eAAC,IAAD,CAAMA,UAAU,qBAAqB3B,KAAMA,EAAM4B,SA9BpC,SAACC,GACpB,IAAMC,EAAI,2BACLzB,EAAkByB,MADb,IAERC,SAAUF,EAAOE,WAGnB9B,EAAS+B,IAAqBC,QAAQH,EAAMf,KAwBtC,UACE,cAAC,IAAKmB,KAAN,CAAWC,KAAK,WAAWC,MAAO,CAACC,IAAgBC,YAAnD,SACE,cAACC,EAAA,EAAD,CACEd,KAAK,WACLe,YAAY,qBACZC,OAAQ,cAACC,EAAA,EAAD,CAAMP,KAAMQ,IAAUC,OAC9BC,SAzCoB,SAACC,GACjC,IAAQC,EAAUD,EAAEE,OAAZD,MACRtC,EAAiBsC,QA0CT,cAAC,IAAKb,KAAN,CACEC,KAAK,kBACLC,MAAO,CAACC,IAAgBC,WAAYD,IAAgBY,gBAAgBzC,IAFtE,SAIE,cAAC+B,EAAA,EAAD,CAAOd,KAAK,WAAWe,YAAY,wCAAoBC,OAAQ,cAACC,EAAA,EAAD,CAAMP,KAAMQ,IAAUC,WAGvF,cAAC,IAAKV,KAAN,CAAWgB,MAAO,CAAEC,UAAW,UAA/B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,iBAAY5B,KAAK,UAAU6B,SAAS,SAASC,QAAS7C,iBChFnEb,a,gECFA,MAA0B,8C,gBCsB1B6B,EAf4B,SAAC,GAAkB,IAAhB8B,EAAe,EAAfA,SAC5C,OACE,qBAAK7B,UAAU,WAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAK8B,IAAKC,EAAiBC,IAAI,SAGnC,qBAAKhC,UAAU,gBAAf,SAAgC6B,UCdzB9B,O,iCCFR,IAAKkC,EAOArC,EAPZ,kC,SAAYqC,O,eAAAA,I,WAAAA,I,iBAAAA,I,8BAAAA,M,cAOArC,K,oBAAAA,E,kCAAAA,M","file":"static/js/39.d11505b6.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate, useLocation } from '@reach/router';\n\nimport AuthForm from '@/containers/AuthForm';\nimport Input from '@/components/Input';\nimport Button from '@/components/Button';\nimport { showNotification, validationRules } from '@/utils/functions';\nimport Icon, { EIconName } from '@/components/Icon';\nimport { TRootState } from '@/redux/reducers';\nimport { EAuthControllerAction } from '@/redux/actions/auth-controller/constants';\nimport { forgotPasswordAction } from '@/redux/actions';\nimport { LayoutPaths } from '@/pages/routers';\nimport { ETypeNotification } from '@/common/enums';\nimport { ETypeSendOTP } from '@/services/api/auth-controller/enums';\n\nimport './ChangePasswordCode.scss';\n\nconst ChangePasswordCode: React.FC = () => {\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const location: any = useLocation();\n  const dataLocationState = location?.state;\n\n  const [passwordValue, setPasswordValue] = useState<string>('');\n  const forgotPasswordLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EAuthControllerAction.FORGOT_PASSWORD],\n  );\n\n  const handleChangePasswordField = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target;\n    setPasswordValue(value);\n  };\n\n  const handleSubmit = (values: any): void => {\n    const body = {\n      ...dataLocationState.body,\n      password: values.password,\n    };\n\n    dispatch(forgotPasswordAction.request(body, handleForgotPasswordSuccess));\n  };\n\n  const handleForgotPasswordSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Đổi mật khẩu thành công');\n    navigate(LayoutPaths.Auth);\n  };\n\n  useEffect(() => {\n    const dataNavigateFrom = [ETypeSendOTP.FORGOT_PASSWORD].includes(dataLocationState?.type);\n    if (!dataNavigateFrom) navigate(LayoutPaths.Auth);\n  }, [dataLocationState]);\n\n  return (\n    <div>\n      <AuthForm>\n        <div className=\"AuthForm-header\">\n          <div className=\"AuthForm-header-title\">Thay đổi mật khẩu</div>\n          <div className=\"AuthForm-header-description\">\n            Nhập mật khẩu mới để thay đổi thông tin đăng nhập tài khoản.\n          </div>\n        </div>\n\n        <div className=\"AuthForm-main flex flex-col\">\n          <Form className=\"AuthForm-main-form\" form={form} onFinish={handleSubmit}>\n            <Form.Item name=\"password\" rules={[validationRules.required()]}>\n              <Input\n                type=\"password\"\n                placeholder=\"Mật khẩu\"\n                prefix={<Icon name={EIconName.Lock} />}\n                onChange={handleChangePasswordField}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"confirmPassword\"\n              rules={[validationRules.required(), validationRules.confirmPassword(passwordValue)]}\n            >\n              <Input type=\"password\" placeholder=\"Nhập lại mật khẩu\" prefix={<Icon name={EIconName.Lock} />} />\n            </Form.Item>\n\n            <Form.Item style={{ marginTop: '6.4rem' }}>\n              <Button title=\"Tiếp Theo\" type=\"primary\" htmlType=\"submit\" loading={forgotPasswordLoading} />\n            </Form.Item>\n          </Form>\n        </div>\n      </AuthForm>\n    </div>\n  );\n};\n\nexport default ChangePasswordCode;\n","import ChangePasswordCode from './ChangePasswordCode';\n\nexport default ChangePasswordCode;\n","export default __webpack_public_path__ + \"static/media/image-auth-banner.5bdeb1fe.png\";","import React from 'react';\n\nimport { TAuthFormProps } from '@/containers/AuthForm/AuthForm.types';\nimport ImageAuthBanner from '@/assets/images/image-auth-banner.png';\n\nimport './AuthForm.scss';\n\nconst AuthForm: React.FC<TAuthFormProps> = ({ children }) => {\n  return (\n    <div className=\"AuthForm\">\n      <div className=\"AuthForm-card flex flex-wrap\">\n        <div className=\"AuthForm-item\">\n          <div className=\"AuthForm-item-image\">\n            <img src={ImageAuthBanner} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"AuthForm-item\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from './AuthForm';\n\nexport default AuthForm;\n","export enum ERole {\n  USER = 1,\n  PT = 2,\n  ADMIN = 3,\n  SUPER_ADMIN = 4,\n}\n\nexport enum ETypeSendOTP {\n  REGISTER = 'register',\n  FORGOT_PASSWORD = 'forgotPassword',\n}\n"],"sourceRoot":""}