{"version":3,"sources":["pages/Rank/Rank.enums.ts","pages/Rank/RankReward/index.ts","pages/Rank/RankReward/RankReward.tsx","pages/Rank/RankExchangePoints/index.ts","pages/Rank/RankExchangePoints/RankExchangePoints.tsx","pages/Rank/RankPointsHistory/index.ts","pages/Rank/RankPointsHistory/RankPointsHistory.tsx","pages/Rank/Rank.data.ts","pages/Rank/Rank.tsx","pages/Rank/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","assets/images/image-empty-meal-schedule.png","components/EmptyBox/EmptyBox.tsx","components/EmptyBox/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts"],"names":["EKeyTabRank","RankReward","bonusState","useSelector","state","rankReducer","bonus","nextRankLevelInfo","nextLevelBonus","find","item","rank","className","Icon","name","EIconName","Gift","color","EIconColor","BUDDHA_GOLD","message","RankExchangePoints","dispatch","useDispatch","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getWheelsUserParamsRequest","setGetWheelsUserParamsRequest","visible","data","undefined","confirmBuyTurnByPointModalState","setConfirmBuyTurnByPointModalState","wheelsUserState","wheelReducer","wheelsUser","isEmpty","records","length","getWheelsUserLoading","loadingReducer","EWheelControllerAction","GET_WHEELS_USER","buyTurnWheelLoading","ETurnWheelControllerAction","BUY_TURN_WHEEL","handleCloseConfirmBuyTurnByPointModal","handleBuyTurnWheelByPointSuccess","showNotification","ETypeNotification","SUCCESS","getWheelsUserData","useCallback","getWheelsUserAction","request","useEffect","PageLoading","EmptyBox","title","map","src","image","onError","handleErrorImageUrl","alt","point","onClick","turnWheel","id","Pagination","total","onChange","Modal","confirmButton","buyTurnWheelAction","loading","cancelButton","disabled","onClose","style","marginBottom","RankPointsHistory","historyPointsState","historyPoints","getHistoryPointsLoading","ERankControllerAction","GET_HISTORY_POINTS","getHistoryPointsParamsRequest","setGetHistoryPointsParamsRequest","getHistoryPointsData","getHistoryPointsAction","formatISODateToDateTime","createdAt","dataTabsRank","value","REWARD","label","EXCHANGE_POINTS","HISTORY_POINT","Rank","activeKeyTabRank","setActiveKeyTabRank","getBonusLoading","GET_BONUS","getBonusData","getBonusAction","HeaderSkew","Medal","currentPoint","gradePoint","nextLevelPoint","width","toFixed","Button","size","shadow","type","key","renderSectionTabRank","center","classNames","buttonProps","ImageEmptyMealSchedule","current","showQuickJumper","showSizeChanger","hideOnSinglePage","showLessItems"],"mappings":"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","file":"static/js/20.06634b2b.chunk.js","sourcesContent":["export enum EKeyTabRank {\n  REWARD = 'REWARD',\n  EXCHANGE_POINTS = 'EXCHANGE_POINTS',\n  HISTORY_POINT = 'HISTORY_POINT',\n}\n","import RankReward from './RankReward';\n\nexport default RankReward;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Icon, { EIconName, EIconColor } from '@/components/Icon';\nimport { TRootState } from '@/redux/reducers';\n\nconst RankReward: React.FC = () => {\n  const bonusState = useSelector((state: TRootState) => state.rankReducer.bonus);\n  const nextRankLevelInfo = bonusState?.nextLevelBonus?.find((item) => item.rank === bonusState?.rank + 1);\n\n  return (\n    <div className=\"RankReward\">\n      {/* <div className=\"Rank-group\">\n        <div className=\"Rank-subtitle\">Thưởng hạng hiện tại</div>\n\n        {[1, 2, 3, 4, 5].map((item) => (\n          <div className=\"Rank-gift flex\" key={item}>\n            <Icon name={EIconName.Gift} color={EIconColor.BUDDHA_GOLD} />\n            Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n          </div>\n        ))}\n      </div> */}\n\n      {nextRankLevelInfo && (\n        <div className=\"Rank-group\">\n          <div className=\"Rank-subtitle\">Thưởng hạng tiếp theo</div>\n\n          <div className=\"Rank-gift flex items-start\">\n            <Icon name={EIconName.Gift} color={EIconColor.BUDDHA_GOLD} />\n            {nextRankLevelInfo.message}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default RankReward;\n","import RankExchangePoints from './RankExchangePoints';\n\nexport default RankExchangePoints;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { buyTurnWheelAction, getWheelsUserAction } from '@/redux/actions';\nimport { EWheelControllerAction } from '@/redux/actions/wheel-controller/constants';\nimport { TRootState } from '@/redux/reducers';\nimport Pagination from '@/components/Pagination';\nimport EmptyBox from '@/components/EmptyBox';\nimport PageLoading from '@/components/PageLoading';\nimport { ETypeNotification } from '@/common/enums';\nimport { handleErrorImageUrl, showNotification } from '@/utils/functions';\nimport { TWheelResponse } from '@/services/api/wheel-controller/types';\nimport Modal from '@/components/Modal';\nimport { ETurnWheelControllerAction } from '@/redux/actions/turn-wheel-controller/constants';\n\nimport './RankExchangePoints.scss';\n\nconst RankExchangePoints: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [getWheelsUserParamsRequest, setGetWheelsUserParamsRequest] = useState({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n\n  const [confirmBuyTurnByPointModalState, setConfirmBuyTurnByPointModalState] = useState<{\n    visible: boolean;\n    data?: TWheelResponse;\n  }>({\n    visible: false,\n    data: undefined,\n  });\n\n  const wheelsUserState = useSelector((state: TRootState) => state.wheelReducer.wheelsUser);\n\n  const isEmpty = !wheelsUserState?.records || wheelsUserState.records.length === 0;\n\n  const getWheelsUserLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EWheelControllerAction.GET_WHEELS_USER],\n  );\n  const buyTurnWheelLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[ETurnWheelControllerAction.BUY_TURN_WHEEL],\n  );\n\n  const handleOpenConfirmBuyTurnByPointModal = (data: TWheelResponse): void => {\n    setConfirmBuyTurnByPointModalState({ visible: true, data });\n  };\n\n  const handleCloseConfirmBuyTurnByPointModal = (): void => {\n    setConfirmBuyTurnByPointModalState({ visible: false });\n  };\n\n  const handleConfirmBuyTurnByPointModalSubmit = (): void => {\n    if (confirmBuyTurnByPointModalState.data)\n      dispatch(buyTurnWheelAction.request(confirmBuyTurnByPointModalState.data.id, handleBuyTurnWheelByPointSuccess));\n  };\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetWheelsUserParamsRequest({\n      ...getWheelsUserParamsRequest,\n      page,\n      pageSize: pageSize || getWheelsUserParamsRequest.pageSize,\n    });\n  };\n\n  const handleBuyTurnWheelByPointSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Đổi lượt quay thành công');\n    handleCloseConfirmBuyTurnByPointModal();\n  };\n\n  const getWheelsUserData = useCallback(() => {\n    dispatch(getWheelsUserAction.request(getWheelsUserParamsRequest));\n  }, [dispatch, getWheelsUserParamsRequest]);\n\n  useEffect(() => {\n    getWheelsUserData();\n  }, [getWheelsUserData]);\n\n  return (\n    <div className=\"RankExchangePoints\">\n      {getWheelsUserLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          {isEmpty ? (\n            <EmptyBox title=\"Không có vòng quay\" />\n          ) : (\n            <>\n              {wheelsUserState.records.map((item) => (\n                <div key={item.id} className=\"RankExchangePoints-item flex\">\n                  <div className=\"RankExchangePoints-item-image\">\n                    <img src={item.image} onError={handleErrorImageUrl} alt=\"\" />\n                  </div>\n                  <div className=\"RankExchangePoints-item-info\">\n                    <div className=\"RankExchangePoints-item-info-title\">{item.title}</div>\n                    <div className=\"RankExchangePoints-item-info-points\">{item.point} điểm</div>\n                    <div className=\"RankExchangePoints-item-info-btn flex\">\n                      <div\n                        className=\"RankExchangePoints-item-info-cta\"\n                        onClick={(): void => handleOpenConfirmBuyTurnByPointModal(item)}\n                      >\n                        Đổi 1 lượt quay\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"RankExchangePoints-item-turn\">Đã có: {item.turnWheel} lượt quay</div>\n                </div>\n              ))}\n\n              <div className=\"RankExchangePoints-pagination flex justify-center\">\n                <Pagination\n                  page={getWheelsUserParamsRequest.page}\n                  pageSize={getWheelsUserParamsRequest.pageSize}\n                  total={wheelsUserState?.total}\n                  onChange={handlePageChange}\n                />\n              </div>\n            </>\n          )}\n        </>\n      )}\n\n      <Modal\n        {...confirmBuyTurnByPointModalState}\n        confirmButton={{\n          title: 'Đồng ý',\n          onClick: handleConfirmBuyTurnByPointModalSubmit,\n          loading: buyTurnWheelLoading,\n        }}\n        cancelButton={{\n          title: 'Huỷ bỏ',\n          onClick: handleCloseConfirmBuyTurnByPointModal,\n          disabled: buyTurnWheelLoading,\n        }}\n        onClose={handleCloseConfirmBuyTurnByPointModal}\n      >\n        <div className=\"Modal-body-title\" style={{ marginBottom: '1rem' }}>\n          Đổi lượt quay\n        </div>\n        <div className=\"Modal-body-subtitle\" style={{ marginBottom: '.5rem' }}>\n          Bạn có chắc chắn dùng <strong>{confirmBuyTurnByPointModalState?.data?.point} điểm</strong> để đổi 1 lượt quay{' '}\n          <strong>{confirmBuyTurnByPointModalState?.data?.title}</strong> không?\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default RankExchangePoints;\n","import RankPointsHistory from './RankPointsHistory';\n\nexport default RankPointsHistory;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { getHistoryPointsAction } from '@/redux/actions';\nimport { TParamsGetHistoryPoints } from '@/services/api/rank-controller/types';\nimport Pagination from '@/components/Pagination';\nimport { TRootState } from '@/redux/reducers';\nimport PageLoading from '@/components/PageLoading';\nimport EmptyBox from '@/components/EmptyBox';\nimport { ERankControllerAction } from '@/redux/actions/rank-controller/constants';\nimport { formatISODateToDateTime } from '@/utils/functions';\n\nimport './RankPointsHistory.scss';\n\nconst RankPointsHistory: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const historyPointsState = useSelector((state: TRootState) => state.rankReducer.historyPoints);\n  const getHistoryPointsLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[ERankControllerAction.GET_HISTORY_POINTS],\n  );\n\n  const isEmpty = !historyPointsState?.records || historyPointsState.records.length === 0;\n\n  const [getHistoryPointsParamsRequest, setGetHistoryPointsParamsRequest] = useState<TParamsGetHistoryPoints>({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetHistoryPointsParamsRequest({\n      ...getHistoryPointsParamsRequest,\n      page,\n      pageSize: pageSize || getHistoryPointsParamsRequest.pageSize,\n    });\n  };\n\n  const getHistoryPointsData = useCallback(() => {\n    dispatch(getHistoryPointsAction.request(getHistoryPointsParamsRequest));\n  }, [dispatch, getHistoryPointsParamsRequest]);\n\n  useEffect(() => {\n    getHistoryPointsData();\n  }, [getHistoryPointsData]);\n\n  return (\n    <div className=\"RankPointsHistory\">\n      {getHistoryPointsLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          {isEmpty ? (\n            <EmptyBox title=\"Chưa có lịch sử đổi điểm\" />\n          ) : (\n            <>\n              {historyPointsState.records.map((item) => (\n                <div key={item.id} className=\"RankPointsHistory-item flex items-end justify-between\">\n                  <div className=\"RankPointsHistory-item-col\">\n                    <div className=\"RankPointsHistory-text bold\">Đổi 1 lượt quay</div>\n                    <div className=\"RankPointsHistory-text error\">-1000 điểm</div>\n                  </div>\n                  <div className=\"RankPointsHistory-item-col\">\n                    <div className=\"RankPointsHistory-text\">{formatISODateToDateTime(item.createdAt)}</div>\n                  </div>\n                </div>\n              ))}\n            </>\n          )}\n\n          <div className=\"RankPointsHistory-pagination flex justify-center\">\n            <Pagination\n              page={getHistoryPointsParamsRequest.page}\n              pageSize={getHistoryPointsParamsRequest.pageSize}\n              total={historyPointsState?.total}\n              onChange={handlePageChange}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default RankPointsHistory;\n","import { EKeyTabRank } from './Rank.enums';\n\nexport const dataTabsRank = [\n  { value: EKeyTabRank.REWARD, label: 'Thưởng hạng' },\n  { value: EKeyTabRank.EXCHANGE_POINTS, label: 'Đổi điểm' },\n  { value: EKeyTabRank.HISTORY_POINT, label: 'Lịch sử điểm' },\n];\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport Button from '@/components/Button';\nimport RankReward from '@/pages/Rank/RankReward';\nimport RankExchangePoints from '@/pages/Rank/RankExchangePoints';\nimport RankPointsHistory from '@/pages/Rank/RankPointsHistory';\nimport { EKeyTabRank } from '@/pages/Rank/Rank.enums';\nimport { dataTabsRank } from '@/pages/Rank/Rank.data';\nimport { getBonusAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { ERankControllerAction } from '@/redux/actions/rank-controller/constants';\nimport PageLoading from '@/components/PageLoading';\n\nimport './Rank.scss';\n\nconst Rank: React.FC = () => {\n  const dispatch = useDispatch();\n  const [activeKeyTabRank, setActiveKeyTabRank] = useState<EKeyTabRank>(EKeyTabRank.REWARD);\n\n  const bonusState = useSelector((state: TRootState) => state.rankReducer.bonus);\n  const getBonusLoading = useSelector((state: TRootState) => state.loadingReducer[ERankControllerAction.GET_BONUS]);\n\n  const nextRankLevelInfo = bonusState?.nextLevelBonus?.find((item) => item.rank === bonusState?.rank + 1);\n\n  const handleChangeKeyTabRank = (key: EKeyTabRank): void => {\n    setActiveKeyTabRank(key);\n  };\n\n  const caculatorPercentProcess = (): string => {\n    if (bonusState?.currentPoint && bonusState?.nextLevelPoint) {\n      return `${((bonusState.currentPoint / bonusState.nextLevelPoint) * 100).toFixed(2)}%`;\n    }\n\n    return '0%';\n  };\n\n  const renderSectionTabRank = (): React.ReactNode => {\n    switch (activeKeyTabRank) {\n      case EKeyTabRank.REWARD:\n        return <RankReward />;\n      case EKeyTabRank.EXCHANGE_POINTS:\n        return <RankExchangePoints />;\n      case EKeyTabRank.HISTORY_POINT:\n        return <RankPointsHistory />;\n\n      default:\n        return <></>;\n    }\n  };\n\n  const getBonusData = useCallback(() => {\n    dispatch(getBonusAction.request());\n  }, [dispatch]);\n\n  useEffect(() => {\n    getBonusData();\n  }, [getBonusData]);\n\n  return (\n    <div className=\"Rank style-container\">\n      {getBonusLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Hạng của bạn\" />\n\n          <div className=\"Rank-main\">\n            <div className=\"Rank-card\">\n              <div className=\"Rank-card-header flex justify-between\">\n                <div className=\"Rank-card-header-item flex items-center\">\n                  <Icon name={EIconName.Medal} color={EIconColor.BUDDHA_GOLD} />\n                  Hạng {bonusState?.rank}\n                </div>\n                <div className=\"Rank-card-header-item flex items-center\">\n                  {bonusState?.currentPoint} <span>điểm</span>\n                </div>\n              </div>\n              <div className=\"Rank-card-description\">\n                Bạn cần {nextRankLevelInfo?.gradePoint} điểm tích luỹ để nhận thêm ưu đãi từ hạng tiếp theo\n              </div>\n              <div className=\"Rank-card-footer flex justify-between flex-wrap\">\n                <div className=\"Rank-card-footer-item\">Tiến độ</div>\n                <div className=\"Rank-card-footer-item\">\n                  {bonusState?.currentPoint} / {bonusState?.nextLevelPoint} điểm\n                </div>\n                <div className=\"Rank-card-footer-process\">\n                  <div className=\"Rank-card-footer-process-bar\" style={{ width: caculatorPercentProcess() }} />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"Rank-tabs flex justify-between\">\n              {dataTabsRank.map((item) => (\n                <div key={item.value} className=\"Rank-tabs-item\">\n                  <Button\n                    size=\"small\"\n                    title={item.label}\n                    shadow={false}\n                    type={item.value === activeKeyTabRank ? 'link' : undefined}\n                    onClick={(): void => handleChangeKeyTabRank(item.value)}\n                  />\n                </div>\n              ))}\n            </div>\n\n            {renderSectionTabRank()}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Rank;\n","import Rank from './Rank';\n\nexport default Rank;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","export default __webpack_public_path__ + \"static/media/image-empty-meal-schedule.79e89b30.png\";","import React from 'react';\n\nimport ImageEmptyMealSchedule from '@/assets/images/image-empty-meal-schedule.png';\nimport Button from '@/components/Button';\n\nimport { TEmptyBoxProps } from './EmptyBox.types';\nimport './EmptyBox.scss';\n\nconst EmptyBox: React.FC<TEmptyBoxProps> = ({ title, buttonProps }) => {\n  return (\n    <div className=\"EmptyBox\">\n      <div className=\"EmptyBox-image\">\n        <img src={ImageEmptyMealSchedule} alt=\"\" />\n      </div>\n\n      <div className=\"EmptyBox-title\">{title}</div>\n\n      {buttonProps && (\n        <div className=\"EmptyBox-btn\">\n          <Button {...buttonProps} type=\"primary\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmptyBox;\n","import EmptyBox from './EmptyBox';\n\nexport * from './EmptyBox.types';\nexport default EmptyBox;\n","import React from 'react';\nimport { Pagination as AntdPagination } from 'antd';\nimport classNames from 'classnames';\n\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\n\nimport './Pagination.scss';\n\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\n  return (\n    <div className={classNames('Pagination', className)}>\n      <AntdPagination\n        current={page}\n        pageSize={pageSize}\n        total={total}\n        showQuickJumper={false}\n        showSizeChanger={false}\n        hideOnSinglePage\n        showLessItems\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport * from './Pagination.types';\nexport default Pagination;\n"],"sourceRoot":""}