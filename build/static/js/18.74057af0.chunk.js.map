{"version":3,"sources":["pages/Categorys/Categorys.tsx","pages/Categorys/index.ts","assets/images/image-empty-meal-schedule.png","components/EmptyBox/EmptyBox.tsx","components/EmptyBox/index.ts","components/WrapperLazyLoad/index.tsx","components/WrapperLazyLoad/WrapperLazyLoad.tsx","components/Select/Select.tsx","utils/hooks.ts","components/Select/index.ts","components/Carousels/Carousels.tsx","components/Carousels/index.ts","containers/ProductsCarousel/ProductsCarousel.tsx","containers/ProductsCarousel/index.ts"],"names":["Categorys","dispatch","useDispatch","Form","useForm","form","useState","getProductsParamsRequest","setGetProductsParamsRequest","productsAllState","useSelector","state","productReducer","productsAll","productsSpecialState","productsSpecial","getProductsSpecialLoading","loadingReducer","EProductControllerAction","GET_PRODUCTS_SPECIAL","getProductsAllLoading","GET_PRODUCTS_ALL","isEmpty","length","loading","getProductsAll","useCallback","getProductsAllAction","request","getProductsSpecial","getProductsSpecialAction","handleSearchProduct","values","getFieldsValue","body","page","DEFAULT_PAGE","name","price","sortField","ESortField","PRICE","sortType","value","useEffect","scrollToTop","className","PageLoading","HeaderSkew","title","ProductsCarousel","data","Item","Input","placeholder","onEnter","Select","options","filterProuductsOptions","onChange","EmptyBox","filter","group","products","map","category","center","onClick","navigate","Paths","Category","id","item","ProductBox","sale","Number","link","Product","buttonProps","src","ImageEmptyMealSchedule","alt","Button","type","WrapperLazyLoad","children","maxHeight","resetScrollToTop","resetScrollToBottom","onScroll","onEnd","onTop","onResetScrollSuccess","wrapperLazyLoadRef","useRef","current","scrollTo","scrollTop","scrollHeight","ref","e","element","currentTarget","isScrollEndOfElment","Math","round","clientHeight","style","classNames","show","disabled","showSearch","defaultValue","allowClear","dropdownClassName","onSearch","paginate","onLoadMore","keyword","setKeyword","isMounted","setIsMounted","searchValueDebounce","delay","debouncedValue","setDebouncedValue","handleDebounce","setTimeout","clearTimeout","useDebounce","TIMEOUT_DEBOUNCE","SEARCH","handleScrollEnd","getTotalPage","total","pageSize","labelInValue","filterOption","input","option","searchString","label","keywordValue","searchValue","suffixIcon","Icon","EIconName","AngleRight","color","EIconColor","BOULDER","notFoundContent","getPopupContainer","trigger","onClear","dropdownRender","menu","virtual","Carousels","dots","arrows","infinite","slidesToShow","slidesToScroll","slidesPerRow","responsive","autoplay","onDragging","settings","speed","autoplaySpeed","nextArrow","size","shadow","iconName","prevArrow","beforeChange","afterChange","isDragging","setIsDragging","isMobile","uiReducer","device","EDeviceType","MOBILE","splitData","splice","isShowCarousel","firstBlock","lastBlock","middleBlock","_","index","productObjectDescription","productObject","obj","details","join","trim","handleNavigateProductDetail","hasBg","imageMkt","image","onError","handleErrorImageUrl","dangerouslySetInnerHTML","__html","formatMoneyVND","amount"],"mappings":"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","file":"static/js/18.74057af0.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form } from 'antd';\nimport { navigate } from '@reach/router';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport { TRootState } from '@/redux/reducers';\nimport { getProductsAllAction, getProductsSpecialAction } from '@/redux/actions';\nimport { EProductControllerAction } from '@/redux/actions/product-controller/constants';\nimport PageLoading from '@/components/PageLoading';\nimport ProductsCarousel from '@/containers/ProductsCarousel';\nimport ProductBox from '@/components/ProductBox';\nimport { Paths } from '@/pages/routers';\nimport EmptyBox from '@/components/EmptyBox';\nimport { scrollToTop } from '@/utils/functions';\nimport { TParamsGetProductsAll } from '@/services/api/product-controller/types';\nimport { DEFAULT_PAGE, filterProuductsOptions } from '@/common/constants';\nimport { ESortField } from '@/services/api/product-controller/enums';\nimport Input from '@/components/Input';\nimport Select from '@/components/Select';\n\nimport './Categorys.scss';\n\nconst Categorys: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [form] = Form.useForm();\n  const [getProductsParamsRequest, setGetProductsParamsRequest] = useState<TParamsGetProductsAll>({});\n\n  const productsAllState = useSelector((state: TRootState) => state.productReducer.productsAll);\n  const productsSpecialState = useSelector((state: TRootState) => state.productReducer.productsSpecial);\n\n  const getProductsSpecialLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EProductControllerAction.GET_PRODUCTS_SPECIAL],\n  );\n  const getProductsAllLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EProductControllerAction.GET_PRODUCTS_ALL],\n  );\n  const isEmpty = productsAllState?.length === 0;\n\n  const loading = getProductsSpecialLoading || getProductsAllLoading;\n\n  const getProductsAll = useCallback(() => {\n    dispatch(getProductsAllAction.request(getProductsParamsRequest));\n  }, [dispatch, getProductsParamsRequest]);\n\n  const getProductsSpecial = useCallback(() => {\n    dispatch(getProductsSpecialAction.request({}));\n  }, [dispatch]);\n\n  const handleSearchProduct = (): void => {\n    const values = form.getFieldsValue();\n\n    let body = {\n      ...getProductsParamsRequest,\n      page: DEFAULT_PAGE,\n      name: values?.name,\n    };\n\n    if (values.price) {\n      body = {\n        ...body,\n        sortField: ESortField.PRICE,\n        sortType: values.price?.value,\n      };\n    }\n    setGetProductsParamsRequest(body);\n  };\n\n  useEffect(() => {\n    getProductsAll();\n  }, [getProductsAll]);\n\n  useEffect(() => {\n    getProductsSpecial();\n  }, [getProductsSpecial]);\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <div className=\"Categorys\">\n      {loading ? (\n        <PageLoading />\n      ) : (\n        <div className=\"Categorys-wrapper\">\n          <HeaderSkew title=\"Danh mục sản phẩm\" />\n\n          <ProductsCarousel data={productsSpecialState} />\n\n          <Form form={form} className=\"Categorys-filters flex justify-between items-center\">\n            <Form.Item name=\"name\">\n              <Input placeholder=\"Nhập sản phẩm cần tìm kiếm\" onEnter={handleSearchProduct} />\n            </Form.Item>\n            <Form.Item name=\"price\">\n              <Select placeholder=\"Lọc sản phẩm\" options={filterProuductsOptions} onChange={handleSearchProduct} />\n            </Form.Item>\n          </Form>\n\n          {isEmpty ? (\n            <EmptyBox title=\"Không có dữ liệu sản phẩm\" />\n          ) : (\n            <div className=\"Categorys-wrapper-main\">\n              {productsAllState\n                ?.filter((group) => group?.products?.length > 0)\n                ?.map((group) => (\n                  <>\n                    <HeaderSkew\n                      title={group?.category?.name}\n                      center\n                      onClick={(): void => {\n                        navigate(Paths.Category(group.category.id));\n                      }}\n                    />\n                    <div className=\"Categorys-list flex flex-wrap\">\n                      {group?.products?.map((item) => (\n                        <div key={item.id} className=\"Categorys-list-item\">\n                          <ProductBox\n                            {...item}\n                            title={item.name}\n                            sale={Number(item.sale)}\n                            price={Number(item.price)}\n                            link={Paths.Product(item.id)}\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  </>\n                ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Categorys;\n","import Categorys from './Categorys';\n\nexport default Categorys;\n","export default __webpack_public_path__ + \"static/media/image-empty-meal-schedule.79e89b30.png\";","import React from 'react';\n\nimport ImageEmptyMealSchedule from '@/assets/images/image-empty-meal-schedule.png';\nimport Button from '@/components/Button';\n\nimport { TEmptyBoxProps } from './EmptyBox.types';\nimport './EmptyBox.scss';\n\nconst EmptyBox: React.FC<TEmptyBoxProps> = ({ title, buttonProps }) => {\n  return (\n    <div className=\"EmptyBox\">\n      <div className=\"EmptyBox-image\">\n        <img src={ImageEmptyMealSchedule} alt=\"\" />\n      </div>\n\n      <div className=\"EmptyBox-title\">{title}</div>\n\n      {buttonProps && (\n        <div className=\"EmptyBox-btn\">\n          <Button {...buttonProps} type=\"primary\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmptyBox;\n","import EmptyBox from './EmptyBox';\n\nexport * from './EmptyBox.types';\nexport default EmptyBox;\n","import WrapperLazyLoad from './WrapperLazyLoad';\nimport { TWrapperLazyLoadProps } from './WrapperLazyLoad.types';\n\nexport type { TWrapperLazyLoadProps };\nexport default WrapperLazyLoad;\n","import React, { useRef, useEffect } from 'react';\nimport classNames from 'classnames';\n\nimport { TWrapperLazyLoadProps } from './WrapperLazyLoad.types';\n\nimport './WrapperLazyLoad.scss';\n\nconst WrapperLazyLoad: React.FC<TWrapperLazyLoadProps> = ({\n  children,\n  loading,\n  maxHeight,\n  resetScrollToTop,\n  resetScrollToBottom,\n  onScroll,\n  onEnd,\n  onTop,\n  onResetScrollSuccess,\n}) => {\n  const wrapperLazyLoadRef = useRef<HTMLDivElement>(null);\n\n  const onScrollEnd = (e: React.UIEvent<HTMLDivElement>): void => {\n    onScroll?.(e);\n    const element = e.currentTarget;\n    const isScrollEndOfElment = Math.round(element.scrollTop + element.clientHeight) >= element.scrollHeight;\n\n    if (element.scrollTop === 0) onTop?.();\n    if (isScrollEndOfElment && !resetScrollToTop) onEnd?.();\n  };\n\n  useEffect(() => {\n    if (resetScrollToTop && wrapperLazyLoadRef?.current) {\n      wrapperLazyLoadRef?.current?.scrollTo(0, 0);\n      onResetScrollSuccess?.();\n    }\n  }, [resetScrollToTop, onResetScrollSuccess]);\n\n  useEffect(() => {\n    if (resetScrollToBottom && wrapperLazyLoadRef?.current) {\n      const domWrapperLazyLoad = wrapperLazyLoadRef?.current;\n      if (domWrapperLazyLoad) {\n        wrapperLazyLoadRef.current.scrollTop = wrapperLazyLoadRef.current.scrollHeight;\n      }\n      onResetScrollSuccess?.();\n    }\n  }, [resetScrollToBottom, onResetScrollSuccess]);\n\n  return (\n    <div ref={wrapperLazyLoadRef} onScroll={onScrollEnd} className=\"WrapperLazyLoad\" style={{ maxHeight }}>\n      {children}\n      <div className={classNames('WrapperLazyLoad__loading', { show: loading })}>{/* <Loading /> */}</div>\n    </div>\n  );\n};\n\nexport default WrapperLazyLoad;\n","import React, { useEffect, useState } from 'react';\nimport { Select as AntdSelect } from 'antd';\nimport classNames from 'classnames';\n\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport { getTotalPage, searchString } from '@/utils/functions';\nimport { useDebounce } from '@/utils/hooks';\nimport { TIMEOUT_DEBOUNCE } from '@/common/enums';\nimport WrapperLazyLoad from '@/components/WrapperLazyLoad';\n\nimport { TSelectProps } from './Select.types';\nimport './Select.scss';\n\nconst Select: React.FC<TSelectProps> = ({\n  placeholder,\n  disabled,\n  options = [],\n  showSearch = true,\n  value,\n  className,\n  defaultValue,\n  allowClear,\n  dropdownClassName,\n  onSearch,\n  paginate,\n  onLoadMore,\n  onChange,\n}) => {\n  const [keyword, setKeyword] = useState<string>('');\n  const [isMounted, setIsMounted] = useState<boolean>(false);\n  const searchValueDebounce = useDebounce(keyword, TIMEOUT_DEBOUNCE.SEARCH);\n\n  const filterOption = (input: string, option: any): boolean => {\n    return searchString(option.label, keyword);\n  };\n\n  const handleSearch = (keywordValue: string): void => {\n    setKeyword(keywordValue);\n  };\n\n  const dropdownRender = (menu: React.ReactElement): React.ReactElement => {\n    return (\n      <div className={classNames('Select-dropdown', dropdownClassName)}>\n        <div className=\"Select-dropdown-main\">\n          <WrapperLazyLoad maxHeight={256} onEnd={handleScrollEnd}>\n            {menu}\n          </WrapperLazyLoad>\n        </div>\n      </div>\n    );\n  };\n\n  const handleScrollEnd = (): void => {\n    if (onSearch && paginate) {\n      const isLoadMore = paginate.page < getTotalPage(paginate.total, paginate.pageSize);\n      if (isLoadMore) {\n        onLoadMore?.();\n      }\n    }\n  };\n\n  const handleClear = (): void => {\n    onChange?.(null);\n  };\n\n  useEffect(() => {\n    if (isMounted && onSearch) {\n      onSearch?.(searchValueDebounce);\n    }\n\n    setIsMounted(true);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchValueDebounce]);\n\n  return (\n    <div className={classNames('Select', className)}>\n      <AntdSelect\n        className=\"Select-control\"\n        value={value}\n        showSearch={showSearch}\n        placeholder={placeholder}\n        defaultValue={defaultValue}\n        labelInValue\n        allowClear={allowClear}\n        filterOption={onSearch ? false : filterOption}\n        onSearch={handleSearch}\n        options={options}\n        searchValue={keyword}\n        dropdownClassName={classNames('Select-dropdown', dropdownClassName)}\n        suffixIcon={<Icon name={EIconName.AngleRight} color={EIconColor.BOULDER} />}\n        notFoundContent=\"Không tìm thấy dữ liệu\"\n        getPopupContainer={(trigger: HTMLElement): HTMLElement => trigger}\n        onChange={onChange}\n        onClear={handleClear}\n        dropdownRender={dropdownRender}\n        disabled={disabled}\n        virtual={false}\n      />\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\n\ntype TScroll = {\n  x: number;\n  y: number;\n  direction: string;\n};\n\nexport const useDebounce = (value: string, delay: number): string => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const handleDebounce = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return (): void => {\n      clearTimeout(handleDebounce);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n\nexport const useScroll = (): TScroll => {\n  const [scroll, setScroll] = useState<TScroll>({\n    x: document.body.getBoundingClientRect().left,\n    y: document.body.getBoundingClientRect().top,\n    direction: '',\n  });\n\n  const listener = (): void => {\n    setScroll((prev: TScroll) => ({\n      x: document.body.getBoundingClientRect().left,\n      y: -document.body.getBoundingClientRect().top,\n      direction: prev.y > -document.body.getBoundingClientRect().top ? 'up' : 'down',\n    }));\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', listener);\n    return (): void => window.removeEventListener('scroll', listener);\n  }, []);\n\n  return scroll;\n};\n\nexport const useOnClickOutside = (\n  ref: React.RefObject<HTMLElement>,\n  handler: (event: MouseEvent | TouchEvent) => void,\n): void => {\n  useEffect(() => {\n    const listener = (event: MouseEvent | TouchEvent): void => {\n      if (!ref.current || ref.current.contains(event.target as Node)) {\n        return;\n      }\n      handler(event);\n    };\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n    return (): void => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n};\n","import Select from './Select';\n\nexport * from './Select.types';\nexport default Select;\n","import React from 'react';\nimport Slider from 'react-slick';\nimport classNames from 'classnames';\n\nimport Button from '@/components/Button';\nimport { EIconName } from '@/components/Icon';\n\nimport { TCarouselsProps } from './Carousels.types';\nimport './Carousels.scss';\n\nexport const Carousels: React.FC<TCarouselsProps> = ({\n  dots = true,\n  arrows = true,\n  infinite = true,\n  slidesToShow = 1,\n  slidesToScroll = 1,\n  slidesPerRow = 1,\n  responsive = [],\n  autoplay,\n  onDragging,\n  children,\n}) => {\n  const renderPrevArrow = (): React.ReactElement => {\n    return <Button size=\"small\" className=\"Carousels-arrow prev\" shadow={false} iconName={EIconName.AngleRight} />;\n  };\n\n  const renderNextArrow = (): React.ReactElement => {\n    return <Button size=\"small\" className=\"Carousels-arrow next\" shadow={false} iconName={EIconName.AngleRight} />;\n  };\n  const settings = {\n    speed: 500,\n    dots,\n    arrows,\n    infinite,\n    autoplay,\n    slidesPerRow,\n    autoplaySpeed: 5000,\n    slidesToShow,\n    slidesToScroll,\n    nextArrow: renderNextArrow(),\n    prevArrow: renderPrevArrow(),\n    responsive,\n    beforeChange: (): void => onDragging?.(true),\n    afterChange: (): void => onDragging?.(false),\n  };\n  return (\n    <div className={classNames('Carousels')}>\n      <Slider {...settings}>{children}</Slider>\n    </div>\n  );\n};\n\nexport default Carousels;\n","import Carousels from '@/components/Carousels/Carousels';\nimport { TCarouselsProps } from './Carousels.types';\n\nexport type { TCarouselsProps };\nexport default Carousels;\n","import React, { useState } from 'react';\nimport { navigate } from '@reach/router';\nimport { useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport ProductBox from '@/components/ProductBox';\nimport Carousels from '@/components/Carousels';\nimport { Paths } from '@/pages/routers';\nimport { formatMoneyVND, handleErrorImageUrl } from '@/utils/functions';\nimport { TRootState } from '@/redux/reducers';\nimport { EDeviceType } from '@/redux/reducers/ui';\nimport { TProductResponse } from '@/services/api/product-controller/types';\n\nimport { TProductsCarouselProps } from './ProductsCarousel.types';\nimport './ProductsCarousel.scss';\n\nconst ProductsCarousel: React.FC<TProductsCarouselProps> = ({ data = [], title }) => {\n  const [isDragging, setIsDragging] = useState<boolean>(false);\n\n  const window = useSelector((state: TRootState) => state.uiReducer.device.type);\n\n  const isMobile = window === EDeviceType.MOBILE;\n  const splitData = [...data].splice(0, 5);\n\n  const isShowCarousel = splitData.length >= 3;\n  const firstBlock = splitData?.[0];\n  const lastBlock = splitData?.[splitData.length - 1];\n  const middleBlock = splitData?.filter((_, index) => index !== 0 && index !== splitData.length - 1);\n\n  const productObjectDescription = (item: TProductResponse): string => {\n    return (\n      item.productObject\n        ?.map((obj) => obj.details)\n        ?.join(' ')\n        ?.trim() || ''\n    );\n  };\n\n  const handleNavigateProductDetail = (id: string): void => {\n    if (!isDragging) navigate(Paths.Product(id));\n  };\n\n  return isShowCarousel ? (\n    <div className=\"ProductsCarousel\">\n      <div className=\"container\">\n        <div className=\"ProductsCarousel-wrapper\">\n          {title && <HeaderSkew title={title} center />}\n\n          {isMobile ? (\n            <div className=\"ProductsCarousel-carousel-mobile\">\n              <Carousels autoplay={false} dots={false} slidesToShow={2} onDragging={setIsDragging}>\n                {data.map((item) => (\n                  <div className=\"ProductsCarousel-carousel-mobile-item\">\n                    <ProductBox\n                      {...item}\n                      hasBg\n                      title={item.name}\n                      sale={Number(item.sale)}\n                      price={Number(item.price)}\n                      link={!isDragging ? Paths.Product(item.id) : ''}\n                    />\n                  </div>\n                ))}\n              </Carousels>\n            </div>\n          ) : (\n            <div className=\"ProductsCarousel-main flex flex-wrap\">\n              <div className=\"ProductsCarousel-main-item\">\n                <ProductBox\n                  {...firstBlock}\n                  hasBg\n                  title={firstBlock.name}\n                  sale={Number(firstBlock.sale)}\n                  price={Number(firstBlock.price)}\n                  link={Paths.Product(firstBlock.id)}\n                />\n              </div>\n              <div className=\"ProductsCarousel-main-item\">\n                <Carousels autoplay={false} dots={false} onDragging={setIsDragging}>\n                  {middleBlock.map((item) => (\n                    <div key={item.id}>\n                      <div className=\"ProductsCarousel-carousel-item flex flex-wrap\">\n                        <div\n                          className=\"ProductsCarousel-carousel-item-image\"\n                          onClick={(): void => handleNavigateProductDetail(item.id)}\n                        >\n                          <img src={item.imageMkt || item.image} onError={handleErrorImageUrl} alt=\"\" />\n                        </div>\n                        <div className=\"ProductsCarousel-carousel-item-info\">\n                          <div\n                            className=\"ProductsCarousel-carousel-item-info-title\"\n                            onClick={(): void => handleNavigateProductDetail(item.id)}\n                          >\n                            {item.name}\n                          </div>\n                          <div className=\"ProductsCarousel-carousel-item-info-subtitle\">\n                            {productObjectDescription(item) ? 'Đối tượng sử dụng:' : ''}\n                          </div>\n                          <div\n                            className=\"ProductsCarousel-carousel-item-info-description style-content\"\n                            // eslint-disable-next-line react/no-danger\n                            dangerouslySetInnerHTML={{\n                              __html: productObjectDescription(item),\n                            }}\n                          />\n\n                          <div className=\"ProductsCarousel-carousel-item-info-price\">\n                            {formatMoneyVND({ amount: item.price })} VNĐ\n                          </div>\n                          <div className=\"ProductsCarousel-carousel-item-info-btn flex justify-center\">\n                            <div\n                              className=\"ProductsCarousel-carousel-item-info-cta\"\n                              onClick={(): void => handleNavigateProductDetail(item.id)}\n                            >\n                              Mua ngay\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </Carousels>\n              </div>\n              <div className=\"ProductsCarousel-main-item\">\n                <ProductBox\n                  {...lastBlock}\n                  hasBg\n                  title={lastBlock.name}\n                  sale={Number(lastBlock.sale)}\n                  price={Number(lastBlock.price)}\n                  link={Paths.Product(lastBlock.id)}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default ProductsCarousel;\n","import ProductsCarousel from './ProductsCarousel';\n\nexport default ProductsCarousel;\n"],"sourceRoot":""}