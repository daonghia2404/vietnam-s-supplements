{"version":3,"sources":["pages/HistoryRotation/HistoryRotation.enums.ts","pages/HistoryRotation/HistoryRotation.data.ts","pages/HistoryRotation/HistoryRotation.tsx","pages/HistoryRotation/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","assets/images/image-empty-meal-schedule.png","components/EmptyBox/EmptyBox.tsx","components/EmptyBox/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts"],"names":["EKeyTabHistoryRotation","dataHistoryRotationTabs","value","NOT_EXPIRE","label","EXPIRE","HistoryRotation","dispatch","useDispatch","getHistoryWheelLoading","useSelector","state","loadingReducer","EWheelControllerAction","GET_HISTORY_WHEEL","historyWheelState","wheelReducer","historyWheel","isEmpty","records","length","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","type","ETypeHistoryWheel","NULL","getHistoryWheelParamsRequest","setGetHistoryWheelParamsRequest","activeKeyHistoryRotaionTab","setActiveKeyHistoryRotaionTab","renderStatusHistoryRotation","data","isFirstDateValueGreaterThanSecondDateValue","outOfDate","color","status","EHistoryPrizeStatus","RECEIVED","NOT_RECEIVED","getHistoryWheelData","useCallback","getHisotryWheelAction","request","useEffect","className","HeaderSkew","title","map","item","Button","size","shadow","undefined","onClick","key","OUTDATE","PageLoading","EmptyBox","buttonProps","link","LayoutPaths","Admin","Paths","Wheels","formatISODateToDateTime","createdAt","prize","description","classNames","Pagination","total","onChange","center","src","ImageEmptyMealSchedule","alt","current","showQuickJumper","showSizeChanger","hideOnSinglePage","showLessItems"],"mappings":"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","file":"static/js/24.45675d62.chunk.js","sourcesContent":["export enum EKeyTabHistoryRotation {\n  NOT_EXPIRE = 'NOT_EXPIRE',\n  EXPIRE = 'EXPIRE',\n}\n","import { EKeyTabHistoryRotation } from '@/pages/HistoryRotation/HistoryRotation.enums';\n\nexport const dataHistoryRotationTabs = [\n  { value: EKeyTabHistoryRotation.NOT_EXPIRE, label: 'Còn hạn' },\n  { value: EKeyTabHistoryRotation.EXPIRE, label: 'Đã hết hạn' },\n];\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Button from '@/components/Button';\nimport { THistoryWheelResponse, TParamsGetHistoryWheel } from '@/services/api/wheel-controller/types';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { getHisotryWheelAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EWheelControllerAction } from '@/redux/actions/wheel-controller/constants';\nimport PageLoading from '@/components/PageLoading';\nimport { EHistoryPrizeStatus, ETypeHistoryWheel } from '@/services/api/wheel-controller/enums';\nimport Pagination from '@/components/Pagination';\nimport EmptyBox from '@/components/EmptyBox';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport { formatISODateToDateTime, isFirstDateValueGreaterThanSecondDateValue } from '@/utils/functions';\n\nimport { EKeyTabHistoryRotation } from './HistoryRotation.enums';\nimport { dataHistoryRotationTabs } from './HistoryRotation.data';\nimport './HistoryRotation.scss';\n\nconst HistoryRotation: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const getHistoryWheelLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EWheelControllerAction.GET_HISTORY_WHEEL],\n  );\n  const historyWheelState = useSelector((state: TRootState) => state.wheelReducer.historyWheel);\n  const isEmpty = historyWheelState?.records && historyWheelState?.records?.length === 0;\n\n  const [getHistoryWheelParamsRequest, setGetHistoryWheelParamsRequest] = useState<TParamsGetHistoryWheel>({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n    type: ETypeHistoryWheel.NULL,\n  });\n\n  const [activeKeyHistoryRotaionTab, setActiveKeyHistoryRotaionTab] = useState<EKeyTabHistoryRotation>(\n    EKeyTabHistoryRotation.NOT_EXPIRE,\n  );\n\n  const renderStatusHistoryRotation = (data: THistoryWheelResponse): { label: string; color: string } => {\n    switch (true) {\n      case isFirstDateValueGreaterThanSecondDateValue('', data.outOfDate):\n        return { label: 'Đã hết hạn', color: 'error' };\n\n      case data.status === EHistoryPrizeStatus.RECEIVED:\n        return { label: 'Đã nhận thưởng', color: 'success' };\n\n      case data.status === EHistoryPrizeStatus.NOT_RECEIVED:\n        return { label: 'Chưa nhận thưởng', color: 'warning' };\n\n      default:\n        return { label: '', color: '' };\n    }\n  };\n\n  const handleChangeKeyTabHistoryRotation = (key: EKeyTabHistoryRotation): void => {\n    setActiveKeyHistoryRotaionTab(key);\n    setGetHistoryWheelParamsRequest({\n      ...getHistoryWheelParamsRequest,\n      type: key === EKeyTabHistoryRotation.NOT_EXPIRE ? ETypeHistoryWheel.NULL : ETypeHistoryWheel.OUTDATE,\n    });\n  };\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetHistoryWheelParamsRequest({\n      ...getHistoryWheelParamsRequest,\n      page,\n      pageSize: pageSize || getHistoryWheelParamsRequest.pageSize,\n    });\n  };\n\n  const getHistoryWheelData = useCallback(() => {\n    dispatch(getHisotryWheelAction.request(getHistoryWheelParamsRequest));\n  }, [dispatch, getHistoryWheelParamsRequest]);\n\n  useEffect(() => {\n    getHistoryWheelData();\n  }, [getHistoryWheelData]);\n\n  return (\n    <div className=\"HistoryRotation style-container\">\n      <HeaderSkew title=\"Lịch sử vòng quay\" />\n\n      <div className=\"HistoryRotation-main\">\n        <div className=\"HistoryRotation-tabs flex justify-between\">\n          {dataHistoryRotationTabs.map((item) => (\n            <div className=\"HistoryRotation-tabs-item\">\n              <Button\n                size=\"small\"\n                title={item.label}\n                shadow={false}\n                type={activeKeyHistoryRotaionTab === item.value ? 'link' : undefined}\n                onClick={(): void => handleChangeKeyTabHistoryRotation(item.value)}\n              />\n            </div>\n          ))}\n        </div>\n\n        <div className=\"HistoryRotation-main-list\">\n          {getHistoryWheelLoading ? (\n            <PageLoading />\n          ) : (\n            <>\n              {isEmpty ? (\n                <EmptyBox\n                  title=\"Không có dữ liệu lịch sử quay thưởng\"\n                  buttonProps={{\n                    title: 'Đi tới vòng quay',\n                    type: 'primary',\n                    link: `${LayoutPaths.Admin}${Paths.Wheels}`,\n                  }}\n                />\n              ) : (\n                <>\n                  {historyWheelState?.records?.map((item) => (\n                    <div className=\"HistoryRotation-main-list-item flex justify-between\">\n                      <div className=\"HistoryRotation-main-list-item-col\">\n                        <div className=\"HistoryRotation-main-list-item-text\">\n                          {formatISODateToDateTime(item.createdAt)}\n                        </div>\n                        <div className=\"HistoryRotation-main-list-item-text bold\">{item.prize}</div>\n                        <div className=\"HistoryRotation-main-list-item-text\">{item.description}</div>\n                      </div>\n                      <div className=\"HistoryRotation-main-list-item-col\">\n                        <div\n                          className={classNames(\n                            'HistoryRotation-main-list-item-text warning nowrap',\n                            renderStatusHistoryRotation(item).color,\n                          )}\n                        >\n                          {renderStatusHistoryRotation(item).label}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"HistoryRotation-pagination flex justify-center\">\n        <Pagination\n          page={getHistoryWheelParamsRequest.page}\n          pageSize={getHistoryWheelParamsRequest.pageSize}\n          total={historyWheelState?.total}\n          onChange={handlePageChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default HistoryRotation;\n","import HistoryRotation from './HistoryRotation';\n\nexport default HistoryRotation;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","export default __webpack_public_path__ + \"static/media/image-empty-meal-schedule.79e89b30.png\";","import React from 'react';\n\nimport ImageEmptyMealSchedule from '@/assets/images/image-empty-meal-schedule.png';\nimport Button from '@/components/Button';\n\nimport { TEmptyBoxProps } from './EmptyBox.types';\nimport './EmptyBox.scss';\n\nconst EmptyBox: React.FC<TEmptyBoxProps> = ({ title, buttonProps }) => {\n  return (\n    <div className=\"EmptyBox\">\n      <div className=\"EmptyBox-image\">\n        <img src={ImageEmptyMealSchedule} alt=\"\" />\n      </div>\n\n      <div className=\"EmptyBox-title\">{title}</div>\n\n      {buttonProps && (\n        <div className=\"EmptyBox-btn\">\n          <Button {...buttonProps} type=\"primary\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmptyBox;\n","import EmptyBox from './EmptyBox';\n\nexport * from './EmptyBox.types';\nexport default EmptyBox;\n","import React from 'react';\nimport { Pagination as AntdPagination } from 'antd';\nimport classNames from 'classnames';\n\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\n\nimport './Pagination.scss';\n\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\n  return (\n    <div className={classNames('Pagination', className)}>\n      <AntdPagination\n        current={page}\n        pageSize={pageSize}\n        total={total}\n        showQuickJumper={false}\n        showSizeChanger={false}\n        hideOnSinglePage\n        showLessItems\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport * from './Pagination.types';\nexport default Pagination;\n"],"sourceRoot":""}