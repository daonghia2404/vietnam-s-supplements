{"version":3,"sources":["pages/Register/Register.tsx","pages/Register/index.ts","assets/images/image-auth-banner.png","containers/AuthForm/AuthForm.tsx","containers/AuthForm/index.ts","services/api/auth-controller/enums.ts"],"names":["Register","dispatch","useDispatch","Form","useForm","form","useState","passwordValue","setPasswordValue","sendOtpLoading","useSelector","state","loadingReducer","EAuthControllerAction","SEND_OTP","handleSendOtpSuccess","values","navigate","LayoutPaths","Auth","Paths","AccountVerification","type","ETypeSendOTP","REGISTER","body","password","phone","inviteCode","AuthForm","className","to","Login","onFinish","bodySendOtp","sendOtpAction","request","Item","name","rules","validationRules","required","onlyNumeric","Input","placeholder","prefix","Icon","EIconName","Phone","Lock","onChange","e","value","target","confirmPassword","Users","style","marginTop","Button","title","htmlType","loading","children","src","ImageAuthBanner","alt","ERole"],"mappings":"uQAkGeA,EAlFY,WACzB,IAAMC,EAAWC,cACjB,EAAeC,IAAKC,UAAbC,EAAP,oBACA,EAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAiBC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,eAAeC,IAAsBC,aAgB/FC,EAAuB,SAACC,GAC5BC,YAAS,GAAD,OAAIC,IAAYC,MAAhB,OAAuBC,IAAMC,qBAAuB,CAC1DV,MAAO,CACLW,KAAMC,IAAaC,SACnBC,KAAM,CACJC,SAAUV,EAAOU,SACjBC,MAAOX,EAAOW,MACdC,WAAYZ,EAAOY,YAAc,QAMzC,OACE,8BACE,eAACC,EAAA,EAAD,WACE,sBAAKC,UAAU,0BAAf,UACE,qBAAKA,UAAU,4CAAf,SACE,cAAC,IAAD,CAAMC,GAAE,UAAKb,IAAYC,MAAjB,OAAwBC,IAAMY,OAAtC,wCAEF,qBAAKF,UAAU,mDAAf,SACE,cAAC,IAAD,CAAMC,GAAE,UAAKb,IAAYC,MAAjB,OAAwBC,IAAMpB,UAAtC,uCAIJ,sBAAK8B,UAAU,8BAAf,UACE,eAAC,IAAD,CAAMA,UAAU,qBAAqBzB,KAAMA,EAAM4B,SAnCpC,SAACjB,GACpB,IAAMkB,EAAc,CAClBP,MAAOX,EAAOW,MACdL,KAAMC,IAAaC,UAGrBvB,EAASkC,KAAcC,QAAQF,GAAa,kBAAYnB,EAAqBC,QA6BvE,UACE,cAAC,IAAKqB,KAAN,CAAWC,KAAK,QAAQC,MAAO,CAACC,IAAgBC,WAAYD,IAAgBE,eAA5E,SACE,cAACC,EAAA,EAAD,CAAOC,YAAY,oCAAgBC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUC,YAEnE,cAAC,IAAKX,KAAN,CAAWC,KAAK,WAAWC,MAAO,CAACC,IAAgBC,YAAnD,SACE,cAACE,EAAA,EAAD,CACErB,KAAK,WACLsB,YAAY,qBACZC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUE,OAC9BC,SAjDoB,SAACC,GACjC,IAAQC,EAAUD,EAAEE,OAAZD,MACR5C,EAAiB4C,QAkDT,cAAC,IAAKf,KAAN,CACEC,KAAK,kBACLC,MAAO,CAACC,IAAgBC,WAAYD,IAAgBc,gBAAgB/C,IAFtE,SAIE,cAACoC,EAAA,EAAD,CAAOrB,KAAK,WAAWsB,YAAY,wCAAoBC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUE,WAEvF,cAAC,IAAKZ,KAAN,CAAWC,KAAK,aAAhB,SACE,cAACK,EAAA,EAAD,CAAOC,YAAY,6BAAgBC,OAAQ,cAACC,EAAA,EAAD,CAAMR,KAAMS,IAAUQ,YAEnE,cAAC,IAAKlB,KAAN,CAAWmB,MAAO,CAAEC,UAAW,QAA/B,SACE,cAACC,EAAA,EAAD,CAAQC,MAAM,uBAAUrC,KAAK,UAAUsC,SAAS,SAASC,QAASpD,SAItE,sBAAKqB,UAAU,yBAAf,iDACmB,cAAC,IAAD,CAAMC,GAAE,UAAKb,IAAYC,MAAjB,OAAwBC,IAAMY,OAAtC,kDCxFdhC,a,gECFA,MAA0B,8C,gBCsB1B6B,EAf4B,SAAC,GAAkB,IAAhBiC,EAAe,EAAfA,SAC5C,OACE,qBAAKhC,UAAU,WAAf,SACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKiC,IAAKC,EAAiBC,IAAI,SAGnC,qBAAKnC,UAAU,gBAAf,SAAgCgC,UCdzBjC,O,iCCFR,IAAKqC,EAOA3C,EAPZ,kC,SAAY2C,O,eAAAA,I,WAAAA,I,iBAAAA,I,8BAAAA,M,cAOA3C,K,oBAAAA,E,kCAAAA,M","file":"static/js/54.e972cd4a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, navigate } from '@reach/router';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AuthForm from '@/containers/AuthForm';\nimport Input from '@/components/Input';\nimport Icon, { EIconName } from '@/components/Icon';\nimport Button from '@/components/Button';\nimport { validationRules } from '@/utils/functions';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport { sendOtpAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EAuthControllerAction } from '@/redux/actions/auth-controller/constants';\nimport { ETypeSendOTP } from '@/services/api/auth-controller/enums';\n\nconst Register: React.FC = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n  const [passwordValue, setPasswordValue] = useState<string>('');\n\n  const sendOtpLoading = useSelector((state: TRootState) => state.loadingReducer[EAuthControllerAction.SEND_OTP]);\n\n  const handleChangePasswordField = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value } = e.target;\n    setPasswordValue(value);\n  };\n\n  const handleSubmit = (values: any): void => {\n    const bodySendOtp = {\n      phone: values.phone,\n      type: ETypeSendOTP.REGISTER,\n    };\n\n    dispatch(sendOtpAction.request(bodySendOtp, (): void => handleSendOtpSuccess(values)));\n  };\n\n  const handleSendOtpSuccess = (values: any): void => {\n    navigate(`${LayoutPaths.Auth}${Paths.AccountVerification}`, {\n      state: {\n        type: ETypeSendOTP.REGISTER,\n        body: {\n          password: values.password,\n          phone: values.phone,\n          inviteCode: values.inviteCode || '',\n        },\n      },\n    });\n  };\n\n  return (\n    <div>\n      <AuthForm>\n        <div className=\"AuthForm-item-navs flex\">\n          <div className=\"AuthForm-item-navs-item flex items-center\">\n            <Link to={`${LayoutPaths.Auth}${Paths.Login}`}>Đăng Nhập</Link>\n          </div>\n          <div className=\"AuthForm-item-navs-item flex items-center active\">\n            <Link to={`${LayoutPaths.Auth}${Paths.Register}`}>Đăng Ký</Link>\n          </div>\n        </div>\n\n        <div className=\"AuthForm-main flex flex-col\">\n          <Form className=\"AuthForm-main-form\" form={form} onFinish={handleSubmit}>\n            <Form.Item name=\"phone\" rules={[validationRules.required(), validationRules.onlyNumeric()]}>\n              <Input placeholder=\"Số Điện Thoại\" prefix={<Icon name={EIconName.Phone} />} />\n            </Form.Item>\n            <Form.Item name=\"password\" rules={[validationRules.required()]}>\n              <Input\n                type=\"password\"\n                placeholder=\"Mật Khẩu\"\n                prefix={<Icon name={EIconName.Lock} />}\n                onChange={handleChangePasswordField}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"confirmPassword\"\n              rules={[validationRules.required(), validationRules.confirmPassword(passwordValue)]}\n            >\n              <Input type=\"password\" placeholder=\"Nhập lại mật khẩu\" prefix={<Icon name={EIconName.Lock} />} />\n            </Form.Item>\n            <Form.Item name=\"inviteCode\">\n              <Input placeholder=\"Mã giới thiệu\" prefix={<Icon name={EIconName.Users} />} />\n            </Form.Item>\n            <Form.Item style={{ marginTop: '5rem' }}>\n              <Button title=\"Đăng Ký\" type=\"primary\" htmlType=\"submit\" loading={sendOtpLoading} />\n            </Form.Item>\n          </Form>\n\n          <div className=\"AuthForm-main-register\">\n            Đã có tài khoản? <Link to={`${LayoutPaths.Auth}${Paths.Login}`}>Đăng nhập</Link>\n          </div>\n        </div>\n      </AuthForm>\n    </div>\n  );\n};\n\nexport default Register;\n","import Register from './Register';\n\nexport default Register;\n","export default __webpack_public_path__ + \"static/media/image-auth-banner.5bdeb1fe.png\";","import React from 'react';\n\nimport { TAuthFormProps } from '@/containers/AuthForm/AuthForm.types';\nimport ImageAuthBanner from '@/assets/images/image-auth-banner.png';\n\nimport './AuthForm.scss';\n\nconst AuthForm: React.FC<TAuthFormProps> = ({ children }) => {\n  return (\n    <div className=\"AuthForm\">\n      <div className=\"AuthForm-card flex flex-wrap\">\n        <div className=\"AuthForm-item\">\n          <div className=\"AuthForm-item-image\">\n            <img src={ImageAuthBanner} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"AuthForm-item\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from './AuthForm';\n\nexport default AuthForm;\n","export enum ERole {\n  USER = 1,\n  PT = 2,\n  ADMIN = 3,\n  SUPER_ADMIN = 4,\n}\n\nexport enum ETypeSendOTP {\n  REGISTER = 'register',\n  FORGOT_PASSWORD = 'forgotPassword',\n}\n"],"sourceRoot":""}