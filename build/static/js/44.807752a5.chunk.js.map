{"version":3,"sources":["pages/PaymentResult/PaymentResult.tsx","pages/PaymentResult/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts"],"names":["PaymentResult","id","useParams","dispatch","useDispatch","getPaymentHistoryLoading","useSelector","state","loadingReducer","EPaymentControllerAction","GET_PAYMENT_HISTORY","paymentHistory","paymentReducer","isPaymentSuccess","status","handleNavigateBack","navigate","Paths","Home","useEffect","getPaymentHistoryAction","request","response","uiActions","setCartsStorage","className","PageLoading","HeaderSkew","title","classNames","success","error","formatMoneyVND","amount","money","onClick","text","copyText","showNotification","ETypeNotification","SUCCESS","Icon","name","EIconName","Duplicate","color","EIconColor","INTERNATIONAL_KLEIN_BLUE","Button","type","shadow","center"],"mappings":"8QAoHeA,EAlGiB,WAC9B,IAAQC,EAAOC,cAAPD,GACFE,EAAWC,cAEXC,EAA2BC,aAC/B,SAACC,GAAD,OAAuBA,EAAMC,eAAeC,IAAyBC,wBAEjEC,EAAiBL,aAAY,SAACC,GAAD,OAAuBA,EAAMK,eAAeD,kBACzEE,EAA8C,OAAb,OAAdF,QAAc,IAAdA,OAAA,EAAAA,EAAgBG,QAEnCC,EAAqB,WACzBC,YAASC,IAAMC,OAyBjB,OAfAC,qBAAU,WACHlB,EAGHE,EACEiB,IAAwBC,QAAQpB,GAAI,SAACqB,GACX,MAApBA,EAASR,QACXX,EAASoB,KAAUC,gBAAgB,SALzCT,MAWD,CAACd,EAAIE,IAGN,qBAAKsB,UAAU,gCAAf,SACGpB,EACC,cAACqB,EAAA,EAAD,IAEA,qCACE,cAACC,EAAA,EAAD,CAAYC,MAAK,wBAAgBf,EAAmB,mBAAe,wBACnE,sBAAKY,UAAU,qBAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,qBAAf,sDACA,qBAAKA,UAAU,0BAAf,+CAEF,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,qBAAf,yCACA,qBAAKA,UAAU,qBAAf,SAAqCxB,OAEvC,sBAAKwB,UAAU,+CAAf,UACE,qBAAKA,UAAU,qBAAf,sDACA,sBACEA,UAAWI,IAAW,qBAAsB,CAC1CC,QAASjB,EACTkB,OAAQlB,IAHZ,2BAMcA,EAAmB,mBAAe,2BAGlD,sBAAKY,UAAU,+CAAf,UACE,qBAAKA,UAAU,qBAAf,+BACA,qBAAKA,UAAU,qCAAf,SACGO,YAAe,CAAEC,QAAsB,OAAdtB,QAAc,IAAdA,OAAA,EAAAA,EAAgBuB,QAAS,YAKzD,sBAAKT,UAAU,sBAAf,UACE,qBAAKA,UAAU,+CAAf,SACE,qBAAKA,UAAU,qBAAf,0CAEF,sBAAKA,UAAU,+CAAf,UACE,qBAAKA,UAAU,0BAAf,yDACA,sBACEA,UAAU,uDACVU,QAAS,WAlEF,IAACC,KAkE4B,iDAhEhDC,YAASD,GACTE,YAAiBC,IAAkBC,QAAS,kCA6DlC,UAIE,cAACC,EAAA,EAAD,CAAMC,KAAMC,IAAUC,UAAWC,MAAOC,IAAWC,2BAJrD,0BAWN,qBAAKtB,UAAU,yCAAf,SACE,cAACuB,EAAA,EAAD,CAAQC,KAAK,QAAQrB,MAAM,+BAAqBsB,QAAQ,EAAOf,QAASpB,YC1GrEf,a,0ECmBA2B,EAdgC,SAAC,GAA2C,IAAzCF,EAAwC,EAAxCA,UAAW0B,EAA6B,EAA7BA,OAAQvB,EAAqB,EAArBA,MAAOO,EAAc,EAAdA,QAC1E,OACE,qBACEV,UAAWI,IAAW,kBAAmBJ,EAAW,CAAE,iBAAkB0B,GAAU,CAAE,iBAAkBhB,IACtGA,QAASA,EAFX,SAIE,sBAAKV,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCG,IACnC,qBAAKH,UAAU,sBAAf,iCCZOE,O","file":"static/js/44.807752a5.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { navigate, useParams } from '@reach/router';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport { Paths } from '@/pages/routers';\nimport { copyText, formatMoneyVND, showNotification } from '@/utils/functions';\nimport { ETypeNotification } from '@/common/enums';\nimport Button from '@/components/Button';\nimport { getPaymentHistoryAction, uiActions } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EPaymentControllerAction } from '@/redux/actions/payment-controller/constants';\nimport PageLoading from '@/components/PageLoading';\n\nimport './PaymentResult.scss';\n\nconst PaymentResult: React.FC = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const getPaymentHistoryLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EPaymentControllerAction.GET_PAYMENT_HISTORY],\n  );\n  const paymentHistory = useSelector((state: TRootState) => state.paymentReducer.paymentHistory);\n  const isPaymentSuccess = paymentHistory?.status === '1';\n\n  const handleNavigateBack = (): void => {\n    navigate(Paths.Home);\n  };\n\n  const handleCopyCode = (text: string | null): void => {\n    if (text) {\n      copyText(text);\n      showNotification(ETypeNotification.SUCCESS, 'Sao chép thành công');\n    }\n  };\n\n  useEffect(() => {\n    if (!id) {\n      handleNavigateBack();\n    } else {\n      dispatch(\n        getPaymentHistoryAction.request(id, (response): void => {\n          if (response.status === '1') {\n            dispatch(uiActions.setCartsStorage([]));\n          }\n        }),\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [id, dispatch]);\n\n  return (\n    <div className=\"PaymentResult style-container\">\n      {getPaymentHistoryLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title={`Thanh Toán ${isPaymentSuccess ? 'Thành Công' : 'Thất Bại'}`} />\n          <div className=\"PaymentResult-main\">\n            <div className=\"PaymentResult-group\">\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text\">Phương thức thanh toán</div>\n                <div className=\"PaymentResult-text bold\">Cổng thanh toán Appota</div>\n              </div>\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text\">Mã đơn hàng</div>\n                <div className=\"PaymentResult-text\">{id}</div>\n              </div>\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text\">Trạng thái đơn hàng</div>\n                <div\n                  className={classNames('PaymentResult-text', {\n                    success: isPaymentSuccess,\n                    error: !isPaymentSuccess,\n                  })}\n                >\n                  Thanh Toán {isPaymentSuccess ? 'Thành Công' : 'Thất Bại'}\n                </div>\n              </div>\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text\">Số tiền</div>\n                <div className=\"PaymentResult-text hightlight bold\">\n                  {formatMoneyVND({ amount: paymentHistory?.money || 0 })}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"PaymentResult-group\">\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text\">Chủ tài khoản</div>\n              </div>\n              <div className=\"PaymentResult-group-row flex justify-between\">\n                <div className=\"PaymentResult-text bold\">Công ty cổ phần VN Supplements</div>\n                <div\n                  className=\"PaymentResult-text hightlight flex items-center copy\"\n                  onClick={(): void => handleCopyCode('Công ty cổ phần VN Supplements')}\n                >\n                  <Icon name={EIconName.Duplicate} color={EIconColor.INTERNATIONAL_KLEIN_BLUE} />\n                  Sao chép\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"PaymentResult-back flex justify-center\">\n            <Button type=\"ghost\" title=\"Quay Lại Trang Chủ\" shadow={false} onClick={handleNavigateBack} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default PaymentResult;\n","import PaymentResult from './PaymentResult';\n\nexport default PaymentResult;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n"],"sourceRoot":""}