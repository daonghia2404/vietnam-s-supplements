{"version":3,"sources":["pages/Cart/Cart.tsx","pages/Cart/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","assets/images/image-empty-meal-schedule.png","components/EmptyBox/EmptyBox.tsx","components/EmptyBox/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","services/api/order-controller/enums.ts","pages/Cart/Cart.data.ts"],"names":["Cart","dispatch","useDispatch","getOrdersLoading","useSelector","state","loadingReducer","EOrderControllerAction","GET_ORDERS","ordersState","orderReducer","orders","isEmpty","records","length","useState","status","EOrderStatus","NULL","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getOrdersParamsRequest","setGetOrdersParamsRequest","getOrdersData","useCallback","getOrdersAction","request","undefined","useEffect","className","HeaderSkew","title","cartFilterTabOptions","map","item","Button","classNames","active","value","size","label","shadow","onClick","EmptyBox","PageLoading","statusOrder","find","option","String","id","navigate","LayoutPaths","Profile","Paths","CartDetail","orderCode","color","amount","formatMoneyVND","totalprice","showSuffix","point","Pagination","total","onChange","center","buttonProps","src","ImageEmptyMealSchedule","alt","type","current","showQuickJumper","showSizeChanger","hideOnSinglePage","showLessItems","EOrderPayment","PENDING","INPROCESS","SUCCESS","REJECT"],"mappings":"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","file":"static/js/21.72f85305.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { navigate } from '@reach/router';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Button from '@/components/Button';\nimport { TParamsGetOrders } from '@/services/api/order-controller/types';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { EOrderStatus } from '@/services/api/order-controller/enums';\nimport { getOrdersAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EOrderControllerAction } from '@/redux/actions/order-controller/constants';\nimport Pagination from '@/components/Pagination';\nimport EmptyBox from '@/components/EmptyBox';\nimport { cartFilterTabOptions } from '@/pages/Cart/Cart.data';\nimport PageLoading from '@/components/PageLoading';\nimport { formatMoneyVND } from '@/utils/functions';\nimport { LayoutPaths, Paths } from '@/pages/routers';\n\nimport './Cart.scss';\n\nconst Cart: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const getOrdersLoading = useSelector((state: TRootState) => state.loadingReducer[EOrderControllerAction.GET_ORDERS]);\n  const ordersState = useSelector((state: TRootState) => state.orderReducer.orders);\n\n  const isEmpty = ordersState?.records && ordersState?.records?.length === 0;\n\n  const [getOrdersParamsRequest, setGetOrdersParamsRequest] = useState<TParamsGetOrders>({\n    status: EOrderStatus.NULL,\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n\n  const handleNavigateCartDetail = (id: string): void => {\n    navigate(`${LayoutPaths.Profile}${Paths.CartDetail(id)}`);\n  };\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetOrdersParamsRequest({\n      ...getOrdersParamsRequest,\n      page,\n      pageSize: pageSize || getOrdersParamsRequest.pageSize,\n    });\n  };\n\n  const handleFilterOrder = (status: EOrderStatus): void => {\n    setGetOrdersParamsRequest({\n      ...getOrdersParamsRequest,\n      page: DEFAULT_PAGE,\n      status,\n    });\n  };\n\n  const getOrdersData = useCallback(() => {\n    dispatch(\n      getOrdersAction.request({\n        ...getOrdersParamsRequest,\n        status: getOrdersParamsRequest?.status === EOrderStatus.NULL ? undefined : getOrdersParamsRequest?.status,\n      }),\n    );\n  }, [dispatch, getOrdersParamsRequest]);\n\n  useEffect(() => {\n    getOrdersData();\n  }, [getOrdersData]);\n\n  return (\n    <div className=\"Cart style-container\">\n      <HeaderSkew title=\"Lịch sử đơn hàng\" />\n\n      <div className=\"Cart-main\">\n        <div className=\"Cart-main-header flex justify-between flex-wrap\">\n          {cartFilterTabOptions.map((item) => (\n            <Button\n              className={classNames({ active: item.value === getOrdersParamsRequest.status })}\n              size=\"small\"\n              title={item.label}\n              key={item.value}\n              shadow={false}\n              onClick={(): void => handleFilterOrder(item.value)}\n            />\n          ))}\n        </div>\n\n        {isEmpty ? (\n          <EmptyBox title=\"Chưa có đơn hàng\" />\n        ) : (\n          <div className=\"Cart-main-body\">\n            {getOrdersLoading ? (\n              <PageLoading />\n            ) : (\n              <>\n                {ordersState?.records.map((item) => {\n                  const statusOrder = cartFilterTabOptions.find(\n                    (option) => String(option.value) === String(item.status),\n                  );\n\n                  return (\n                    <div key={item.id} className=\"Cart-card\" onClick={(): void => handleNavigateCartDetail(item.id)}>\n                      <div className=\"Cart-card-row flex justify-between\">\n                        <div className=\"Cart-card-text bold\">Mã đơn hàng</div>\n                        <div className=\"Cart-card-text\">{item.orderCode}</div>\n                      </div>\n                      <div className=\"Cart-card-row flex justify-between\">\n                        <div className={classNames('Cart-card-text', statusOrder?.color)}>{statusOrder?.label}</div>\n                      </div>\n                      <div className=\"Cart-card-row flex justify-between\">\n                        <div className=\"Cart-card-text bold\">{item.amount || 0} sản phẩm</div>\n                        <div className=\"Cart-card-text hightlight\">\n                          {formatMoneyVND({ amount: item.totalprice || 0, showSuffix: true })}\n                        </div>\n                      </div>\n\n                      <div className=\"Cart-card-footer\">\n                        <div className=\"Cart-card-row flex justify-between\">\n                          <div className=\"Cart-card-text\">Tích điểm</div>\n                          <div className=\"Cart-card-text\">+ {item.point} điểm</div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n\n      <div className=\"Cart-pagination flex justify-center\">\n        <Pagination\n          page={getOrdersParamsRequest.page}\n          pageSize={getOrdersParamsRequest.pageSize}\n          total={ordersState?.total}\n          onChange={handlePageChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","import Cart from './Cart';\n\nexport default Cart;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","export default __webpack_public_path__ + \"static/media/image-empty-meal-schedule.79e89b30.png\";","import React from 'react';\n\nimport ImageEmptyMealSchedule from '@/assets/images/image-empty-meal-schedule.png';\nimport Button from '@/components/Button';\n\nimport { TEmptyBoxProps } from './EmptyBox.types';\nimport './EmptyBox.scss';\n\nconst EmptyBox: React.FC<TEmptyBoxProps> = ({ title, buttonProps }) => {\n  return (\n    <div className=\"EmptyBox\">\n      <div className=\"EmptyBox-image\">\n        <img src={ImageEmptyMealSchedule} alt=\"\" />\n      </div>\n\n      <div className=\"EmptyBox-title\">{title}</div>\n\n      {buttonProps && (\n        <div className=\"EmptyBox-btn\">\n          <Button {...buttonProps} type=\"primary\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default EmptyBox;\n","import EmptyBox from './EmptyBox';\n\nexport * from './EmptyBox.types';\nexport default EmptyBox;\n","import React from 'react';\nimport { Pagination as AntdPagination } from 'antd';\nimport classNames from 'classnames';\n\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\n\nimport './Pagination.scss';\n\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\n  return (\n    <div className={classNames('Pagination', className)}>\n      <AntdPagination\n        current={page}\n        pageSize={pageSize}\n        total={total}\n        showQuickJumper={false}\n        showSizeChanger={false}\n        hideOnSinglePage\n        showLessItems\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport * from './Pagination.types';\nexport default Pagination;\n","export enum EOrderStatus {\n  NULL = '',\n  PENDING = 0,\n  INPROCESS = 1,\n  SUCCESS = 2,\n  REJECT = 3,\n  SHIPCODE = 4,\n}\n\nexport enum EOrderPayment {\n  SHIP_COD = '1',\n  WALLET = '2',\n}\n","import { EOrderStatus } from '@/services/api/order-controller/enums';\n\nexport const cartFilterTabOptions = [\n  { label: 'Tất cả', value: EOrderStatus.NULL },\n  { color: 'warning', label: 'Chờ xác nhận', value: EOrderStatus.PENDING },\n  { color: 'hightlight', label: 'Đang giao', value: EOrderStatus.INPROCESS },\n  { color: 'success', label: 'Hoàn thành', value: EOrderStatus.SUCCESS },\n  { color: 'error', label: 'Đã huỷ', value: EOrderStatus.REJECT },\n];\n"],"sourceRoot":""}