{"version":3,"sources":["pages/ExerciseBought/ExerciseBought.tsx","pages/ExerciseBought/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts","containers/ExercisePackage/ExercisePackage.enums.ts","containers/ExercisePackage/ExercisePackage.tsx","containers/ExercisePackage/index.ts"],"names":["ExerciseBought","dispatch","useDispatch","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getPackExercisesParamsRequest","setGetPackExercisesParamsRequest","getPackExercisesBoughtLoading","useSelector","state","loadingReducer","EPackExerciseControllerAction","GET_PACK_EXERCISES_BOUGHT","packExercisesBoughtState","packExerciseReducer","packExercisesBought","parsePackExercisesBought","map","item","packExercise","idPack","id","createdAtPack","createdAt","updatedAtPack","updatedAt","getPackExercisesBoughtData","useCallback","getPackExercisesBoughtAction","request","useEffect","className","PageLoading","HeaderSkew","title","ExercisePackage","type","ETypeExercisePackage","EXERCISE","owner","paginate","total","dataSource","onPageChange","Pagination","onChange","classNames","current","showQuickJumper","showSizeChanger","hideOnSinglePage","showLessItems","isPackExercisePage","isPackPtOnlinePage","PT_ONLINE","authState","authReducer","user","buyPackExerciseLoading","BUY_PACK_EXERCISE","buyPackPtOnlineLoading","EPackPtOnlineControllerAction","BUY_PACK_PT_ONLINE","mainTitle","loading","visible","confirmExercisePackageModalState","setConfirmExercisePackageModalState","paymentModalState","setPaymentModalState","failedPaymentModalState","setFailedPaymentModalState","isEmpty","length","handleCloseConfirmExercisePackageModal","handleCloseFailedPaymentModal","handleBuyPackExerciseSuccess","handleBuyPackExerciseFailed","handleSubmit","EmptyBox","ExercisePackageBox","image","name","description","onBuy","data","onClickDetail","navigate","LayoutPaths","Admin","Paths","ExerciseDetail","ExerciseOnlineDetail","Modal","confirmButton","onClick","buyPackExerciseAction","packExerciseId","buyPackPtOnlineAction","cancelButton","disabled","onClose","style","marginBottom","formatMoneyVND","amount","price","showSuffix","Profile","Wallet","money"],"mappings":"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","file":"static/js/28.ef604cd7.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport ExercisePackage from '@/containers/ExercisePackage';\nimport { TParamsGetPackExercisesBought } from '@/services/api/pack-exercise-controller/types';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { getPackExercisesBoughtAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EPackExerciseControllerAction } from '@/redux/actions/pack-exercise-controller/constants';\nimport PageLoading from '@/components/PageLoading';\n\nimport './ExerciseBought.scss';\nimport { ETypeExercisePackage } from '@/containers/ExercisePackage/ExercisePackage.enums';\n\nconst ExerciseBought: React.FC = () => {\n  const dispatch = useDispatch();\n\n  const [getPackExercisesParamsRequest, setGetPackExercisesParamsRequest] = useState<TParamsGetPackExercisesBought>({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n\n  const getPackExercisesBoughtLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EPackExerciseControllerAction.GET_PACK_EXERCISES_BOUGHT],\n  );\n\n  const packExercisesBoughtState = useSelector((state: TRootState) => state.packExerciseReducer.packExercisesBought);\n  const parsePackExercisesBought = packExercisesBoughtState?.map((item) => ({\n    ...item.packExercise,\n    idPack: item.id,\n    createdAtPack: item.createdAt,\n    updatedAtPack: item.updatedAt,\n  }));\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetPackExercisesParamsRequest({\n      ...getPackExercisesParamsRequest,\n      page,\n      pageSize: pageSize || getPackExercisesParamsRequest.pageSize,\n    });\n  };\n\n  const getPackExercisesBoughtData = useCallback(() => {\n    dispatch(getPackExercisesBoughtAction.request(getPackExercisesParamsRequest));\n  }, [dispatch, getPackExercisesParamsRequest]);\n\n  useEffect(() => {\n    getPackExercisesBoughtData();\n  }, [getPackExercisesBoughtData]);\n\n  return (\n    <div className=\"ExerciseBought style-container\">\n      {getPackExercisesBoughtLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Gói tập đã mua\" />\n\n          <div className=\"ExerciseBought-main\">\n            <ExercisePackage\n              type={ETypeExercisePackage.EXERCISE}\n              title=\"Các gói tập đã mua\"\n              owner\n              paginate={{ ...getPackExercisesParamsRequest, total: 0 }}\n              dataSource={parsePackExercisesBought}\n              onPageChange={handlePageChange}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ExerciseBought;\n","import ExerciseBought from './ExerciseBought';\n\nexport default ExerciseBought;\n","import React from 'react';\nimport { Pagination as AntdPagination } from 'antd';\nimport classNames from 'classnames';\n\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\n\nimport './Pagination.scss';\n\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\n  return (\n    <div className={classNames('Pagination', className)}>\n      <AntdPagination\n        current={page}\n        pageSize={pageSize}\n        total={total}\n        showQuickJumper={false}\n        showSizeChanger={false}\n        hideOnSinglePage\n        showLessItems\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport * from './Pagination.types';\nexport default Pagination;\n","export enum ETypeExercisePackage {\n  EXERCISE = 'EXERCISE',\n  PT_ONLINE = 'PT_ONLINE',\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\n\nimport ExercisePackageBox from '@/components/ExercisePackageBox';\nimport { TExercisePackageProps } from './ExercisePackage.types';\nimport Modal from '@/components/Modal';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport EmptyBox from '@/components/EmptyBox';\nimport Pagination from '@/components/Pagination';\nimport { TPackExerciseResponse } from '@/services/api/pack-exercise-controller/types';\nimport { formatMoneyVND } from '@/utils/functions';\nimport { TRootState } from '@/redux/reducers';\nimport { buyPackExerciseAction, buyPackPtOnlineAction } from '@/redux/actions';\nimport { EPackExerciseControllerAction } from '@/redux/actions/pack-exercise-controller/constants';\nimport { EPackPtOnlineControllerAction } from '@/redux/actions/pack-pt-online-controller/constants';\n\nimport './ExercisePackage.scss';\nimport { ETypeExercisePackage } from '@/containers/ExercisePackage/ExercisePackage.enums';\n\nconst ExercisePackage: React.FC<TExercisePackageProps> = ({\n  type,\n  owner,\n  title,\n  paginate,\n  dataSource = [],\n  onPageChange,\n}) => {\n  const dispatch = useDispatch();\n  const isPackExercisePage = type === ETypeExercisePackage.EXERCISE;\n  const isPackPtOnlinePage = type === ETypeExercisePackage.PT_ONLINE;\n\n  const authState = useSelector((state: TRootState) => state.authReducer.user);\n  const buyPackExerciseLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EPackExerciseControllerAction.BUY_PACK_EXERCISE],\n  );\n  const buyPackPtOnlineLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EPackPtOnlineControllerAction.BUY_PACK_PT_ONLINE],\n  );\n\n  const mainTitle = isPackExercisePage ? 'tập' : 'Pt Online';\n\n  const loading = buyPackExerciseLoading || buyPackPtOnlineLoading;\n\n  const [confirmExercisePackageModalState, setConfirmExercisePackageModalState] = useState<{\n    visible: boolean;\n    data?: any;\n  }>({\n    visible: false,\n  });\n\n  const [paymentModalState, setPaymentModalState] = useState<{\n    visible: boolean;\n  }>({\n    visible: false,\n  });\n\n  const [failedPaymentModalState, setFailedPaymentModalState] = useState<{\n    visible: boolean;\n  }>({\n    visible: false,\n  });\n\n  const isEmpty = !dataSource || dataSource.length === 0;\n\n  const handleOpenConfirmExercisePackageModal = (data: TPackExerciseResponse): void => {\n    setConfirmExercisePackageModalState({\n      visible: true,\n      data,\n    });\n  };\n\n  const handleCloseConfirmExercisePackageModal = (): void => {\n    setConfirmExercisePackageModalState({\n      visible: false,\n    });\n  };\n\n  const handleOpenPaymentModal = (): void => {\n    setPaymentModalState({\n      visible: true,\n    });\n  };\n\n  const handleClosePaymentModal = (): void => {\n    setPaymentModalState({\n      visible: false,\n    });\n  };\n\n  const handleOpenFailedPaymentModal = (): void => {\n    setFailedPaymentModalState({ visible: true });\n  };\n  const handleCloseFailedPaymentModal = (): void => {\n    setFailedPaymentModalState({ visible: false });\n  };\n  const handleSubmitFailedPaymentModal = (): void => {\n    handleCloseFailedPaymentModal();\n    navigate(`${LayoutPaths.Profile}${Paths.Wallet}`);\n  };\n\n  const handleConfirmExercisePackageModalSubmit = (): void => {\n    if (confirmExercisePackageModalState.data) {\n      if (isPackExercisePage) {\n        dispatch(\n          buyPackExerciseAction.request(\n            { packExerciseId: confirmExercisePackageModalState.data.id },\n            handleBuyPackExerciseSuccess,\n            handleBuyPackExerciseFailed,\n          ),\n        );\n      }\n\n      if (isPackPtOnlinePage) {\n        dispatch(\n          buyPackPtOnlineAction.request(\n            confirmExercisePackageModalState.data.id,\n            handleBuyPackExerciseSuccess,\n            handleBuyPackExerciseFailed,\n          ),\n        );\n      }\n    }\n  };\n\n  const handleBuyPackExerciseSuccess = (): void => {\n    handleCloseConfirmExercisePackageModal();\n    handleOpenPaymentModal();\n  };\n  const handleBuyPackExerciseFailed = (): void => {\n    handleCloseConfirmExercisePackageModal();\n    handleOpenFailedPaymentModal();\n  };\n\n  const handleSubmit = (): void => {\n    handleClosePaymentModal();\n  };\n\n  const handleNavigateExercisePackageDetail = (data: TPackExerciseResponse): void => {\n    if (isPackExercisePage) navigate(`${LayoutPaths.Admin}${Paths.ExerciseDetail(data.id)}`);\n    if (isPackPtOnlinePage) navigate(`${LayoutPaths.Admin}${Paths.ExerciseOnlineDetail(data.id)}`);\n  };\n\n  return (\n    <div className=\"ExercisePackage\">\n      <div className=\"ExercisePackage-title\">{title}</div>\n      {isEmpty ? (\n        <EmptyBox title={`Bạn chưa mua gói ${mainTitle} nào`} />\n      ) : (\n        <>\n          <div className=\"ExercisePackage-main flex flex-wrap justify-between\">\n            {dataSource.map((item) => (\n              <ExercisePackageBox\n                key={item.id}\n                image={item.image}\n                owner={owner}\n                title={item.title || item.name}\n                description={item.description}\n                onBuy={(): void => handleOpenConfirmExercisePackageModal(item)}\n                onClickDetail={(): void => handleNavigateExercisePackageDetail(item)}\n              />\n            ))}\n          </div>\n\n          <div className=\"ExercisePackage-pagination flex justify-center\">\n            <Pagination {...paginate} onChange={onPageChange} />\n          </div>\n        </>\n      )}\n\n      <Modal\n        {...confirmExercisePackageModalState}\n        confirmButton={{\n          title: 'Thanh toán',\n          onClick: handleConfirmExercisePackageModalSubmit,\n          loading,\n        }}\n        cancelButton={{\n          title: 'Huỷ bỏ',\n          onClick: handleCloseConfirmExercisePackageModal,\n          disabled: loading,\n        }}\n        onClose={handleCloseConfirmExercisePackageModal}\n      >\n        <div className=\"Modal-body-title\" style={{ marginBottom: '1rem' }}>\n          Xác nhận thanh toán\n        </div>\n        <div className=\"Modal-body-subtitle\" style={{ marginBottom: '.5rem' }}>\n          {confirmExercisePackageModalState.data?.title || confirmExercisePackageModalState.data?.name}:{' '}\n          <strong>\n            {formatMoneyVND({ amount: confirmExercisePackageModalState.data?.price || 0, showSuffix: true })}\n          </strong>\n        </div>\n        <div className=\"Modal-body-link\">Thanh toán qua ví của tôi</div>\n      </Modal>\n\n      <Modal {...paymentModalState} confirmButton={{ title: 'Đồng ý', onClick: handleSubmit }} onClose={handleSubmit}>\n        <div className=\"Modal-body-title\" style={{ marginBottom: '1.5rem' }}>\n          Thanh toán thành công\n        </div>\n        <div className=\"Modal-body-description\">Bạn đã mua gói {mainTitle} thành công</div>\n      </Modal>\n\n      <Modal\n        {...failedPaymentModalState}\n        onClose={handleCloseFailedPaymentModal}\n        confirmButton={{ title: 'Nạp thêm', onClick: handleSubmitFailedPaymentModal }}\n        cancelButton={{ title: 'Huỷ bỏ', onClick: handleCloseFailedPaymentModal }}\n      >\n        <div className=\"Modal-body-subtitle\" style={{ marginBottom: '1.5rem' }}>\n          Số dư của bạn: <strong>{formatMoneyVND({ amount: authState?.money || 0, showSuffix: true })}</strong>\n        </div>\n        <div className=\"Modal-body-description\">\n          Số dư ví của bạn không đủ để thanh toán gói {mainTitle}. Xin vui lòng nạp thêm!\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default ExercisePackage;\n","import ExercisePackage from './ExercisePackage';\n\nexport default ExercisePackage;\n"],"sourceRoot":""}