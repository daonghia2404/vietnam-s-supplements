{"version":3,"sources":["components/WheelBox/index.ts","components/WheelBox/WheelBox.tsx","pages/Wheels/Wheels.tsx","pages/Wheels/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","components/Pagination/Pagination.tsx","components/Pagination/index.ts"],"names":["WheelBox","className","title","description","image","onClick","classNames","src","onError","handleErrorImageUrl","alt","Button","shadow","iconName","EIconName","Wheel","size","Icon","name","AngleRight","Wheels","dispatch","useDispatch","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getWheelsUserParamsRequest","setGetWheelsUserParamsRequest","wheelsUserState","useSelector","state","wheelReducer","wheelsUser","getWheelsUserLoading","loadingReducer","EWheelControllerAction","GET_WHEELS_USER","getWheelsUserData","useCallback","getWheelsUserAction","request","useEffect","PageLoading","HeaderSkew","records","map","item","turnWheel","data","navigate","LayoutPaths","Admin","Paths","WheelDetail","id","Pagination","total","onChange","center","current","showQuickJumper","showSizeChanger","hideOnSinglePage","showLessItems"],"mappings":"qPAGeA,ECO4B,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAClF,OACE,sBAAKJ,UAAWK,IAAW,WAAYL,GAAYI,QAASA,EAA5D,UACE,qBAAKJ,UAAU,iBAAf,SACE,qBAAKM,IAAKH,EAAOI,QAASC,IAAqBC,IAAI,OAErD,sBAAKT,UAAU,qDAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAACU,EAAA,EAAD,CAAQC,QAAQ,EAAOC,SAAUC,IAAUC,MAAOC,KAAK,YAGzD,sBAAKf,UAAU,6BAAf,UACE,qBAAKA,UAAU,mCAAf,SAAmDC,IACnD,qBAAKD,UAAU,yCAAf,SAAyDE,UAI7D,qBAAKF,UAAU,0CAAf,SACE,cAACgB,EAAA,EAAD,CAAMC,KAAMJ,IAAUK,sB,0DCsDjBC,EAlEU,WAAO,IAAD,EACvBC,EAAWC,cACjB,EAAoEC,mBAAS,CAC3EC,KAAMC,IACNC,SAAUC,MAFZ,mBAAOC,EAAP,KAAmCC,EAAnC,KAIMC,EAAkBC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,aAAaC,cACxEC,EAAuBJ,aAC3B,SAACC,GAAD,OAAuBA,EAAMI,eAAeC,IAAuBC,oBAe/DC,EAAoBC,uBAAY,WACpCnB,EAASoB,KAAoBC,QAAQd,MACpC,CAACP,EAAUO,IAMd,OAJAe,qBAAU,WACRJ,MACC,CAACA,IAGF,qBAAKtC,UAAU,yBAAf,SACGkC,EACC,cAACS,EAAA,EAAD,IAEA,qCACE,cAACC,EAAA,EAAD,CAAY3C,MAAM,iBAElB,qBAAKD,UAAU,6CAAf,gBACG6B,QADH,IACGA,GADH,UACGA,EAAiBgB,eADpB,aACG,EAA0BC,KAAI,SAACC,GAAD,OAC7B,qBAAK/C,UAAU,mBAAf,SACE,cAAC,EAAD,CACEG,MAAO4C,EAAK5C,MACZF,MAAO8C,EAAK9C,MACZC,YAAW,0BAAa6C,EAAKC,UAAlB,wBACX5C,QAAS,kBAnCI6C,EAmC4BF,OAlCvDG,YAAS,GAAD,OAAIC,IAAYC,OAAhB,OAAwBC,IAAMC,YAAYL,EAAKM,MAD7B,IAACN,YAyCrB,qBAAKjD,UAAU,wCAAf,SACE,cAACwD,EAAA,EAAD,CACEjC,KAAMI,EAA2BJ,KACjCE,SAAUE,EAA2BF,SACrCgC,MAAK,OAAE5B,QAAF,IAAEA,OAAF,EAAEA,EAAiB4B,MACxBC,SA1Ca,SAACnC,EAAcE,GACtCG,EAA8B,2BACzBD,GADwB,IAE3BJ,OACAE,SAAUA,GAAYE,EAA2BF,uBClCxCN,a,0ECmBAyB,EAdgC,SAAC,GAA2C,IAAzC5C,EAAwC,EAAxCA,UAAW2D,EAA6B,EAA7BA,OAAQ1D,EAAqB,EAArBA,MAAOG,EAAc,EAAdA,QAC1E,OACE,qBACEJ,UAAWK,IAAW,kBAAmBL,EAAW,CAAE,iBAAkB2D,GAAU,CAAE,iBAAkBvD,IACtGA,QAASA,EAFX,SAIE,sBAAKJ,UAAU,kBAAf,UACE,qBAAKA,UAAU,mBAAf,SAAmCC,IACnC,qBAAKD,UAAU,sBAAf,iCCZO4C,O,yGCsBAY,EAjBgC,SAAC,GAAwD,IAAtDjC,EAAqD,EAArDA,KAAME,EAA+C,EAA/CA,SAA+C,IAArCgC,aAAqC,MAA7B,EAA6B,EAA1BzD,EAA0B,EAA1BA,UAAW0D,EAAe,EAAfA,SACtF,OACE,qBAAK1D,UAAWK,IAAW,aAAcL,GAAzC,SACE,cAAC,IAAD,CACE4D,QAASrC,EACTE,SAAUA,EACVgC,MAAOA,EACPI,iBAAiB,EACjBC,iBAAiB,EACjBC,kBAAgB,EAChBC,eAAa,EACbN,SAAUA,OChBHF,O","file":"static/js/25.85210f82.chunk.js","sourcesContent":["import WheelBox from './WheelBox';\n\nexport * from './WheelBox.types';\nexport default WheelBox;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { TWheelBoxProps } from '@/components/WheelBox/WheelBox.types';\nimport Button from '@/components/Button';\nimport Icon, { EIconName } from '@/components/Icon';\nimport { handleErrorImageUrl } from '@/utils/functions';\n\nimport './WheelBox.scss';\n\nconst WheelBox: React.FC<TWheelBoxProps> = ({ className, title, description, image, onClick }) => {\n  return (\n    <div className={classNames('WheelBox', className)} onClick={onClick}>\n      <div className=\"WheelBox-image\">\n        <img src={image} onError={handleErrorImageUrl} alt=\"\" />\n      </div>\n      <div className=\"WheelBox-content flex items-center justify-between\">\n        <div className=\"WheelBox-content-item flex items-center\">\n          <div className=\"WheelBox-content-item-icon\">\n            <Button shadow={false} iconName={EIconName.Wheel} size=\"small\" />\n          </div>\n\n          <div className=\"WheelBox-content-item-info\">\n            <div className=\"WheelBox-content-item-info-title\">{title}</div>\n            <div className=\"WheelBox-content-item-info-description\">{description}</div>\n          </div>\n        </div>\n\n        <div className=\"WheelBox-content-item flex items-center\">\n          <Icon name={EIconName.AngleRight} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WheelBox;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport WheelBox from '@/components/WheelBox';\nimport PageLoading from '@/components/PageLoading';\nimport { getWheelsUserAction } from '@/redux/actions';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { TRootState } from '@/redux/reducers';\nimport { EWheelControllerAction } from '@/redux/actions/wheel-controller/constants';\nimport { TWheelResponse } from '@/services/api/wheel-controller/types';\nimport { LayoutPaths, Paths } from '@/pages/routers';\n\nimport './Wheels.scss';\nimport Pagination from '@/components/Pagination';\n\nconst Wheels: React.FC = () => {\n  const dispatch = useDispatch();\n  const [getWheelsUserParamsRequest, setGetWheelsUserParamsRequest] = useState({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n  const wheelsUserState = useSelector((state: TRootState) => state.wheelReducer.wheelsUser);\n  const getWheelsUserLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EWheelControllerAction.GET_WHEELS_USER],\n  );\n\n  const handleClickWheelBox = (data: TWheelResponse): void => {\n    navigate(`${LayoutPaths.Admin}${Paths.WheelDetail(data.id)}`);\n  };\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetWheelsUserParamsRequest({\n      ...getWheelsUserParamsRequest,\n      page,\n      pageSize: pageSize || getWheelsUserParamsRequest.pageSize,\n    });\n  };\n\n  const getWheelsUserData = useCallback(() => {\n    dispatch(getWheelsUserAction.request(getWheelsUserParamsRequest));\n  }, [dispatch, getWheelsUserParamsRequest]);\n\n  useEffect(() => {\n    getWheelsUserData();\n  }, [getWheelsUserData]);\n\n  return (\n    <div className=\"Wheels style-container\">\n      {getWheelsUserLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Vòng Quay\" />\n\n          <div className=\"Wheels-main flex flex-wrap justify-between\">\n            {wheelsUserState?.records?.map((item) => (\n              <div className=\"Wheels-main-item\">\n                <WheelBox\n                  image={item.image}\n                  title={item.title}\n                  description={`Bạn còn ${item.turnWheel} lượt quay`}\n                  onClick={(): void => handleClickWheelBox(item)}\n                />\n              </div>\n            ))}\n          </div>\n\n          <div className=\"Wheels-pagination flex justify-center\">\n            <Pagination\n              page={getWheelsUserParamsRequest.page}\n              pageSize={getWheelsUserParamsRequest.pageSize}\n              total={wheelsUserState?.total}\n              onChange={handlePageChange}\n            />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Wheels;\n","import Wheels from './Wheels';\n\nexport default Wheels;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","import React from 'react';\nimport { Pagination as AntdPagination } from 'antd';\nimport classNames from 'classnames';\n\nimport { TPaginationProps } from '@/components/Pagination/Pagination.types';\n\nimport './Pagination.scss';\n\nconst Pagination: React.FC<TPaginationProps> = ({ page, pageSize, total = 0, className, onChange }) => {\n  return (\n    <div className={classNames('Pagination', className)}>\n      <AntdPagination\n        current={page}\n        pageSize={pageSize}\n        total={total}\n        showQuickJumper={false}\n        showSizeChanger={false}\n        hideOnSinglePage\n        showLessItems\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import Pagination from './Pagination';\n\nexport * from './Pagination.types';\nexport default Pagination;\n"],"sourceRoot":""}