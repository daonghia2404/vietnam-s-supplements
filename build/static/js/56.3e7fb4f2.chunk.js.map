{"version":3,"sources":["pages/Carts/Carts.tsx","pages/Carts/index.ts"],"names":["Carts","dispatch","useDispatch","atk","AuthHelpers","getAccessToken","Form","useForm","form","useState","cartsChecked","setCartsChecked","userInfo","useSelector","state","authReducer","user","addressState","addressReducer","cartsDatabase","cartReducer","cart","cartsStorage","uiReducer","carts","getCartsLoading","loadingReducer","ECartControllerAction","GET_CART","patchCartLoading","PATCH_CART","deleteCartLoading","DELETE_CART","createOrderLoading","EOrderControllerAction","CREATE_ORDER","isEmpty","length","voucherTotalState","voucherReducer","vouchers","total","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getVouchersParamsRequest","setGetVouchersParamsRequest","voucherOptions","setVoucherOptions","handleCreateOrderSuccess","response","showNotification","ETypeNotification","ERROR","SUCCESS","getCartsData","navigate","LayoutPaths","Profile","Paths","Cart","caculatorTotalPrice","map","item","price","reduce","result","Number","useCallback","getCartAction","request","getVouchersData","getVouchersAction","isFirstFetching","options","getAddressData","getAddressAction","districtCode","cityCode","getAddressWithExistedCity","city","useEffect","scrollToTop","setFieldsValue","typePayment","dataPaymentMethodOptions","className","HeaderSkew","title","PageLoading","EmptyBox","buttonProps","onClick","Categorys","isSamePriceAndCostPrice","product","costPrice","classNames","loading","data","deleteCartAction","id","newCartsData","handleDeleteCartLocalStorage","uiActions","setCartsStorage","handleRemoveCart","Icon","name","EIconName","Close","src","image","onError","handleErrorImageUrl","alt","dateStartEat","dateEndEat","formatISODateToDateTime","EFormatDate","COMMON","formatMoneyVND","amount","showSuffix","Boolean","Amount","value","disabled","onChange","patchBody","patchCartAction","handleChangeAmountCartLocalStorage","handleChangeAmount","onFinish","values","body","referCode","idCardBackCard","backIdCard","idCardFontCard","frontIdCard","address","phoneRevicer","phone","nameReceiver","fullName","district","createOrderAction","WARNING","Item","Select","placeholder","onLoadMore","paginate","allowClear","find","label","rules","validationRules","required","Radio","Input","Button","type","size","htmlType"],"mappings":"qYA+WeA,EAjUS,WAAO,IAAD,IACtBC,EAAWC,cACXC,EAAMC,IAAYC,iBACxB,EAAeC,IAAKC,UAAbC,EAAP,oBAEA,EAAwCC,mBAA0B,IAAlE,mBAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAWC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,YAAYC,QAChEC,EAAeJ,aAAY,SAACC,GAAD,OAAuBA,EAAMI,kBAExDC,EAAgBN,aAAY,SAACC,GAAD,uBAAuBA,EAAMM,YAAYC,YAAzC,aAAuB,EAAwBA,QAC3EC,EAAeT,aAAY,SAACC,GAAD,OAAuBA,EAAMS,UAAUD,iBAAiB,GACnFE,EAAQrB,EAAMgB,EAAgBG,EAE9BG,EAAkBZ,aAAY,SAACC,GAAD,OAAuBA,EAAMY,eAAeC,IAAsBC,aAChGC,EAAmBhB,aAAY,SAACC,GAAD,OAAuBA,EAAMY,eAAeC,IAAsBG,eACjGC,EAAoBlB,aAAY,SAACC,GAAD,OAAuBA,EAAMY,eAAeC,IAAsBK,gBAClGC,EAAqBpB,aACzB,SAACC,GAAD,OAAuBA,EAAMY,eAAeQ,IAAuBC,iBAE/DC,EAA4B,KAAb,OAALZ,QAAK,IAALA,OAAA,EAAAA,EAAOa,QAEjBC,EAAoBzB,aAAY,SAACC,GAAD,uBAAuBA,EAAMyB,eAAeC,gBAA5C,aAAuB,EAA+BC,SAC5F,EAAgEhC,mBAA6B,CAC3FiC,KAAMC,IACNC,SAAUC,MAFZ,mBAAOC,EAAP,KAAiCC,EAAjC,KAIA,EAA4CtC,mBAA0B,IAAtE,oBAAOuC,GAAP,MAAuBC,GAAvB,MA8DMC,GAA2B,SAACC,GACf,qBAAbA,EACFC,YAAiBC,IAAkBC,MAAO,8EAE1CF,YAAiBC,IAAkBE,QAAS,mDAC5CC,KACAC,YAAS,GAAD,OAAIC,IAAYC,SAAhB,OAA0BC,IAAMC,SAItCC,GAAsB,WAS1B,OARcpD,EACXqD,KAAI,SAACC,GAAD,OAAUA,EAAKC,SACnBC,QAAO,SAACC,EAAQH,GAGf,OAFkBG,EAASC,OAAOJ,KAGjC,IAYDR,GAAea,uBAAY,WAC3BlE,GAAKF,EAASqE,IAAcC,aAC/B,CAACpE,EAAKF,IAEHuE,GAAkBH,uBAAY,WAC9BlE,GACFF,EACEwE,IAAkBF,QAAQzB,GAA0B,WAClD,IAAM4B,EAAkB5B,EAAyBJ,OAASC,IACpDgC,EAAe,GACrB1B,GAAkByB,EAAkBC,EAAH,sBAAiB3B,IAAmB2B,UAK1E,CAACxE,EAAK2C,EAA0B7C,IAE7B2E,GAAiBP,uBAAY,WACjCpE,EAAS4E,IAAiBN,QAAQ,CAAEO,aAAc,KAAMC,SAAU,UACjE,CAAC9E,IAEE+E,GAA4BX,uBAAY,WAC5C,OAAIzD,QAAJ,IAAIA,KAAUqE,MAAMhF,EAAS4E,IAAiBN,QAAQ,CAAEQ,SAAQ,OAAEnE,QAAF,IAAEA,OAAF,EAAEA,EAAUqE,KAAMH,aAAc,UAC/F,CAAClE,EAAUX,IAgCd,OA9BAiF,qBAAU,WACRF,OACC,CAACA,KAEJE,qBAAU,WACRN,OACC,CAACA,KAEJM,qBAAU,WACR1B,OACC,CAACA,KAEJ0B,qBAAU,WACRV,OACC,CAACA,KAEJU,qBAAU,WACRvE,EAAgBa,GAAS,MACxB,CAACA,IAEJ0D,qBAAU,WACRC,gBACC,IAEHD,qBAAU,WACR1E,EAAK4E,eAAe,CAClBC,YAAW,OAAEC,UAAF,IAAEA,SAAF,EAAEA,IAA2B,OAEzC,CAAC9E,IAGF,sBAAK+E,UAAU,QAAf,UACE,cAACC,EAAA,EAAD,CAAYC,MAAM,qBAEjBhE,EACC,cAACiE,EAAA,EAAD,IAEA,mCACGtD,EACC,cAACuD,EAAA,EAAD,CACEF,MAAM,qFACNG,YAAa,CAAEH,MAAO,kCAAoBI,QAvHlB,WAClCpC,YAASG,IAAMkC,eAyHP,sBAAKP,UAAU,+CAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,qBAAKA,UAAU,eAAf,gBACG/D,QADH,IACGA,OADH,EACGA,EAAOuC,KAAI,SAACC,GAAU,IAAD,UACd+B,GAA8B,OAAJ/B,QAAI,IAAJA,GAAA,UAAAA,EAAMgC,eAAN,eAAeC,cAAf,OAA6BjC,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAMgC,eAAnC,aAA6B,EAAe/B,OAC5E,OACE,sBAAmBsB,UAAU,qDAA7B,UACE,qBACEA,UAAWW,IAAW,2BAA4B,CAAEC,QAASpE,IAC7D8D,QAAS,kBAnJR,SAACO,GACxB,GAAIjG,EACG4B,GACH9B,EACEoG,IAAiB9B,QAAQ6B,EAAKE,IAAI,WAChClD,YAAiBC,IAAkBE,QAAS,yEAC5CC,aAID,CACL,IAAM+C,EAAeC,YAA6BlF,EAAc8E,EAAKE,IACrErG,EAASwG,KAAUC,gBAAgBH,KAuIMI,CAAiB3C,IAFxC,SAIE,cAAC4C,EAAA,EAAD,CAAMC,KAAMC,IAAUC,UAQxB,qBAAKxB,UAAU,0BAAf,SACE,qBAAKyB,IAAG,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAMgC,eAAR,aAAE,EAAeiB,MAAOC,QAASC,IAAqBC,IAAI,OAEpE,sBAAK7B,UAAU,yBAAf,UACE,qBAAKA,UAAU,0BAAf,SAA0CvB,EAAKgC,QAAQa,OACtD7C,EAAKqD,cAAgBrD,EAAKsD,YACzB,sBAAK/B,UAAU,yBAAf,qBACMgC,YAAwBvD,EAAKqD,aAAcG,IAAYC,QAD7D,mBAC4E,IACzEF,YAAwBvD,EAAKsD,WAAYE,IAAYC,WAI1D,sBAAKlC,UAAU,0BAAf,UACGmC,YAAe,CAAEC,OAAQ3D,EAAKgC,QAAQ/B,MAAO2D,YAAY,IAAS,IAClEC,QAAO,OAAC7D,QAAD,IAACA,GAAD,UAACA,EAAMgC,eAAP,aAAC,EAAeC,aAAeF,GACrC,8BACG2B,YAAe,CACdC,QAAY,OAAJ3D,QAAI,IAAJA,GAAA,UAAAA,EAAMgC,eAAN,eAAeC,YAAa,EACpC2B,YAAY,SAKpB,sBAAKrC,UAAU,gDAAf,qCAEE,cAACuC,EAAA,EAAD,CACEC,MAAO/D,EAAK2D,OACZK,SAAUnG,EACVoG,SAAU,SAACF,GAAD,OAxMX,SAACJ,EAAgBvB,GAC1C,GAAIjG,GACF,IAAK0B,EAAkB,CACrB,IAAMqG,EAAY,CAChBP,UAGF1H,EAASkI,KAAgB5D,QAAQ6B,EAAKE,GAAI4B,EAAW1E,UAElD,CACL,IAAM+C,EAAe6B,YAAmC9G,EAAc8E,EAAKE,GAAIqB,GAC/E1H,EAASwG,KAAUC,gBAAgBH,KA6LgB8B,CAAmBN,EAAO/D,cAzCnDA,EAAKsC,WAsDvB,qBAAKf,UAAU,qBAAf,SACE,qBAAKA,UAAU,aAAf,SACE,eAAC,IAAD,CAAM/E,KAAMA,EAAM8H,SApLT,SAACC,GACxB,GAAIpI,EAAK,CAAC,IAAD,EACDqI,EAAO,CACXnD,YAAW,OAAEkD,QAAF,IAAEA,GAAF,UAAEA,EAAQlD,mBAAV,aAAE,EAAqB0C,MAClCU,WAAiB,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQE,YAAa,GAChCC,gBAAwB,OAAR9H,QAAQ,IAARA,OAAA,EAAAA,EAAU+H,aAAc,GACxCC,gBAAwB,OAARhI,QAAQ,IAARA,OAAA,EAAAA,EAAUiI,cAAe,GACzCC,SAAiB,OAARlI,QAAQ,IAARA,OAAA,EAAAA,EAAUkI,UAAW,GAC9BC,cAAsB,OAARnI,QAAQ,IAARA,OAAA,EAAAA,EAAUoI,QAAS,GACjCC,cAAsB,OAARrI,QAAQ,IAARA,OAAA,EAAAA,EAAUsI,WAAY,GACpCC,UAAkB,OAARvI,QAAQ,IAARA,OAAA,EAAAA,EAAUuI,WAAY,GAChClE,MAAc,OAARrE,QAAQ,IAARA,OAAA,EAAAA,EAAUqE,OAAQ,IAG1BhF,EAASmJ,IAAkB7E,QAAQiE,EAAMtF,UAEzCE,YAAiBC,IAAkBgG,QAAS,oHAoKhC,UACE,qBAAK9D,UAAU,mBAAf,qBACA,cAAC,IAAK+D,KAAN,CAAWzC,KAAK,UAAhB,SACE,cAAC0C,EAAA,EAAD,CACEC,YAAY,oBACZ7E,QAAS3B,GACTyG,WAhJQ,WAC5B1G,EAA4B,2BACvBD,GADsB,IAEzBJ,KAAMI,EAAyBJ,KAAO,MA8IpBgH,SAAU,CACRhH,KAAMI,EAAyBJ,KAC/BE,SAAUE,EAAyBF,SACnCH,MAAOH,GAAqB,GAE9BqH,YAAU,MAId,qBAAKpE,UAAU,mBAAf,sDACA,sBAAKA,UAAU,qBAAf,UACE,0EACA,mCAAI3E,QAAJ,IAAIA,OAAJ,EAAIA,EAAUoI,QACd,mCAAIpI,QAAJ,IAAIA,OAAJ,EAAIA,EAAUkI,UACd,sCAAI7H,EAAakI,SAASS,MAAK,SAAC5F,GAAD,OAAUA,EAAK+D,SAAL,OAAenH,QAAf,IAAeA,OAAf,EAAeA,EAAUuI,oBAAlE,aAAI,EAAyEU,QAC7E,sCAAI5I,EAAagE,KAAK2E,MAAK,SAAC5F,GAAD,OAAUA,EAAK+D,SAAL,OAAenH,QAAf,IAAeA,OAAf,EAAeA,EAAUqE,gBAA9D,aAAI,EAAiE4E,WAEvE,qBAAKtE,UAAU,mBAAf,sDAEA,cAAC,IAAK+D,KAAN,CAAWzC,KAAK,cAAciD,MAAO,CAACC,IAAgBC,YAAtD,SACE,cAACC,EAAA,EAAD,CAAOtF,QAASW,QAElB,qBAAKC,UAAU,mBAAf,wCAEA,cAAC,IAAK+D,KAAN,CAAWzC,KAAK,YAAhB,SACE,cAACqD,EAAA,EAAD,CAAOV,YAAY,2CAGrB,sBAAKjE,UAAU,oBAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAKA,UAAU,iBAAf,UAAiC7E,EAAa2B,OAA9C,yBACA,qBAAKkD,UAAU,iBAAf,SACGmC,YAAe,CAAEC,OAAQ7D,KAAuB8D,YAAY,SAGjE,sBAAKrC,UAAU,iCAAf,UACE,qBAAKA,UAAU,iBAAf,qBACA,qBAAKA,UAAU,iBAAf,yBAEF,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,iBAAf,wCACA,qBAAKA,UAAU,iBAAf,SACE,iCAASmC,YAAe,CAAEC,OAAQ7D,KAAuB8D,YAAY,WAGzE,qBAAKrC,UAAU,mBAAf,SACE,cAAC4E,EAAA,EAAD,CACEC,KAAK,UACL3E,MAAM,wBACN4E,KAAK,QACLC,SAAS,SACTnE,QAASlE,yBC9VpBjC,a","file":"static/js/56.3e7fb4f2.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport classNames from 'classnames';\nimport { Form } from 'antd';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Amount from '@/components/Amount';\nimport Button from '@/components/Button';\nimport Icon, { EIconName } from '@/components/Icon';\nimport AuthHelpers from '@/services/helpers';\nimport { TRootState } from '@/redux/reducers';\nimport { ECartControllerAction } from '@/redux/actions/cart-controller/constants';\nimport PageLoading from '@/components/PageLoading';\nimport EmptyBox from '@/components/EmptyBox';\nimport { LayoutPaths, Paths } from '@/pages/routers';\nimport { TCartResponse } from '@/services/api/cart-controller/types';\nimport {\n  formatISODateToDateTime,\n  formatMoneyVND,\n  handleErrorImageUrl,\n  scrollToTop,\n  showNotification,\n  validationRules,\n} from '@/utils/functions';\nimport { EFormatDate, ETypeNotification } from '@/common/enums';\nimport {\n  createOrderAction,\n  deleteCartAction,\n  getAddressAction,\n  getCartAction,\n  getVouchersAction,\n  patchCartAction,\n  uiActions,\n} from '@/redux/actions';\nimport Select, { TSelectOption } from '@/components/Select';\nimport Input from '@/components/Input';\nimport Radio from '@/components/Radio';\nimport { dataPaymentMethodOptions } from '@/pages/Carts/Carts.data';\nimport { TParamsGetVouchers } from '@/services/api/voucher-controller/types';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { EOrderControllerAction } from '@/redux/actions/order-controller/constants';\nimport { handleChangeAmountCartLocalStorage, handleDeleteCartLocalStorage } from '@/utils/cart';\n\nimport './Carts.scss';\n\nconst Carts: React.FC = () => {\n  const dispatch = useDispatch();\n  const atk = AuthHelpers.getAccessToken();\n  const [form] = Form.useForm();\n\n  const [cartsChecked, setCartsChecked] = useState<TCartResponse[]>([]);\n  const userInfo = useSelector((state: TRootState) => state.authReducer.user);\n  const addressState = useSelector((state: TRootState) => state.addressReducer);\n\n  const cartsDatabase = useSelector((state: TRootState) => state.cartReducer.cart?.cart);\n  const cartsStorage = useSelector((state: TRootState) => state.uiReducer.cartsStorage) || [];\n  const carts = atk ? cartsDatabase : cartsStorage;\n\n  const getCartsLoading = useSelector((state: TRootState) => state.loadingReducer[ECartControllerAction.GET_CART]);\n  const patchCartLoading = useSelector((state: TRootState) => state.loadingReducer[ECartControllerAction.PATCH_CART]);\n  const deleteCartLoading = useSelector((state: TRootState) => state.loadingReducer[ECartControllerAction.DELETE_CART]);\n  const createOrderLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EOrderControllerAction.CREATE_ORDER],\n  );\n  const isEmpty = carts?.length === 0;\n\n  const voucherTotalState = useSelector((state: TRootState) => state.voucherReducer.vouchers?.total);\n  const [getVouchersParamsRequest, setGetVouchersParamsRequest] = useState<TParamsGetVouchers>({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n  const [voucherOptions, setVoucherOptions] = useState<TSelectOption[]>([]);\n\n  // const handleCheckCart = (checked: boolean, data: TCartResponse): void => {\n  //   if (checked) setCartsChecked([...cartsChecked, data]);\n  //   else setCartsChecked(cartsChecked.filter((cart) => cart.id !== data.id));\n  // };\n\n  const handleChangeAmount = (amount: number, data: TCartResponse): void => {\n    if (atk) {\n      if (!patchCartLoading) {\n        const patchBody = {\n          amount,\n        };\n\n        dispatch(patchCartAction.request(data.id, patchBody, getCartsData));\n      }\n    } else {\n      const newCartsData = handleChangeAmountCartLocalStorage(cartsStorage, data.id, amount);\n      dispatch(uiActions.setCartsStorage(newCartsData));\n    }\n  };\n\n  const handleRemoveCart = (data: TCartResponse): void => {\n    if (atk) {\n      if (!deleteCartLoading) {\n        dispatch(\n          deleteCartAction.request(data.id, (): void => {\n            showNotification(ETypeNotification.SUCCESS, 'Xóa sản phẩm khỏi giỏ hàng thành công');\n            getCartsData();\n          }),\n        );\n      }\n    } else {\n      const newCartsData = handleDeleteCartLocalStorage(cartsStorage, data.id);\n      dispatch(uiActions.setCartsStorage(newCartsData));\n    }\n  };\n\n  const handleClickContinueShopping = (): void => {\n    navigate(Paths.Categorys);\n  };\n\n  const handleSubmitCart = (values: any): void => {\n    if (atk) {\n      const body = {\n        typePayment: values?.typePayment?.value,\n        referCode: values?.referCode || '',\n        idCardBackCard: userInfo?.backIdCard || '',\n        idCardFontCard: userInfo?.frontIdCard || '',\n        address: userInfo?.address || '',\n        phoneRevicer: userInfo?.phone || '',\n        nameReceiver: userInfo?.fullName || '',\n        district: userInfo?.district || '',\n        city: userInfo?.city || '',\n      };\n\n      dispatch(createOrderAction.request(body, handleCreateOrderSuccess));\n    } else {\n      showNotification(ETypeNotification.WARNING, 'Vui lòng đăng nhập để tiếp tục thực hiện hành động');\n    }\n  };\n\n  const handleCreateOrderSuccess = (response: any): void => {\n    if (response === 'not enough money') {\n      showNotification(ETypeNotification.ERROR, 'Bạn không đủ tiền để thực hiện');\n    } else {\n      showNotification(ETypeNotification.SUCCESS, 'Tạo đơn hàng thành công');\n      getCartsData();\n      navigate(`${LayoutPaths.Profile}${Paths.Cart}`);\n    }\n  };\n\n  const caculatorTotalPrice = (): number => {\n    const total = cartsChecked\n      .map((item) => item.price)\n      .reduce((result, item) => {\n        const newResult = result + Number(item);\n\n        return newResult;\n      }, 0);\n\n    return total;\n  };\n\n  const handleLoadMoreVoucher = (): void => {\n    setGetVouchersParamsRequest({\n      ...getVouchersParamsRequest,\n      page: getVouchersParamsRequest.page + 1,\n    });\n  };\n\n  const getCartsData = useCallback(() => {\n    if (atk) dispatch(getCartAction.request());\n  }, [atk, dispatch]);\n\n  const getVouchersData = useCallback(() => {\n    if (atk)\n      dispatch(\n        getVouchersAction.request(getVouchersParamsRequest, () => {\n          const isFirstFetching = getVouchersParamsRequest.page === DEFAULT_PAGE;\n          const options: any = [];\n          setVoucherOptions(isFirstFetching ? options : [...voucherOptions, ...options]);\n        }),\n      );\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [atk, getVouchersParamsRequest, dispatch]);\n\n  const getAddressData = useCallback(() => {\n    dispatch(getAddressAction.request({ districtCode: null, cityCode: null }));\n  }, [dispatch]);\n\n  const getAddressWithExistedCity = useCallback((): void => {\n    if (userInfo?.city) dispatch(getAddressAction.request({ cityCode: userInfo?.city, districtCode: null }));\n  }, [userInfo, dispatch]);\n\n  useEffect(() => {\n    getAddressWithExistedCity();\n  }, [getAddressWithExistedCity]);\n\n  useEffect(() => {\n    getAddressData();\n  }, [getAddressData]);\n\n  useEffect(() => {\n    getCartsData();\n  }, [getCartsData]);\n\n  useEffect(() => {\n    getVouchersData();\n  }, [getVouchersData]);\n\n  useEffect(() => {\n    setCartsChecked(carts || []);\n  }, [carts]);\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  useEffect(() => {\n    form.setFieldsValue({\n      typePayment: dataPaymentMethodOptions?.[0],\n    });\n  }, [form]);\n\n  return (\n    <div className=\"Carts\">\n      <HeaderSkew title=\"Giỏ hàng\" />\n\n      {getCartsLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          {isEmpty ? (\n            <EmptyBox\n              title=\"Chưa có sản phẩm nào trong giỏ hàng của bạn\"\n              buttonProps={{ title: 'Tiếp tục mua sắm', onClick: handleClickContinueShopping }}\n            />\n          ) : (\n            <div className=\"Carts-wrapper flex justify-between flex-wrap\">\n              <div className=\"Carts-wrapper-item\">\n                <div className=\"Carts-orders\">\n                  {carts?.map((item) => {\n                    const isSamePriceAndCostPrice = item?.product?.costPrice === item?.product?.price;\n                    return (\n                      <div key={item.id} className=\"Carts-orders-item flex items-start justify-between\">\n                        <div\n                          className={classNames('Carts-orders-item-remove', { loading: deleteCartLoading })}\n                          onClick={(): void => handleRemoveCart(item)}\n                        >\n                          <Icon name={EIconName.Close} />\n                        </div>\n                        {/* <div className=\"Carts-orders-item-check\">\n                          <Checkbox\n                            value={cartsChecked.map((cart) => cart.id).includes(item.id)}\n                            onChange={(checked): void => handleCheckCart(checked, item)}\n                          />\n                        </div> */}\n                        <div className=\"Carts-orders-item-image\">\n                          <img src={item?.product?.image} onError={handleErrorImageUrl} alt=\"\" />\n                        </div>\n                        <div className=\"Carts-orders-item-info\">\n                          <div className=\"Carts-orders-item-title\">{item.product.name}</div>\n                          {item.dateStartEat && item.dateEndEat && (\n                            <div className=\"Carts-orders-item-date\">\n                              Từ {formatISODateToDateTime(item.dateStartEat, EFormatDate.COMMON)} - đến{' '}\n                              {formatISODateToDateTime(item.dateEndEat, EFormatDate.COMMON)}\n                            </div>\n                          )}\n\n                          <div className=\"Carts-orders-item-price\">\n                            {formatMoneyVND({ amount: item.product.price, showSuffix: true })}{' '}\n                            {Boolean(item?.product?.costPrice) && !isSamePriceAndCostPrice && (\n                              <del>\n                                {formatMoneyVND({\n                                  amount: item?.product?.costPrice || 0,\n                                  showSuffix: true,\n                                })}\n                              </del>\n                            )}\n                          </div>\n                          <div className=\"Carts-orders-item-amount flex justify-between\">\n                            Số lượng:\n                            <Amount\n                              value={item.amount}\n                              disabled={patchCartLoading}\n                              onChange={(value): void => handleChangeAmount(value, item)}\n                            />\n                          </div>\n                        </div>\n                        {/* <div className=\"Carts-orders-item-price\">\n                          Tổng tiền\n                          <strong>{formatMoneyVND({ amount: item?.product?.price || 0 })} VND</strong>\n                        </div> */}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <div className=\"Carts-wrapper-item\">\n                <div className=\"Carts-card\">\n                  <Form form={form} onFinish={handleSubmitCart}>\n                    <div className=\"Carts-card-title\">Voucher</div>\n                    <Form.Item name=\"voucher\">\n                      <Select\n                        placeholder=\"Chọn Voucher\"\n                        options={voucherOptions}\n                        onLoadMore={handleLoadMoreVoucher}\n                        paginate={{\n                          page: getVouchersParamsRequest.page,\n                          pageSize: getVouchersParamsRequest.pageSize,\n                          total: voucherTotalState || 0,\n                        }}\n                        allowClear\n                      />\n                    </Form.Item>\n\n                    <div className=\"Carts-card-title\">Địa chỉ của bạn</div>\n                    <div className=\"Carts-card-address\">\n                      <h6>Địa chỉ của bạn</h6>\n                      <p>{userInfo?.phone}</p>\n                      <p>{userInfo?.address}</p>\n                      <p>{addressState.district.find((item) => item.value === userInfo?.district)?.label}</p>\n                      <p>{addressState.city.find((item) => item.value === userInfo?.city)?.label}</p>\n                    </div>\n                    <div className=\"Carts-card-title\">Phương thức thanh toán</div>\n\n                    <Form.Item name=\"typePayment\" rules={[validationRules.required()]}>\n                      <Radio options={dataPaymentMethodOptions} />\n                    </Form.Item>\n                    <div className=\"Carts-card-title\">Mã giới thiệu</div>\n\n                    <Form.Item name=\"referCode\">\n                      <Input placeholder=\"Nhập mã giới thiệu\" />\n                    </Form.Item>\n\n                    <div className=\"Carts-row-summary\">\n                      <div className=\"Carts-row flex justify-between\">\n                        <div className=\"Carts-row-text\">{cartsChecked.length} sản phẩm</div>\n                        <div className=\"Carts-row-text\">\n                          {formatMoneyVND({ amount: caculatorTotalPrice(), showSuffix: true })}\n                        </div>\n                      </div>\n                      <div className=\"Carts-row flex justify-between\">\n                        <div className=\"Carts-row-text\">Voucher</div>\n                        <div className=\"Carts-row-text\">0 đ</div>\n                      </div>\n                      <div className=\"Carts-row flex justify-between\">\n                        <div className=\"Carts-row-text\">Tổng giá tiền</div>\n                        <div className=\"Carts-row-text\">\n                          <strong>{formatMoneyVND({ amount: caculatorTotalPrice(), showSuffix: true })}</strong>\n                        </div>\n                      </div>\n                      <div className=\"Carts-row-submit\">\n                        <Button\n                          type=\"primary\"\n                          title=\"Đặt hàng\"\n                          size=\"large\"\n                          htmlType=\"submit\"\n                          loading={createOrderLoading}\n                        />\n                      </div>\n                    </div>\n                  </Form>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Carts;\n","import Carts from './Carts';\n\nexport default Carts;\n"],"sourceRoot":""}