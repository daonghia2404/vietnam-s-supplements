{"version":3,"sources":["containers/MealScheduleOverview/MealScheduleOverview.enums.ts","components/Calendar/index.ts","components/Calendar/Calendar.tsx","containers/MealOverviewModal/index.ts","containers/MealOverviewModal/MealOverviewModal.tsx","containers/MealScheduleOverview/MealScheduleOverview.data.ts","containers/MealScheduleOverviewModal/index.ts","containers/MealScheduleOverviewModal/MealScheduleOverviewModal.tsx","containers/MealScheduleOverview/MealScheduleOverview.tsx","containers/MealScheduleOverview/index.ts"],"names":["EKeyMealScheduleTab","Calendar","value","onChange","className","visible","dateRange","onDateClick","minDate","maxDate","type","disabledColor","hoverBackgroundColor","weekendsDaysColor","baseColor","MealScheduleOverviewModal","data","onClose","Modal","closeable","wrapClassName","confirmButton","title","hideFooter","map","item","dish","name","processing","weight","kcal","dataTabsMealSchedule","FOOD","label","DRINK","useState","mealOverviewModalState","setMealOverviewModalState","activeKeyMealScheduleTab","setActiveKeyMealScheduleTab","handleOpenMealOverviewModalState","Button","size","shadow","undefined","onClick","key","Icon","EIconName","Info","color","EIconColor","BOULDER","renderSectionTabMealSchedule","MealScheduleOverview","onBack","onNext","userMealScheduleState","useSelector","state","userMealScheduleReducer","userMealSchedule","userMealScheduleFromTodayState","userMealScheduleFromToday","AngleRight","ELECTRIC_VIOLET","style","pointerEvents","Date","moment","dateFrom","format","EFormatDate","MM_DD_YYYY","dateTo","records","formatISODateToDateTime","dateMeal","COMMON","meal1","meal2","meal3","meal","mealIndex","length","join","id","EmptyBox"],"mappings":"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","file":"static/js/9.f7327b53.chunk.js","sourcesContent":["export enum EKeyMealScheduleTab {\n  FOOD = 'FOOD',\n  DRINK = 'DRINK',\n}\n","import Calendar from './Calendar';\n\nexport * from './Calendar.types';\nexport default Calendar;\n","import React from 'react';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport ReactCalendar from 'react-range-calendar';\n\nimport { TCalendarProps } from './Calendar.types';\n\nimport './Calendar.scss';\n\nconst Calendar: React.FC<TCalendarProps> = ({ value = [], onChange }) => {\n  const handleCalendarChange = (minDate: any, maxDate: any): void => {\n    onChange?.([minDate, maxDate]);\n  };\n\n  return (\n    <div className=\"Calendar\">\n      <ReactCalendar\n        visible\n        dateRange={value}\n        onDateClick={handleCalendarChange}\n        type=\"free-range\"\n        disabledColor=\"rgba(0, 0, 0, 0.05)\"\n        hoverBackgroundColor=\"rgba(2, 30, 174, 0.1)\"\n        weekendsDaysColor=\"#fff\"\n        baseColor=\"#021EAE\"\n      />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import MealScheduleOverviewModal from './MealOverviewModal';\n\nexport default MealScheduleOverviewModal;\n","import React from 'react';\n\nimport Modal from '@/components/Modal';\nimport { TMealOverviewModalProps } from '@/containers/MealOverviewModal/MealOverviewModal.types';\n\nimport './MealOverviewModal.scss';\n\nconst MealOverviewModal: React.FC<TMealOverviewModalProps> = ({ visible, data, onClose }) => {\n  return (\n    <Modal\n      closeable\n      wrapClassName=\"MealOverviewModal-wrap\"\n      visible={visible}\n      onClose={onClose}\n      confirmButton={{ title: 'Đồng ý' }}\n      hideFooter\n    >\n      <div className=\"MealOverviewModal-header\">\n        <div className=\"Modal-body-title text-center\">Thông tin</div>\n      </div>\n\n      <div className=\"MealOverviewModal-body\">\n        <div className=\"MealOverviewModal-subtitle\">Cách chế biến</div>\n        <div className=\"MealOverviewModal-description\">\n          {data?.map((item) => `${item.dish.name}: ${item.dish.processing}`)}\n        </div>\n        <div className=\"MealOverviewModal-subtitle\">Khối lượng / Số lượng</div>\n        <div className=\"MealOverviewModal-description\">\n          {data?.map((item) => `${item.dish.name}: ${item.dish.weight}`)}\n        </div>\n        <div className=\"MealOverviewModal-subtitle\">Kcal</div>\n        <div className=\"MealOverviewModal-description\">\n          {data?.map((item) => `${item.dish.name}: ${item.dish.kcal}`)}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default MealOverviewModal;\n","import { EKeyMealScheduleTab } from './MealScheduleOverview.enums';\n\nexport const dataTabsMealSchedule = [\n  { value: EKeyMealScheduleTab.FOOD, label: 'Lịch ăn' },\n  { value: EKeyMealScheduleTab.DRINK, label: 'Lịch uống thuốc' },\n];\n","import MealScheduleOverviewModal from './MealScheduleOverviewModal';\n\nexport default MealScheduleOverviewModal;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState } from 'react';\n\nimport Modal from '@/components/Modal';\nimport { TMealScheduleOverviewModalProps } from '@/containers/MealScheduleOverviewModal/MealScheduleOverviewModal.types';\nimport Button from '@/components/Button';\nimport Icon, { EIconName, EIconColor } from '@/components/Icon';\nimport MealOverviewModal from '@/containers/MealOverviewModal';\nimport { dataTabsMealSchedule } from '@/containers/MealScheduleOverview/MealScheduleOverview.data';\nimport { EKeyMealScheduleTab } from '@/containers/MealScheduleOverview/MealScheduleOverview.enums';\n\nimport './MealScheduleOverviewModal.scss';\n\nconst MealScheduleOverviewModal: React.FC<TMealScheduleOverviewModalProps> = ({ visible, onClose }) => {\n  const [mealOverviewModalState, setMealOverviewModalState] = useState<{\n    visible: boolean;\n  }>({\n    visible: false,\n  });\n  const [activeKeyMealScheduleTab, setActiveKeyMealScheduleTab] = useState<EKeyMealScheduleTab>(\n    EKeyMealScheduleTab.FOOD,\n  );\n\n  const handleOpenMealOverviewModalState = (): void => {\n    setMealOverviewModalState({ visible: true });\n  };\n  const handleCloseMealOverviewModalState = (): void => {\n    setMealOverviewModalState({ visible: false });\n  };\n\n  const handleChangeKeyTabMealSchedule = (key: EKeyMealScheduleTab): void => {\n    setActiveKeyMealScheduleTab(key);\n  };\n\n  const renderSectionTabMealSchedule = (): React.ReactNode => {\n    switch (activeKeyMealScheduleTab) {\n      case EKeyMealScheduleTab.FOOD:\n        return (\n          <div className=\"MealScheduleOverviewModal-body-item\">\n            <div className=\"MealScheduleOverviewModal-subtitle\">Danh sách món chính</div>\n            <ul className=\"MealScheduleOverviewModal-list flex flex-wrap\">\n              {[1, 2, 3, 4].map((item) => (\n                <li\n                  key={item}\n                  className=\"MealScheduleOverviewModal-list-item flex items-center\"\n                  onClick={handleOpenMealOverviewModalState}\n                >\n                  Món số {item}\n                  <Icon name={EIconName.Info} color={EIconColor.BOULDER} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"MealScheduleOverviewModal-subtitle\">Danh sách món bổ trợ</div>\n            <ul className=\"MealScheduleOverviewModal-list flex flex-wrap\">\n              {[1, 2, 3, 4].map((item) => (\n                <li\n                  key={item}\n                  className=\"MealScheduleOverviewModal-list-item flex items-center\"\n                  onClick={handleOpenMealOverviewModalState}\n                >\n                  Món số {item}\n                  <Icon name={EIconName.Info} color={EIconColor.BOULDER} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"MealScheduleOverviewModal-subtitle\">Lưu ý khác</div>\n            <div className=\"MealScheduleOverviewModal-description\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\n              industrys standard dummy text ever since the 1500s\n            </div>\n          </div>\n        );\n      case EKeyMealScheduleTab.DRINK:\n        return (\n          <div className=\"MealScheduleOverviewModal-body-item\">\n            <div className=\"MealScheduleOverviewModal-subtitle\">Các loại vitamin cần bổ sung</div>\n            <ul className=\"MealScheduleOverviewModal-list flex flex-wrap\">\n              {[1, 2, 3, 4].map((item) => (\n                <li\n                  key={item}\n                  className=\"MealScheduleOverviewModal-list-item flex items-center\"\n                  onClick={handleOpenMealOverviewModalState}\n                >\n                  Vitamin {item}\n                  <Icon name={EIconName.Info} color={EIconColor.BOULDER} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"MealScheduleOverviewModal-subtitle\">Lưu ý khác</div>\n            <div className=\"MealScheduleOverviewModal-description\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\n              industrys standard dummy text ever since the 1500s\n            </div>\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n  return (\n    <Modal\n      closeable\n      wrapClassName=\"MealScheduleOverviewModal-wrap\"\n      visible={visible}\n      onClose={onClose}\n      confirmButton={{ title: 'Đồng ý' }}\n    >\n      <div className=\"MealScheduleOverviewModal-header\">\n        <div className=\"Modal-body-title text-center\">Ngày 24/11/2021</div>\n      </div>\n\n      <div className=\"MealScheduleOverviewModal-tabs flex justify-between\">\n        {dataTabsMealSchedule.map((item) => (\n          <div key={item.value} className=\"MealScheduleOverviewModal-tabs-item\">\n            <Button\n              size=\"small\"\n              title={item.label}\n              shadow={false}\n              type={activeKeyMealScheduleTab === item.value ? 'link' : undefined}\n              onClick={(): void => handleChangeKeyTabMealSchedule(item.value)}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"MealScheduleOverviewModal-body\">\n        {renderSectionTabMealSchedule()}\n        <MealOverviewModal {...mealOverviewModalState} onClose={handleCloseMealOverviewModalState} />\n      </div>\n    </Modal>\n  );\n};\n\nexport default MealScheduleOverviewModal;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport Icon, { EIconColor, EIconName } from '@/components/Icon';\nimport Calendar from '@/components/Calendar';\nimport Button from '@/components/Button';\nimport MealScheduleOverviewModal from '@/containers/MealScheduleOverviewModal';\nimport MealOverviewModal from '@/containers/MealOverviewModal';\nimport { dataTabsMealSchedule } from '@/containers/MealScheduleOverview/MealScheduleOverview.data';\nimport { EKeyMealScheduleTab } from '@/containers/MealScheduleOverview/MealScheduleOverview.enums';\nimport { TRootState } from '@/redux/reducers';\nimport { formatISODateToDateTime } from '@/utils/functions';\nimport { EFormatDate } from '@/common/enums';\nimport { TMeal } from '@/services/api/user-meal-schedule-controller/types';\nimport EmptyBox from '@/components/EmptyBox';\n\nimport { TMealScheduleOverviewProps } from './MealScheduleOverview.types';\nimport './MealScheduleOverview.scss';\n\nconst MealScheduleOverview: React.FC<TMealScheduleOverviewProps> = ({ onBack, onNext }) => {\n  const userMealScheduleState = useSelector((state: TRootState) => state.userMealScheduleReducer.userMealSchedule?.[0]);\n  const userMealScheduleFromTodayState = useSelector(\n    (state: TRootState) => state.userMealScheduleReducer.userMealScheduleFromToday,\n  );\n\n  const [mealOverviewModalState, setMealOverviewModalState] = useState<{\n    visible: boolean;\n    data?: TMeal[];\n  }>({\n    visible: false,\n  });\n  const [activeKeyMealScheduleTab, setActiveKeyMealScheduleTab] = useState<EKeyMealScheduleTab>(\n    EKeyMealScheduleTab.FOOD,\n  );\n\n  const handleOpenMealOverviewModalState = (data: TMeal[]): void => {\n    setMealOverviewModalState({ visible: true, data });\n  };\n  const handleCloseMealOverviewModalState = (): void => {\n    setMealOverviewModalState({ visible: false });\n  };\n\n  const handleChangeKeyTabMealSchedule = (key: EKeyMealScheduleTab): void => {\n    setActiveKeyMealScheduleTab(key);\n  };\n\n  const renderSectionTabMealSchedule = (): React.ReactNode => {\n    switch (activeKeyMealScheduleTab) {\n      case EKeyMealScheduleTab.FOOD:\n        return (\n          <>\n            {userMealScheduleFromTodayState?.records?.map((item) => (\n              <div key={item.id} className=\"MealScheduleOverview-main-item\">\n                <div className=\"MealScheduleOverview-subtitle\">\n                  Danh sách món chính ngày: {formatISODateToDateTime(item.dateMeal, EFormatDate.COMMON)}\n                </div>\n                <ul className=\"MealScheduleOverview-list flex flex-wrap\">\n                  {[item.meal1, item.meal2, item.meal3].map((meal, mealIndex) => {\n                    if (meal.length === 0) return <></>;\n\n                    return (\n                      <li\n                        // eslint-disable-next-line react/no-array-index-key\n                        key={mealIndex}\n                        className=\"MealScheduleOverview-list-item flex items-center\"\n                        onClick={(): void => handleOpenMealOverviewModalState(meal)}\n                      >\n                        {meal.map((dish) => dish.dish.name).join(', ')}\n                        <Icon name={EIconName.Info} color={EIconColor.BOULDER} />\n                      </li>\n                    );\n                  })}\n                </ul>\n              </div>\n            ))}\n\n            {/* <div className=\"MealScheduleOverview-subtitle\">Lưu ý khác</div>\n            <div className=\"MealScheduleOverview-description\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\n              industrys standard dummy text ever since the 1500s\n            </div> */}\n          </>\n        );\n      case EKeyMealScheduleTab.DRINK:\n        return (\n          <div className=\"MealScheduleOverview-main-item\">\n            <EmptyBox title=\"Không có dữ liệu lịch uống thuốc\" />\n            {/* <div className=\"MealScheduleOverview-subtitle\">Các loại vitamin cần bổ sung</div>\n            <ul className=\"MealScheduleOverview-list flex flex-wrap\">\n              {[1, 2, 3, 4].map((item) => (\n                <li\n                  key={item}\n                  className=\"MealScheduleOverview-list-item flex items-center\"\n                  onClick={handleOpenMealOverviewModalState}\n                >\n                  Vitamin {item}\n                  <Icon name={EIconName.Info} color={EIconColor.BOULDER} />\n                </li>\n              ))}\n            </ul>\n\n            <div className=\"MealScheduleOverview-subtitle\">Lưu ý khác</div>\n            <div className=\"MealScheduleOverview-description\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the\n              industrys standard dummy text ever since the 1500s\n            </div> */}\n          </div>\n        );\n\n      default:\n        return <></>;\n    }\n  };\n\n  return (\n    <div className=\"MealScheduleOverview\">\n      {onBack && (\n        <div className=\"BodyInformationForm-back flex items-center\" onClick={onBack}>\n          <Icon name={EIconName.AngleRight} color={EIconColor.ELECTRIC_VIOLET} />\n          Quay lại\n        </div>\n      )}\n      <div className=\"MealScheduleOverview-title\">Lịch ăn uống tổng quát</div>\n\n      <div className=\"MealScheduleOverview-calendar\" style={{ pointerEvents: 'none' }}>\n        {userMealScheduleState && (\n          <Calendar\n            value={[\n              new Date(moment(userMealScheduleState?.dateFrom).format(EFormatDate.MM_DD_YYYY)),\n              new Date(moment(userMealScheduleState?.dateTo).format(EFormatDate.MM_DD_YYYY)),\n            ]}\n          />\n        )}\n\n        <div className=\"MealScheduleOverview-description\">\n          Bạn có thể ấn vào từng ngày để xem thông tin chi tiết lịch ăn uống của ngày đó.\n        </div>\n      </div>\n\n      <div className=\"MealScheduleOverview-tabs flex justify-between\">\n        {dataTabsMealSchedule.map((item) => (\n          <div key={item.value} className=\"MealScheduleOverview-tabs-item\">\n            <Button\n              size=\"small\"\n              title={item.label}\n              shadow={false}\n              type={activeKeyMealScheduleTab === item.value ? 'link' : undefined}\n              onClick={(): void => handleChangeKeyTabMealSchedule(item.value)}\n            />\n          </div>\n        ))}\n      </div>\n\n      <div className=\"MealScheduleOverview-main\">{renderSectionTabMealSchedule()}</div>\n\n      {onNext && (\n        <div className=\"MealScheduleOverview-submit flex justify-center\">\n          <Button title=\"Hoàn tất\" type=\"primary\" onClick={onNext} />\n        </div>\n      )}\n\n      <MealScheduleOverviewModal visible={false} />\n\n      <MealOverviewModal {...mealOverviewModalState} onClose={handleCloseMealOverviewModalState} />\n    </div>\n  );\n};\n\nexport default MealScheduleOverview;\n","import MealScheduleOverview from './MealScheduleOverview';\n\nexport default MealScheduleOverview;\n"],"sourceRoot":""}