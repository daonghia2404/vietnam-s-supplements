{"version":3,"sources":["pages/CartDetail/CartDetail.tsx","pages/CartDetail/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","services/api/order-controller/enums.ts","pages/Carts/Carts.data.ts","pages/Cart/Cart.data.ts"],"names":["CartDetail","id","useParams","dispatch","useDispatch","getOrderLoading","useSelector","state","loadingReducer","EOrderControllerAction","GET_ORDER","cancelOrderLoading","CANCEL_ORDER","orderState","orderReducer","order","addressState","addressReducer","isAvaiableCancelOrder","EOrderStatus","PENDING","includes","Number","status","useState","visible","cancelOrderModalState","setCancelOrderModalState","handleCloseCancelOrderModal","handleCancelOrderSuccess","showNotification","ETypeNotification","SUCCESS","navigate","LayoutPaths","Profile","Paths","Cart","getCartDetailData","useCallback","getOrderAction","request","getAddressData","getAddressAction","districtCode","cityCode","getAddressWithExistedCity","city","useEffect","className","PageLoading","HeaderSkew","title","cart","items","map","item","src","product","image","onError","handleErrorImageUrl","alt","name","category","formatMoneyVND","amount","price","showSuffix","namereceiver","phone","district","find","value","label","address","dataPaymentMethodOptions","typePayment","orderCode","classNames","cartFilterTabOptions","color","totalprice","point","Button","type","shadow","onClick","Modal","onClose","cancelButton","disabled","confirmButton","cancelOrderAction","loading","style","marginBottom","center","EOrderPayment","SHIP_COD","WALLET","NULL","INPROCESS","REJECT"],"mappings":"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","file":"static/js/34.632c9515.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { navigate, useParams } from '@reach/router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Button from '@/components/Button';\nimport Modal from '@/components/Modal';\nimport { cancelOrderAction, getAddressAction, getOrderAction } from '@/redux/actions';\nimport { TRootState } from '@/redux/reducers';\nimport { EOrderControllerAction } from '@/redux/actions/order-controller/constants';\nimport PageLoading from '@/components/PageLoading';\nimport { formatMoneyVND, handleErrorImageUrl, showNotification } from '@/utils/functions';\nimport { dataPaymentMethodOptions } from '@/pages/Carts/Carts.data';\nimport { cartFilterTabOptions } from '@/pages/Cart/Cart.data';\nimport { EOrderStatus } from '@/services/api/order-controller/enums';\nimport { ETypeNotification } from '@/common/enums';\nimport { LayoutPaths, Paths } from '@/pages/routers';\n\nimport './CartDetail.scss';\n\nconst CartDetail: React.FC = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n\n  const getOrderLoading = useSelector((state: TRootState) => state.loadingReducer[EOrderControllerAction.GET_ORDER]);\n  const cancelOrderLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EOrderControllerAction.CANCEL_ORDER],\n  );\n  const orderState = useSelector((state: TRootState) => state.orderReducer.order);\n  const addressState = useSelector((state: TRootState) => state.addressReducer);\n\n  const isAvaiableCancelOrder = [EOrderStatus.PENDING].includes(Number(orderState?.status) as EOrderStatus);\n\n  const [cancelOrderModalState, setCancelOrderModalState] = useState<{\n    visible: boolean;\n  }>({\n    visible: false,\n  });\n\n  const handleOpenCancelOrderModal = (): void => {\n    setCancelOrderModalState({\n      visible: true,\n    });\n  };\n\n  const handleCloseCancelOrderModal = (): void => {\n    setCancelOrderModalState({\n      visible: false,\n    });\n  };\n\n  const handleSubmitCancelOrderModal = (): void => {\n    dispatch(cancelOrderAction.request(id, handleCancelOrderSuccess));\n  };\n\n  const handleCancelOrderSuccess = (): void => {\n    showNotification(ETypeNotification.SUCCESS, 'Huỷ đơn hàng thành công');\n    handleCloseCancelOrderModal();\n    navigate(`${LayoutPaths.Profile}${Paths.Cart}`);\n  };\n\n  const getCartDetailData = useCallback(() => {\n    if (id) dispatch(getOrderAction.request(id));\n  }, [dispatch, id]);\n\n  const getAddressData = useCallback(() => {\n    dispatch(getAddressAction.request({ districtCode: null, cityCode: null }));\n  }, [dispatch]);\n\n  const getAddressWithExistedCity = useCallback((): void => {\n    if (orderState?.city) dispatch(getAddressAction.request({ cityCode: orderState?.city, districtCode: null }));\n  }, [orderState, dispatch]);\n\n  useEffect(() => {\n    getAddressWithExistedCity();\n  }, [getAddressWithExistedCity]);\n\n  useEffect(() => {\n    getAddressData();\n  }, [getAddressData]);\n\n  useEffect(() => {\n    getCartDetailData();\n  }, [getCartDetailData]);\n\n  return (\n    <div className=\"CartDetail style-container\">\n      {getOrderLoading ? (\n        <PageLoading />\n      ) : (\n        <>\n          <HeaderSkew title=\"Chi tiết đơn hàng\" />\n\n          <div className=\"CartDetail-main\">\n            <div className=\"CartDetail-main-list\">\n              {orderState?.cart?.items?.map((item) => (\n                <div key={item.id} className=\"CartDetail-main-list-item flex\">\n                  <div className=\"CartDetail-main-list-item-image\">\n                    <img src={item?.product?.image} onError={handleErrorImageUrl} alt=\"\" />\n                  </div>\n                  <div className=\"CartDetail-main-list-item-info\">\n                    <div className=\"CartDetail-main-list-item-info-title\">{item.product.name}</div>\n                    <div className=\"CartDetail-main-list-item-info-category\">\n                      Phân loại: <span>{item.product.category.name}</span>\n                    </div>\n                    <div className=\"CartDetail-main-list-item-info-price flex justify-between\">\n                      {formatMoneyVND({ amount: item.product.price, showSuffix: true })}\n                      <span className=\"CartDetail-main-list-item-info-amount\">Số lượng: {item.amount}</span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"CartDetail-main-group\">\n              <div className=\"CartDetail-subtitle\">Địa chỉ của bạn</div>\n\n              <div className=\"CartDetail-address\">\n                <div className=\"CartDetail-address-title\">{orderState?.namereceiver}</div>\n                <div className=\"CartDetail-address-description\">{orderState?.phone}</div>\n                <div className=\"CartDetail-address-description\">\n                  {addressState.district.find((item) => item.value === orderState?.district)?.label},{' '}\n                  {addressState.city.find((item) => item.value === orderState?.city)?.label}\n                </div>\n                <div className=\"CartDetail-address-description\">{orderState?.address}</div>\n              </div>\n            </div>\n            <div className=\"CartDetail-main-group\">\n              <div className=\"CartDetail-main-group-row flex justify-between\">\n                <div className=\"CartDetail-text\">Phương thức thanh toán</div>\n                <div className=\"CartDetail-text\">\n                  {dataPaymentMethodOptions.find((item) => item.value === orderState?.typePayment)?.label}\n                </div>\n              </div>\n              <div className=\"CartDetail-main-group-row flex justify-between\">\n                <div className=\"CartDetail-text\">Mã đơn hàng</div>\n                <div className=\"CartDetail-text\">{orderState?.orderCode}</div>\n              </div>\n              <div className=\"CartDetail-main-group-row flex justify-between\">\n                <div className=\"CartDetail-text\">Trạng thái đơn hàng</div>\n                <div\n                  className={classNames(\n                    'CartDetail-text',\n                    cartFilterTabOptions.find((item) => item.value === Number(orderState?.status))?.color,\n                  )}\n                >\n                  {cartFilterTabOptions.find((item) => item.value === Number(orderState?.status))?.label}\n                </div>\n              </div>\n              <div className=\"CartDetail-main-group-row flex justify-between\">\n                <div className=\"CartDetail-text\">Tổng số tiền</div>\n                <div className=\"CartDetail-text hightlight\">\n                  {formatMoneyVND({ amount: orderState?.totalprice || 0, showSuffix: true })}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"CartDetail-main-group\">\n              <div className=\"CartDetail-main-group-row flex justify-between\">\n                <div className=\"CartDetail-text\">Tích điểm</div>\n                <div className=\"CartDetail-text success\">+ {orderState?.point || 0} diểm</div>\n              </div>\n            </div>\n\n            {isAvaiableCancelOrder && (\n              <div className=\"CartDetail-cancel flex justify-center\">\n                <Button type=\"ghost\" title=\"Huỷ đơn hàng\" shadow={false} onClick={handleOpenCancelOrderModal} />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n\n      <Modal\n        {...cancelOrderModalState}\n        onClose={handleCloseCancelOrderModal}\n        cancelButton={{ title: 'Huỷ bỏ', onClick: handleCloseCancelOrderModal, disabled: cancelOrderLoading }}\n        confirmButton={{ title: 'Đồng ý', onClick: handleSubmitCancelOrderModal, loading: cancelOrderLoading }}\n      >\n        <div className=\"Modal-body-title\" style={{ marginBottom: '1.5rem' }}>\n          Thông báo\n        </div>\n        <div className=\"Modal-body-description\">Bạn xác nhận huỷ đơn hàng hiện tại ?</div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CartDetail;\n","import CartDetail from './CartDetail';\n\nexport default CartDetail;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","export enum EOrderStatus {\n  NULL = '',\n  PENDING = 0,\n  INPROCESS = 1,\n  SUCCESS = 2,\n  REJECT = 3,\n  SHIPCODE = 4,\n}\n\nexport enum EOrderPayment {\n  SHIP_COD = '1',\n  WALLET = '2',\n}\n","import { EOrderPayment } from '@/services/api/order-controller/enums';\n\nexport const dataPaymentMethodOptions = [\n  { label: 'Thanh toán khi nhận hàng', value: EOrderPayment.SHIP_COD },\n  { label: 'Thanh toán trực tiếp (qua cổng thanh toán Appota)', value: EOrderPayment.WALLET },\n];\n","import { EOrderStatus } from '@/services/api/order-controller/enums';\n\nexport const cartFilterTabOptions = [\n  { label: 'Tất cả', value: EOrderStatus.NULL },\n  { color: 'warning', label: 'Chờ xác nhận', value: EOrderStatus.PENDING },\n  { color: 'hightlight', label: 'Đang giao', value: EOrderStatus.INPROCESS },\n  { color: 'success', label: 'Hoàn thành', value: EOrderStatus.SUCCESS },\n  { color: 'error', label: 'Đã huỷ', value: EOrderStatus.REJECT },\n];\n"],"sourceRoot":""}