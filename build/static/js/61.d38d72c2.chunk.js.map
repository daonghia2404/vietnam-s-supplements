{"version":3,"sources":["pages/News/News.tsx","pages/News/index.ts"],"names":["News","dispatch","useDispatch","useState","page","DEFAULT_PAGE","pageSize","DEFAULT_PAGE_SIZE","getNewsParamsRequest","setGetNewsParamsRequest","news","useSelector","state","newReducer","newsTotal","total","isEmpty","records","length","newsCarouselData","splice","map","item","id","String","title","image","description","shareUrl","Paths","HandbookDetail","getNewsLoading","loadingReducer","ENewControllerAction","GET_NEWS","getNewsData","useCallback","getNewsAction","request","useEffect","scrollToTop","className","PageLoading","HeaderSkew","NewsCarousel","type","ENewsCarouselType","NEWS","data","EmptyBox","NewBlock","url","NewDetail","Pagination","onChange"],"mappings":"0SAsGeA,EAlFQ,WAAO,IAAD,MACrBC,EAAWC,cACjB,EAAwDC,mBAAyB,CAC/EC,KAAMC,IACNC,SAAUC,MAFZ,mBAAOC,EAAP,KAA6BC,EAA7B,KAIMC,EAAOC,aAAY,SAACC,GAAD,OAAuBA,EAAMC,WAAWH,QAC3DI,EAAYH,aAAY,SAACC,GAAD,uBAAuBA,EAAMC,WAAWH,YAAxC,aAAuB,EAAuBK,SACtEC,EAAmC,KAArB,OAAJN,QAAI,IAAJA,OAAA,EAAAA,EAAMO,QAAQC,QAExBC,EAAgB,uBAAY,OAAJT,QAAI,IAAJA,OAAA,EAAAA,EAAMO,UAAW,WAAzB,iBAAG,EAA4BG,OAAO,EAAG,UAAzC,aAAG,EAA0CC,KAAI,SAACC,GAAD,MAAW,CAChFC,GAAIC,OAAOF,EAAKC,IAChBE,MAAOH,EAAKG,MACZC,MAAOJ,EAAKI,MACZC,YAAaL,EAAKK,YAClBC,SAAS,GAAD,OAAKC,IAAMC,eAAeN,OAAOF,EAAKC,UAG1CQ,EAAiBpB,aAAY,SAACC,GAAD,OAAuBA,EAAMoB,eAAeC,IAAqBC,aAU9FC,EAAcC,uBAAY,WAC9BnC,EAASoC,IAAcC,QAAQ9B,MAC9B,CAACP,EAAUO,IAUd,OARA+B,qBAAU,WACRJ,MACC,CAACA,IAEJI,qBAAU,WACRC,gBACC,IAGD,qBAAKC,UAAU,OAAf,SACGV,EACC,cAACW,EAAA,EAAD,IAEA,sBAAKD,UAAU,eAAf,UACE,cAACE,EAAA,EAAD,CAAYlB,MAAM,kBAEhBT,GAAW,cAAC4B,EAAA,EAAD,CAAcC,KAAMC,IAAkBC,KAAMC,KAAM7B,IAE/D,qBAAKsB,UAAU,aAAf,0BACCzB,EACC,cAACiC,EAAA,EAAD,CAAUxB,MAAM,kDAEhB,qBAAKgB,UAAU,2BAAf,gBACG/B,QADH,IACGA,GADH,UACGA,EAAMO,eADT,aACG,EAAeI,KAAI,SAACC,GAAD,OAClB,qBAAmBmB,UAAU,iBAA7B,SACE,cAACS,EAAA,EAAD,CACExB,MAAOJ,EAAKI,MACZD,MAAOH,EAAKG,MACZE,YAAaL,EAAKK,YAClBwB,IAAKtB,IAAMuB,UAAU5B,OAAOF,EAAKC,QAL3BD,EAAKC,SAYrB,qBAAKkB,UAAU,sCAAf,SACE,cAACY,EAAA,EAAD,CACEjD,KAAMI,EAAqBJ,KAC3BE,SAAUE,EAAqBF,SAC/BS,MAAOD,EACPwC,SArDa,SAAClD,EAAcE,GACtCG,EAAwB,2BACnBD,GADkB,IAErBJ,OACAE,SAAUA,GAAYE,EAAqBF,uBC1ClCN,a","file":"static/js/61.d38d72c2.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport NewBlock from '@/components/NewBlock';\nimport Pagination from '@/components/Pagination';\nimport NewsCarousel from '@/containers/NewsCarousel';\nimport { DEFAULT_PAGE, DEFAULT_PAGE_SIZE } from '@/common/constants';\nimport { getNewsAction } from '@/redux/actions';\nimport { ENewControllerAction } from '@/redux/actions/new-controller/constants';\nimport { TRootState } from '@/redux/reducers';\nimport { TParamsGetNews } from '@/services/api/new-controller/types';\nimport PageLoading from '@/components/PageLoading';\nimport EmptyBox from '@/components/EmptyBox';\n\nimport './News.scss';\nimport { Paths } from '@/pages/routers';\nimport { scrollToTop } from '@/utils/functions';\nimport { ENewsCarouselType } from '@/containers/NewsCarousel/NewsCarousel.enums';\n\nconst News: React.FC = () => {\n  const dispatch = useDispatch();\n  const [getNewsParamsRequest, setGetNewsParamsRequest] = useState<TParamsGetNews>({\n    page: DEFAULT_PAGE,\n    pageSize: DEFAULT_PAGE_SIZE,\n  });\n  const news = useSelector((state: TRootState) => state.newReducer.news);\n  const newsTotal = useSelector((state: TRootState) => state.newReducer.news?.total);\n  const isEmpty = news?.records.length === 0;\n\n  const newsCarouselData = [...(news?.records || [])]?.splice(0, 3)?.map((item) => ({\n    id: String(item.id),\n    title: item.title,\n    image: item.image,\n    description: item.description,\n    shareUrl: `${Paths.HandbookDetail(String(item.id))}`,\n  }));\n\n  const getNewsLoading = useSelector((state: TRootState) => state.loadingReducer[ENewControllerAction.GET_NEWS]);\n\n  const handlePageChange = (page: number, pageSize?: number): void => {\n    setGetNewsParamsRequest({\n      ...getNewsParamsRequest,\n      page,\n      pageSize: pageSize || getNewsParamsRequest.pageSize,\n    });\n  };\n\n  const getNewsData = useCallback(() => {\n    dispatch(getNewsAction.request(getNewsParamsRequest));\n  }, [dispatch, getNewsParamsRequest]);\n\n  useEffect(() => {\n    getNewsData();\n  }, [getNewsData]);\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <div className=\"News\">\n      {getNewsLoading ? (\n        <PageLoading />\n      ) : (\n        <div className=\"News-wrapper\">\n          <HeaderSkew title=\"Tin tức\" />\n\n          {!isEmpty && <NewsCarousel type={ENewsCarouselType.NEWS} data={newsCarouselData} />}\n\n          <div className=\"News-title\">Tin tức</div>\n          {isEmpty ? (\n            <EmptyBox title=\"Không có dữ liệu tin tức\" />\n          ) : (\n            <div className=\"News-list flex flex-wrap\">\n              {news?.records?.map((item) => (\n                <div key={item.id} className=\"News-list-item\">\n                  <NewBlock\n                    image={item.image}\n                    title={item.title}\n                    description={item.description}\n                    url={Paths.NewDetail(String(item.id))}\n                  />\n                </div>\n              ))}\n            </div>\n          )}\n\n          <div className=\"News-pagination flex justify-center\">\n            <Pagination\n              page={getNewsParamsRequest.page}\n              pageSize={getNewsParamsRequest.pageSize}\n              total={newsTotal}\n              onChange={handlePageChange}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default News;\n","import News from './News';\n\nexport default News;\n"],"sourceRoot":""}