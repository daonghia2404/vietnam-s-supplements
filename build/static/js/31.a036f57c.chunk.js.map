{"version":3,"sources":["pages/Contact/Contact.tsx","pages/Contact/index.ts","components/HeaderSkew/HeaderSkew.tsx","components/HeaderSkew/index.ts","components/TextArea/TextArea.tsx","components/TextArea/index.ts"],"names":["Contact","dispatch","useDispatch","Form","useForm","form","postContactLoading","useSelector","state","loadingReducer","EContactControllerAction","POST_CONTACT","handlePostContactSuccess","showNotification","ETypeNotification","SUCCESS","resetFields","useEffect","scrollToTop","className","HeaderSkew","title","Icon","name","EIconName","MapMarker","Phone","Mail","src","layout","onFinish","values","body","fullname","phone","email","description","postContactAction","request","Item","rules","validationRules","required","Input","placeholder","onlyNumeric","TextArea","Button","type","htmlType","loading","center","onClick","classNames","AntdTextArea","size","onChange","value"],"mappings":"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","file":"static/js/31.a036f57c.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport HeaderSkew from '@/components/HeaderSkew';\nimport Icon, { EIconName } from '@/components/Icon';\nimport { scrollToTop, showNotification, validationRules } from '@/utils/functions';\nimport Input from '@/components/Input';\nimport Button from '@/components/Button';\nimport TextArea from '@/components/TextArea';\nimport { postContactAction } from '@/redux/actions';\nimport { ETypeNotification } from '@/common/enums';\nimport { TRootState } from '@/redux/reducers';\nimport { EContactControllerAction } from '@/redux/actions/contact-controller/constants';\n\nimport './Contact.scss';\n\nconst Contact: React.FC = () => {\n  const dispatch = useDispatch();\n  const [form] = Form.useForm();\n\n  const postContactLoading = useSelector(\n    (state: TRootState) => state.loadingReducer[EContactControllerAction.POST_CONTACT],\n  );\n\n  const handleSubmit = (values: any): void => {\n    const body = {\n      fullname: values?.fullname,\n      phone: values?.phone,\n      email: values?.email,\n      description: values?.description,\n      title: values?.title,\n    };\n\n    dispatch(postContactAction.request(body, handlePostContactSuccess));\n  };\n\n  const handlePostContactSuccess = (): void => {\n    showNotification(\n      ETypeNotification.SUCCESS,\n      'Gửi biểu mẫu liên hệ thành công. Chúng tôi sẽ phản hồi với bạn trong thời gian sớm nhất',\n    );\n    form.resetFields();\n  };\n\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  return (\n    <div className=\"Contact\">\n      <HeaderSkew title=\"Liên hệ\" />\n      <div className=\"Contact-title\">Công ty TNHH {`Vietnam's`} Supplements</div>\n      <div className=\"Contact-address flex items-start\">\n        <Icon name={EIconName.MapMarker} />\n        186 Tôn Đức Thắng, Quận Đống Đa, Hà Nội\n      </div>\n      <div className=\"Contact-address flex items-start\">\n        <Icon name={EIconName.Phone} />\n        0945449229\n      </div>\n      <div className=\"Contact-address flex items-start\">\n        <Icon name={EIconName.Mail} />\n        vnsupplements@gmail.com\n      </div>\n\n      <div className=\"Contact-map\">\n        <iframe\n          title=\"map\"\n          src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d7447.890735357038!2d105.81784084688105!3d21.03487186850815!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3135ab128c820ed1%3A0x36755994e4cda933!2sALC%20CORP!5e0!3m2!1svi!2s!4v1579565109435!5m2!1svi!2s\"\n        />\n      </div>\n\n      <div className=\"Contact-title\">Nếu bạn có bất kỳ thắc mắc nào hãy liên hệ với chúng tôi</div>\n\n      <Form form={form} layout=\"vertical\" onFinish={handleSubmit}>\n        <div className=\"Contact-row two flex justify-between flex-wrap\">\n          <Form.Item name=\"fullname\" rules={[validationRules.required()]}>\n            <Input placeholder=\"Họ tên\" />\n          </Form.Item>\n          <Form.Item name=\"phone\" rules={[validationRules.required(), validationRules.onlyNumeric()]}>\n            <Input placeholder=\"Số điện thoại\" />\n          </Form.Item>\n        </div>\n        <div className=\"Contact-row two flex justify-between flex-wrap\">\n          <Form.Item name=\"email\" rules={[validationRules.required(), validationRules.email()]}>\n            <Input placeholder=\"Email\" />\n          </Form.Item>\n          <Form.Item name=\"title\" rules={[validationRules.required()]}>\n            <Input placeholder=\"Tiêu đề\" />\n          </Form.Item>\n        </div>\n        <div className=\"Contact-row\">\n          <Form.Item name=\"description\" rules={[validationRules.required()]}>\n            <TextArea placeholder=\"Nội dung\" />\n          </Form.Item>\n        </div>\n\n        <Form.Item>\n          <Button title=\"Gửi liên hệ\" type=\"primary\" htmlType=\"submit\" loading={postContactLoading} />\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default Contact;\n","import Contact from './Contact';\n\nexport default Contact;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { THeaderSkewProps } from '@/components/HeaderSkew/HeaderSkew.types';\n\nimport './HeaderSkew.scss';\n\nconst HeaderSkew: React.FC<THeaderSkewProps> = ({ className, center, title, onClick }) => {\n  return (\n    <div\n      className={classNames('HeaderSkew flex', className, { 'justify-center': center }, { 'cursor-pointer': onClick })}\n      onClick={onClick}\n    >\n      <div className=\"HeaderSkew-item\">\n        <div className=\"HeaderSkew-title\">{title}</div>\n        <div className=\"HeaderSkew-subtitle\">VNSUPPLEMENTS</div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeaderSkew;\n","import HeaderSkew from './HeaderSkew';\n\nexport * from './HeaderSkew.types';\nexport default HeaderSkew;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Input } from 'antd';\n\nimport { TTextAreaProps } from '@/components/TextArea/TextArea.types';\n\nimport './TextArea.scss';\n\nconst { TextArea: AntdTextArea } = Input;\n\nconst TextArea: React.FC<TTextAreaProps> = ({ className, size, placeholder, onChange, value }) => {\n  return (\n    <div className={classNames('TextArea', className)}>\n      <AntdTextArea size={size} placeholder={placeholder} value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default TextArea;\n","import TextArea from './TextArea';\n\nexport * from './TextArea.types';\nexport default TextArea;\n"],"sourceRoot":""}